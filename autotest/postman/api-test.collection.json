{
  "info": {
    "_postman_id": "03644ca1-b603-43cf-b637-158459a1510f",
    "name": "apitest",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "19283906",
    "_collection_link": "https://vikadev.postman.co/workspace/vika~4f30931c-e05d-4687-83c6-56196bea9e0a/collection/19283906-03644ca1-b603-43cf-b637-158459a1510f?action=share&source=collection_link&creator=19283906"
  },
  "item": [
    {
      "name": "fusionapitest",
      "item": [
        {
          "name": "筛选",
          "item": [
            {
              "name": "成员类型筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"http状态码200判断\", function () { //http状态码等于200判断\r",
                      "//     pm.response.to.have.status(200);\r",
                      "// });\r",
                      "// const jsonData = pm.response.json();//获取接口返回json参数值存储在jsondata变量中\r",
                      "\r",
                      "// pm.test(\"判断接口返回的json参数值中recordId等于rec7sey6y6GID\", function () {\r",
                      "//     pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "// });\r",
                      "// pm.test(\"判断接口返回的json参数值成员name等于李四\", function () {\r",
                      "//     pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"李四\");\r",
                      "// });\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "viewId",
                    "value": "viw2qHANeoN5Z",
                    "type": "text"
                  },
                  {
                    "key": "fieldKey",
                    "value": "name",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcbRlCPuhaJ6\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwjocChGCK1S&fieldKey=name",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwjocChGCK1S"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取成员筛选后结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"http状态码200判断\", function () {//http状态码判断\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "const jsonData = pm.response.json();//接口获取返回json参数值存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回json参数值成员name等于李四\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"李四\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值PageSize等于1\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中records数组中第一个数组id等于rec7sey6y6GID\", function () {//\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中智能公式内容等于李四\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.智能公式[0]).to.eql(\"李四\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中成员name等于李四\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"李四\");\r",
                      "});\r",
                      "pm.test(\"success是true判断\", function () {\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"接口返回信息判断\", function () {\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw2qHANeoN5Z&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw2qHANeoN5Z"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "单选类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"http状态码200判断\", function () {//Http状态码等于200判断\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "const jsonData = pm.response.json();//接口返回参数存储在jsonData变量中\r",
                      "pm.test(\"判断接口返回的Json参数值中records数组中第一个数组recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值单选结果等于良\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"良\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcXkrQaelnW6\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw9CJwi7qCiG&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw9CJwi7qCiG"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取单选作为筛选条件筛选后结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"http状态码200判断\", function () {//http状态码等于200判断\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "const jsonData = pm.response.json();//接口返回的值存储在jsonData变量\r",
                      "pm.test(\"判断接口返回的json参数值中符合条件的记录数pageSize等于1\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中成员name等于彭进\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中resordid值等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中单选等于良\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"良\");\r",
                      "});\r",
                      "pm.test(\"success判断\", function () {\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"message判断\", function () {\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw9CJwi7qCiG&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw9CJwi7qCiG"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "成绩筛选后结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"http状态码200判断\", function () {//http状态码等于200判断\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData变量中\r",
                      "pm.test(\"判断接口返回的json参数值中数值recordId等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中recordId参数等于recA1Ju7x6zcA判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.关联成绩表[0]).to.eql(\"recA1Ju7x6zcA\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcBy3ndehy5Z\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwNJdUStz809&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwNJdUStz809"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取成绩表筛选后的结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData变量中\r",
                      "pm.test(\"判断接口返回的json参数值符合记录的pagesize等于1\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中关联ID等于recA1Ju7x6zcA\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.关联成绩表[0]).to.eql(\"recA1Ju7x6zcA\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中第一个数组id等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwNJdUStz809&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwNJdUStz809"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "多选筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData变量中\r",
                      "\r",
                      "pm.test(\"判断接口返回json参数值中多选内容第一个数组值等于良\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.多选类型[0]).to.eql(\"良\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中多选内容第二个数组值等于差\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.多选类型[1]).to.eql(\"差\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中数组中recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atce4GOinszX1\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwofQlXpzXxu&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwofQlXpzXxu"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取多选筛选后的结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData变量中\r",
                      "pm.test(\"判断接口返回json参数值中符合pagesize等于1的记录数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中多选数组值中第一个数组值等于良\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.多选类型[0]).to.eql(\"良\");\r",
                      "});\r",
                      "pm.test(\"判断接口范湖json参数值中多选数组值中第二个数组值等于差\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.多选类型[1]).to.eql(\"差\");\r",
                      "});\r",
                      "pm.test(\"判断接口参数json参数值中数组reordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwofQlXpzXxu&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwofQlXpzXxu"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "数字类型作为筛选条件",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData变量中\r",
                      "pm.test(\"判断接口返回json参数值中数字内容等于30\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.数字类型01).to.eql(30);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中数字内容等于30\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.数字类型01).to.eql(30);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcmJ6IevGiV8\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc3iuQCS6KaA\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwXoJvtvbMrq&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwXoJvtvbMrq"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "数字类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData变量中\r",
                      "pm.test(\"判断接口返回json参数值中符合记录的pagesize记录数等于2\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(2);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回json参数值中数字内容等于30\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.数字类型01).to.eql(30);\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中数字内容等于30\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.数字类型01).to.eql(30);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中数字内容等于30\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.数字类型01).to.eql(30);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwXoJvtvbMrq&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwXoJvtvbMrq"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "货币类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); //接口返回的参数值存储在变量jsonData变量中\r",
                      "pm.test(\"判断接口返回的json参数值中货币数等于3\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.货币类型).to.eql(3);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中recordId等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcJ2gk0JDh6y\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwxD5zYXAIdP&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwxD5zYXAIdP"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取货币类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回json参数值存储在jsonData变量中\r",
                      "pm.test(\"判断接口返回的json参数值中符合记录的pageSize记录数等于1\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值中百分比等于13%\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.百分比类型).to.eql(0.13);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中数组recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwGia4kaxe5e&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwGia4kaxe5e"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "百分比类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的json参数值的百分数等于13%\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.百分比类型).to.eql(0.13);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636969140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc4rPCi9UdqG\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwGia4kaxe5e&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwGia4kaxe5e"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数存储在变量jsondata变量中\r",
                      "pm.test(\"接口返回的json参数值中符合记录的pagesize记录数等于1\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"接口返回的json参数值中货币等于3\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.货币类型).to.eql(3);\r",
                      "});\r",
                      "pm.test(\"接口返回的json参数值中recordid值等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwxD5zYXAIdP&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwxD5zYXAIdP"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "日期类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数存储在变量jsondata中\r",
                      "pm.test(\"判断接口返回的json参数值中日期等于2021/01/15的时间搓等于1610703540000\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1610703540000);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中record数组值中recordid值等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中日期等于2021/01/15的时间搓等于1610680620000\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1610680620000);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中recordid等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1610703540000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc1qS0TVJJfI\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1610680620000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atclZLVr7GLik\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwpkNux6FQgD&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwpkNux6FQgD"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取日期筛选后的结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsondata中\r",
                      "pm.test(\"判断接口返回的json参数值中符合记录的pagesize记录数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(2);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中日期等于2021/01/15的时间搓等于1610703540000\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1610703540000);\r",
                      "});\r",
                      "pm.test(\"recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中日期等于2021/01/15的时间搓等于1610680620000\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1610680620000);\r",
                      "});\r",
                      "pm.test(\"recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwpkNux6FQgD&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwpkNux6FQgD"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "附件类型筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的json参数值recordid数组值等于rec5E2SqWcbN0\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中复选框为勾选状态\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.复选框类型).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值recordid数组值等于rec7sey6y6GID\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中复选框为勾选状态\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.复选框类型).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcsWlH58ZVO2\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcJWWdOR6LWn\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwNG4otXRMPb&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwNG4otXRMPb"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取附件类型筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsondata中\r",
                      "pm.test(\"判断接口返回的json参数值中符合记录的pagesize的记录数等于4\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中records数组中recordid等于rec5E2SqWcbN0\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件类型名称为01.gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.附件类型[0].name).to.eql(\"01.gif\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件大小等于30996\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.附件类型[0].size).to.eql(30996);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中type类型等于image/gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.附件类型[0].mimeType).to.eql(\"image/gif\");\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回的json参数值中records数组中recordid等于rec7sey6y6GID\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回的json参数值中附件类型名称为01.gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.附件类型[0].name).to.eql(\"01.gif\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件大小等于30996\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.附件类型[0].size).to.eql(30996);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中type类型等于image/gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.附件类型[0].mimeType).to.eql(\"image/gif\");\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回的json参数值中records数组中recordid等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回的json参数值中附件类型名称为成绩表-表格全文.xlsx\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.附件类型[0].name).to.eql(\"成绩表-表格全文.xlsx\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件大小等于9332\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.附件类型[0].size).to.eql(9332);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中type类型等于application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.附件类型[0].mimeType).to.eql(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回的json参数值中records数组中recordid等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "\r",
                      "pm.test(\"判断接口返回的json参数值中附件类型名称为208.gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.附件类型[0].name).to.eql(\"208.gif\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件大小等于969376\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.附件类型[0].size).to.eql(969376);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中type类型等于image/gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.附件类型[0].mimeType).to.eql(\"image/gif\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwiZA4Sj4DD4&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwiZA4Sj4DD4"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "复选框筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsonData中\r",
                      "pm.test(\"判断接口返回的json参数值中recordid数组值id等于rec5E2SqWcbN0\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值附件类型name等于01.gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.附件类型[0].name).to.eql(\"01.gif\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件大小size等于30996\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.附件类型[0].size).to.eql(30996);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中附件类型type等于image/gif\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.附件类型[0].mimeType).to.eql(\"image/gif\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc2iJe9ll3gm\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcQfqQLWlGQz\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwiZA4Sj4DD4&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwiZA4Sj4DD4"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后的符合筛选条件的记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsondata中\r",
                      "pm.test(\"返回json参数值符合条件记录总数pageSize判断\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                      "});\r",
                      "pm.test(\"第一条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第一条数据复选是否等于true判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.复选框类型).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"第二条数据复选是否等于true判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.复选框类型).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"第二条数据复选是否等于true判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.复选框类型).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"第三条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "pm.test(\"第三条数据复选是否等于true判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.复选框类型).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"第四条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第四条数据复选是否等于true判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.复选框类型).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwNG4otXRMPb&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwNG4otXRMPb"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "分数类型判断",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在变量jsondata中\r",
                      "pm.test(\"接口返回的json参数值分数等于6分判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.分数类型).to.eql(6);\r",
                      "});\r",
                      "pm.test(\"接口返回的json参数值分数等于6分recordId等于rec2MeBoOPCBt判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1610680620000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcUMTGeH7syr\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwc16hLujarx&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwc16hLujarx"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后分数判断",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数值存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的json参数值中符合条件记录总数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值分数等于6分判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.分数类型).to.eql(6);\r",
                      "});\r",
                      "pm.test(\"判断接口返回json参数值分数等于6分的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwc16hLujarx&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwc16hLujarx"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "网页类型筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口json返回的参数值后网页类型等于vika.cn判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.网页类型.title).to.eql(\"vika.cn\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值等于vika.cn的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1610703540000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcQr2LvRfRQX\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw4xvUVDk2VP&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw4xvUVDk2VP"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取网页类型筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//接口返回的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回json参数值中符合条件记录总数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中网页类型等于vika.cn的recordId等于recA0Pi3K5ZKw\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值网页名称是否等于vika.cn\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.网页类型.title).to.eql(\"vika.cn\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw4xvUVDk2VP&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw4xvUVDk2VP"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "电话筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回第一行记录电话等于0755-1234556判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.电话类型).to.eql(\"0755-1234556\");\r",
                      "});\r",
                      "pm.test(\"返回第一行记录电话等于0755-1234556的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录电话等于0755-1234556的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录电话等于0755-1234556判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.电话类型).to.eql(\"0755-1234556\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcpZTZrA7CJs\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc1bkqkTucKz\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwwZEhltLflZ&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwwZEhltLflZ"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后的电话",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"筛选出符合条件记录总数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(2);\r",
                      "});\r",
                      "pm.test(\"返回第一行记录电话等于0755-1234556判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.电话类型).to.eql(\"0755-1234556\");\r",
                      "});\r",
                      "pm.test(\"返回第一行记录电话等于0755-1234556的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录电话等于0755-1234556的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录电话等于0755-1234556判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.电话类型).to.eql(\"0755-1234556\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwwZEhltLflZ&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwwZEhltLflZ"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "邮箱筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回第一行记录中邮箱等于12345@vikadata.com判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.邮箱类型).to.eql(\"12345@vikadata.com\");\r",
                      "});\r",
                      "pm.test(\"返回第一行记录电话等于12345@vikadata.com的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录电话等于12345@vikadata.com的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录中邮箱等于12345@vikadata.com判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.邮箱类型).to.eql(\"12345@vikadata.com\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1610703540000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc8GBympo1ww\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1610680620000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcTiRxhi0L8K\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwSDM2sXObSP&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwSDM2sXObSP"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后的邮箱",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"筛选出符合条件记录总数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(2);\r",
                      "});\r",
                      "pm.test(\"返回第一行记录电话等于12345@vikadata.com的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录电话等于12345@vikadata.com的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "pm.test(\"返回第二行记录中邮箱等于12345@vikadata.com判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.邮箱类型).to.eql(\"12345@vikadata.com\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwSDM2sXObSP&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwSDM2sXObSP"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "关联字段筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回记录中关联班级表ID等于recL1VRV1ZAy7判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.关联班级表[0]).to.eql(\"recL1VRV1ZAy7\");\r",
                      "});\r",
                      "pm.test(\"返回记录中关联班级表ID等于recordId等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1610680620000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcxxwkGZ3VWW\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwVASdmpTvGg&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwVASdmpTvGg"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后的记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的json参数值中符合条件记录总数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"返回记录中关联班级表ID等于recL1VRV1ZAy7判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.关联班级表[0]).to.eql(\"recL1VRV1ZAy7\");\r",
                      "});\r",
                      "pm.test(\"返回记录中关联班级表ID等于recordId等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwVASdmpTvGg&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwVASdmpTvGg"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "自增数字筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回接口中json参数值记录中自增数字等于20判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.自增数字类型).to.eql(20);\r",
                      "});\r",
                      "pm.test(\"返回记录中自增数字等于20的recordId等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1610680620000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc3cIGTzOL5a\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwYwI5tkEHvQ&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwYwI5tkEHvQ"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的参数值出符合条件记录总数\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回的json参数值中自增数字等于20\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.自增数字类型).to.eql(20);\r",
                      "});\r",
                      "pm.test(\"返回记录中自增数字等于20的recordId等于rec2MeBoOPCBt\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwYwI5tkEHvQ&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwYwI5tkEHvQ"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建时间字段筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"第一条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第一条数据创建时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"第二条数据复选是否等于true判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcUhSWxU1Yqy\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcrtHHKUVy8Z\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viww6fmCRN0Bu&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viww6fmCRN0Bu"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "更新时间字段筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"第一条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第一条数据更新时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"第二条数据更新时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcYU5WrqfKe2\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atclbhAe7XHZ7\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwz7aXB2ptuy&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwz7aXB2ptuy"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取更新后的数据",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的json参数值中符合条件记录总数pageSize判断\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                      "});\r",
                      "pm.test(\"第一条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第一条数据创建时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"第二条数据创建时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      "pm.test(\"第三条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"第三条数据创建时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});\r",
                      "pm.test(\"第四条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "pm.test(\"第四条数据创建时间判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1646218213772);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwz7aXB2ptuy&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwz7aXB2ptuy"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建和更新人字段筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"第一条返回数据recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第一条数据创建人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.创建人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第一条数据更新人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.修改人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"第二条数据创建人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.创建人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第二条数据更新人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.修改人类型.name).to.eql(\"彭进\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcxFPQwyiRlt\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcKKOa0PVQqA\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwtx8uO25HP3&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwtx8uO25HP3"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后的数据",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();\r",
                      "pm.test(\"判断接口返回json参数中符合条件记录总数pageSize判断\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                      "});\r",
                      "pm.test(\"第一条返回数据recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"第一条数据创建人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.创建人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第一条数据更新人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.修改人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第二条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                      "});\r",
                      "pm.test(\"第二条数据创建人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.创建人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第二条数据更新人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[1].fields.修改人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第三条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"第三条数据创建人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.创建人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第三条数据更新人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[2].fields.修改人类型.name).to.eql(\"彭进\");\r",
                      "})\r",
                      "pm.test(\"第四条数据的recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                      "});\r",
                      "pm.test(\"第四条数据创建人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.创建人类型.name).to.eql(\"彭进\");\r",
                      "});\r",
                      "pm.test(\"第四条数据更新人判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[3].fields.修改人类型.name).to.eql(\"彭进\");\r",
                      "})"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viww6fmCRN0Bu&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viww6fmCRN0Bu"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "引用字段筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回数据recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"引用班级表中引用人数等于66判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.引用班级表数据[0]).to.eql(66);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1610703540000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcsffN8Y2sGl\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwYpdSqSTssd&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwYpdSqSTssd"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取引用后筛选结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"判断接口返回的参数值中符合条件记录总数pageSize判断\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"返回数据recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"引用班级表中引用人数等于66判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.引用班级表数据[0]).to.eql(66);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwYpdSqSTssd&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwYpdSqSTssd"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "智能公式筛选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回数据recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"智能公式计算结果判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.数字类型01货币类型).to.eql(32);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1610703540000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcc5yktikFQh\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw6Mutg238Az&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw6Mutg238Az"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取筛选后结果",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();//获取返回所有的参数存储在jsondata变量中\r",
                      "pm.test(\"返回符合条件记录总数pageSize判断\", function () {\r",
                      "    pm.expect(jsonData.data.pageSize).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"返回数据recordId判断\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                      "});\r",
                      "pm.test(\"智能公式计算结果等于32\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].fields.数字类型01货币类型).to.eql(32);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viw6Mutg238Az&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viw6Mutg238Az"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取指定record记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"http状态码200判断\", function () {//http状态码判断\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "const jsonData = pm.response.json();//接口获取返回json参数值存储在jsondata变量中\r",
                      "pm.test(\"判断返回total是否正确\", function () {\r",
                      "    pm.expect(jsonData.data.total).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"判断接口返回recordId是否正确\", function () {\r",
                      "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                      "});\r",
                      "pm.test(\"接口返回信息判断\", function () {\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst7V7fty0XyvWCKQb/records?viewId=viwjocChGCK1S&recordIds=rec5E2SqWcbN0",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst7V7fty0XyvWCKQb",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwjocChGCK1S"
                    },
                    {
                      "key": "recordIds",
                      "value": "rec5E2SqWcbN0"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "分组",
          "item": [
            {
              "name": "彭进(货币、百分比、日期、自增数字、创建时间、修改时间、创建人、修改人)",
              "item": [
                {
                  "name": "货币分组接口",
                  "item": [
                    {
                      "name": "货币分组正序排列接口",
                      "item": [
                        {
                          "name": "获取所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer usk2Kl1RHN6ueEqb4sMZ2MB",
                                "type": "text",
                                "disabled": true
                              },
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text",
                                "disabled": true
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer usk2Kl1RHN6ueEqb4sMZ2MB",
                                "type": "text",
                                "disabled": true
                              }
                            ],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwPAOGEJ1vAk&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwPAOGEJ1vAk"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "按照货币分组且升序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照货币分组且默认排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcK379EihoKT\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcUVfjHZVk2q\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwPAOGEJ1vAk&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwPAOGEJ1vAk"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "货币分组之后的数据排列显示",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"货币分组之后的数据排列显示\", function () {\r",
                                  "pm.expect(jsonData.code).to.eql(200);\r",
                                  "pm.expect(jsonData.success).to.eql(true);\r",
                                  "pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                                  "//货币分组且升序排列第一组数据排列显示(货币=1)\r",
                                  "pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "pm.expect(jsonData.data.records[0].fields.货币类型).to.eql(1);\r",
                                  "pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "pm.expect(jsonData.data.records[1].fields.货币类型).to.eql(1);\r",
                                  "pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "//货币分组且升序排列第二组数据排列显示(货币=2)\r",
                                  "pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "pm.expect(jsonData.data.records[2].fields.货币类型).to.eql(2);\r",
                                  "pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "//货币分组且升序排列第三组数据排列显示(货币=3)\r",
                                  "pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "pm.expect(jsonData.data.records[3].fields.货币类型).to.eql(3);\r",
                                  "pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?field=货币类型&order=asc",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "field",
                                  "value": "货币类型"
                                },
                                {
                                  "key": "order",
                                  "value": "asc"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "货币分组倒序排列接口",
                      "item": [
                        {
                          "name": "获取分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "//   pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "//     pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "//     pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "//     pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwKBCFQhzkj8&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwKBCFQhzkj8"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "按照货币分组且升序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照货币分组且默认排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcBy3ndehy5Z\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcFzSugw0ybs\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"上海\",\r\n      \"多行文本列\": \"性能测试：\\n1.接口性能\\n2.UI性能\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwKBCFQhzkj8&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwKBCFQhzkj8"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "货币分组之后的数据倒序排列显示",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"货币分组之后的数据排列显示\", function () {\r",
                                  "pm.expect(jsonData.code).to.eql(200);\r",
                                  "pm.expect(jsonData.success).to.eql(true);\r",
                                  "pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                                  "//货币分组且升序排列第一组数据排列显示(货币=3)\r",
                                  "pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "pm.expect(jsonData.data.records[0].fields.货币类型).to.eql(3);\r",
                                  "pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "\r",
                                  "\r",
                                  "//货币分组且倒序列第二组数据排列显示(货币=2)\r",
                                  "pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "pm.expect(jsonData.data.records[1].fields.货币类型).to.eql(2);\r",
                                  "pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "//货币分组且倒序序排列第三组数据排列显示(货币=1)\r",
                                  "//pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "//pm.expect(jsonData.data.records[2].fields.货币类型).to.eql(1);\r",
                                  "//pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "\r",
                                  "//pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "//pm.expect(jsonData.data.records[3].fields.货币类型).to.eql(1);\r",
                                  "//pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwKBCFQhzkj8&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwKBCFQhzkj8"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "百分比分组接口",
                  "item": [
                    {
                      "name": "百分比分组且升序排列接口",
                      "item": [
                        {
                          "name": "获取分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw8iBrtaGz4X&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw8iBrtaGz4X"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "按照百分比分组且升序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照百分比分组且默认排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc7yAobSetoL\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcIEMBHwCJSH\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw8iBrtaGz4X&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw8iBrtaGz4X"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "百分比分组且正序排列后显示",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组后表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    //百分比分组且升序排列第一组数据排列显示(百分比=12%)\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.百分比类型).to.eql(0.12);\r",
                                  "   pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.百分比类型).to.eql(0.12);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    //百分比分组且升序排列第二组数据排列显示(百分比=13%)\r",
                                  "     pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.百分比类型).to.eql(0.13);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "    //百分比分组且升序排列第三组数据排列显示(百分比=14%)\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.百分比类型).to.eql(0.14);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw8iBrtaGz4X&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw8iBrtaGz4X"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "百分比分组且倒序排列接口",
                      "item": [
                        {
                          "name": "获取分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    // pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    // pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    // pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    // pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    \r",
                                  "    // pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    // pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    // pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    \r",
                                  "    // pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    // pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    // pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    // pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "\r",
                                  "    //  pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    // pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    // pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    // pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwhy7e4RKwJ5&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwhy7e4RKwJ5"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "按照百分比分组且倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照百分比分组且倒序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc7yAobSetoL\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcIEMBHwCJSH\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwhy7e4RKwJ5&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwhy7e4RKwJ5"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "百分比分组且倒序排列后数据显示接口",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组后表中所有数据\", function () {\r",
                                  "    //pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    //pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "   // pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    //百分比分组且升序排列第一组数据排列显示(百分比=14%)\r",
                                  "      //pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "   // pm.expect(jsonData.data.records[0].fields.百分比类型).to.eql(0.14);\r",
                                  "   // pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "\r",
                                  "    //百分比分组且升序排列第二组数据排列显示(百分比=13%)\r",
                                  "    // pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "   // pm.expect(jsonData.data.records[1].fields.百分比类型).to.eql(0.13);\r",
                                  "   // pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "    //百分比分组且升序排列第三组数据排列显示(百分比=12%)\r",
                                  "   \r",
                                  "     //pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    //pm.expect(jsonData.data.records[2].fields.百分比类型).to.eql(0.12);\r",
                                  "   //pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  " //百分比分组且升序排列第三组数据排列显示(百分比=12%)\r",
                                  "    //pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    //pm.expect(jsonData.data.records[3].fields.百分比类型).to.eql(0.12);\r",
                                  "    //pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwhy7e4RKwJ5&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwhy7e4RKwJ5"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "日期分组接口",
                  "item": [
                    {
                      "name": "日期分组且正序排列接口",
                      "item": [
                        {
                          "name": "获取分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1636537140000);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.日期类型).to.eql(1644895020000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwhBUbq7oFrG&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwhBUbq7oFrG"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "日期分组且升序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照日期分组且升序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcjnhpnOBNBc\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"上海\",\r\n      \"多行文本列\": \"性能测试：\\n1.接口性能\\n2.UI性能\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atckeil12aqmR\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwhBUbq7oFrG&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwhBUbq7oFrG"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取日期分组且正序排列后的数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组后表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    //获取日期分组且正序第一组数据(日期：2021/11/10)\r",
                                  "   // pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    // pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1637660340000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "    //获取日期分组正序第二组数据(日期：2021/11/23)\r",
                                  "  // pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    // pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1637660340000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "\r",
                                  "    //获取日期分组正序第二组第二条数据(日期：2021/11/23)\r",
                                  "   // pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    // pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1644895020000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "\r",
                                  " //获取日期分组正序第三组数据(日期：2022/02/15)\r",
                                  "   // pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    // pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1644895020000);\r",
                                  "    \r",
                                  "\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwhBUbq7oFrG&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwhBUbq7oFrG"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "日期分组且倒序排列接口",
                      "item": [
                        {
                          "name": "获取日期排列前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1644895020000);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.日期类型).to.eql(1636537140000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw2Ca0UdprNE&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw2Ca0UdprNE"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "日期分组且倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照日期分组且升序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcBvaJcPZ4pL\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcfIJnNHvfRd\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw2Ca0UdprNE&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw2Ca0UdprNE"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "自增数字分组接口",
                  "item": [
                    {
                      "name": "自增分组且正序排列接口",
                      "item": [
                        {
                          "name": "获取分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.自增数字类型).to.eql(1);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.自增数字类型).to.eql(2);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.自增数字类型).to.eql(20);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.自增数字类型).to.eql(21);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw5mgVtRsNE2&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw5mgVtRsNE2"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "自增数据分组且正序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照自增数字分组且升序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcc2bIbcohtv\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atck2xGYX7sKW\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"上海\",\r\n      \"多行文本列\": \"性能测试：\\n1.接口性能\\n2.UI性能\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw5mgVtRsNE2&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw5mgVtRsNE2"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "自增分组且正序排列后数据显示",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组后表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "\r",
                                  "        //获取自增分组且正序第一组数据\r",
                                  "   pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "     pm.expect(jsonData.data.records[0].fields.自增数字类型).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "\r",
                                  "    //获取自增分组正序第二组数据\r",
                                  "   pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "     pm.expect(jsonData.data.records[3].fields.自增数字类型).to.eql(21);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "\r",
                                  "    //获取日期分组正序第三组数据\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "     pm.expect(jsonData.data.records[1].fields.自增数字类型).to.eql(2);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  " //获取日期分组正序第四组数据\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "     pm.expect(jsonData.data.records[2].fields.自增数字类型).to.eql(20);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "\r",
                                  "\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw5mgVtRsNE2&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw5mgVtRsNE2"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "自增数据且倒序排列接口",
                      "item": [
                        {
                          "name": "获取分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.自增数字类型).to.eql(21);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.自增数字类型).to.eql(20);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.自增数字类型).to.eql(2);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.自增数字类型).to.eql(1);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw1cNXXYA6SO&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw1cNXXYA6SO"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "自增数据倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照自增数字分组且到序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcaj5sdSbHjZ\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcTOgx1Q3mro\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw1cNXXYA6SO&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw1cNXXYA6SO"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取自增分组且倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组后表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "\r",
                                  "        //获取自增分组且正序第一组数据\r",
                                  "        pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "     pm.expect(jsonData.data.records[0].fields.自增数字类型).to.eql(21);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "\r",
                                  " \r",
                                  "\r",
                                  "    //获取自增分组正序第二组数据\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "     pm.expect(jsonData.data.records[1].fields.自增数字类型).to.eql(20);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "\r",
                                  "  \r",
                                  "\r",
                                  "    //获取日期分组正序第三组数据\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "     pm.expect(jsonData.data.records[2].fields.自增数字类型).to.eql(2);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "\r",
                                  " //获取日期分组正序第四组数据\r",
                                  "       pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "     pm.expect(jsonData.data.records[3].fields.自增数字类型).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "\r",
                                  "\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw1cNXXYA6SO&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw1cNXXYA6SO"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "创建人分组接口",
                  "item": [
                    {
                      "name": "创建人分组且正序排列",
                      "item": [
                        {
                          "name": "获取分组之前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[3].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw792Up6wSUo&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw792Up6wSUo"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "创建人分组且字母A-Z排序",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照创建人分组且升序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcpN3PCpC0Ga\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcGe44IjSQrV\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw792Up6wSUo&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw792Up6wSUo"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "创建人分组且字母A-Z正序排列后数据显示",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1644895020000 );\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000 );\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1645975688000 );\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1637660340000 );\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1643272854000 );\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.日期类型).to.eql(1636537140000 );\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viw2Ca0UdprNE&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw2Ca0UdprNE"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "修改人分组接口",
                  "item": [
                    {
                      "name": "修改人A-Z正序排列",
                      "item": [
                        {
                          "name": "获取修改人分组之前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[3].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwgdK5uOq1bx&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwgdK5uOq1bx"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "修改人分组且A-Z排序",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照创建人分组且升序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcBXoxURouRl\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcw3cXdusIE3\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwgdK5uOq1bx&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwgdK5uOq1bx"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取修改人分组且A-Z排序后数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1637660340000);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1636537140000);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.日期类型).to.eql(1644895020000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwgdK5uOq1bx&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwgdK5uOq1bx"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "修改人分组且倒序排列接口",
                      "item": [
                        {
                          "name": "获取修改人分组之前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[3].fields.创建人类型.name).to.eql(\"彭进\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwWRxHylxlPX&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwWRxHylxlPX"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "修改人分组Z-A排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照创建人分组且到序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcRbtEP33Lf9\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcFWKH4olmWe\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwWRxHylxlPX&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwWRxHylxlPX"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取修改人分组Z-A排列数据显示",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.日期类型).to.eql(1637660340000);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.日期类型).to.eql(1637660340000);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.日期类型).to.eql(1636537140000);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.日期类型).to.eql(1644895020000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwWRxHylxlPX&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwWRxHylxlPX"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "创建时间接口",
                  "item": [
                    {
                      "name": "创建时间分组且正序排列接口",
                      "item": [
                        {
                          "name": "获取分组之前数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwmsBcxmO9il&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwmsBcxmO9il"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "创建时间分组且正序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照创建时间分组且到序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcBXoxURouRl\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcAz4xl1ECsD\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"上海\",\r\n      \"多行文本列\": \"性能测试：\\n1.接口性能\\n2.UI性能\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwmsBcxmO9il&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwmsBcxmO9il"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取创建时间分组且正序排列后数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    //获取创建时间分组且正序排列后第一组数据\r",
                                  "      pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwmsBcxmO9il&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwmsBcxmO9il"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "创建时间分组且倒序排列",
                      "item": [
                        {
                          "name": "获取分组之前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "   pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1645975688000  );\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwXM3w4Hyt98&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwXM3w4Hyt98"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "创建之间分组且倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照创建时间分组且升序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcw3cXdusIE3\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcKvElxkWwjR\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwXM3w4Hyt98&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwXM3w4Hyt98"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "修改时间接口",
                  "item": [
                    {
                      "name": "修改时间分组且正序排列接口",
                      "item": [
                        {
                          "name": "获取分组之前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "//     pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "//     pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "//     pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "//     pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "//     pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "//     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "//     pm.expect(jsonData.data.records[3].createdAt).to.eql(1645975688000);\r",
                                  "//     pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "//     pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "//     pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "//     pm.expect(jsonData.data.records[0].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "//     pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "//     pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "//     pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"良\");\r",
                                  "//     pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "//      pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "//     pm.expect(jsonData.data.records[1].createdAt).to.eql(1644892060000);\r",
                                  "//     pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "//     pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"差\");\r",
                                  "//    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwAXX2OgV8TP&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwAXX2OgV8TP"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "修改时间分组且正序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照修改时间分组且正序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcKFVP1yAdHO\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"上海\",\r\n      \"多行文本列\": \"性能测试：\\n1.接口性能\\n2.UI性能\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcgf4RDiyXUH\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwAXX2OgV8TP&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwAXX2OgV8TP"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "修改时间分组且倒序排列接口",
                      "item": [
                        {
                          "name": "获取分组前数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "     pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwnbNnpNMHvG&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwnbNnpNMHvG"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "修改时间分组且倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照修改时间分组且正序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcLarrImXJsz\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcJDU6q6f8UN\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                              "options": {
                                "raw": {
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwnbNnpNMHvG&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwnbNnpNMHvG"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "组合分组接口",
                  "item": [
                    {
                      "name": "获取组合分组且正序排列接口",
                      "item": [
                        {
                          "name": "获取组合分组前所有数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwpKfV1XOQ3W&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwpKfV1XOQ3W"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "组合分组且正序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照组合分组且正序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});\r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcR3bq9vL29G\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"深圳\",\r\n      \"多行文本列\": \"测试内容：\\n1.功能测试、性能测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcoPBU4GydYS\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"广州\",\r\n      \"多行文本列\": \"接口测试：\\n1.api测试；\\n2.unit Test测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwpKfV1XOQ3W&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwpKfV1XOQ3W"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取组合分组且正序排列后数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "\r",
                                  "    //获取组合分组第一组第一条数据\r",
                                  "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    //获取组合分组第一组第二条数据\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "//获取组合分组第二组第一条数据\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "//获取组合分组第三组第一条数据\r",
                                  "     pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwpKfV1XOQ3W&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwpKfV1XOQ3W"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "获取组合分组且倒序排列接口",
                      "item": [
                        {
                          "name": "获取分组前数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwDl4pV9TGEy&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwDl4pV9TGEy"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "组合分组且倒序排列",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"按照组合分组且到序排序\", function () {\r",
                                  "    pm.expect(jsonData.code).to.eql(200); //返回code等于200\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec2MeBoOPCBt\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484440973440884738\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcgf4RDiyXUH\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"网页类型\": \"integration.vika.ltd\",\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recA0Pi3K5ZKw\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1478316284306264065\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"彭进\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"良\",\r\n      \"关联成绩表\": [\r\n        \"reccHvGnnYe9e\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 30,\r\n      \"货币类型\": 2,\r\n      \"百分比类型\": 0.13,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcKFVP1yAdHO\",\r\n          \"name\": \"成绩表-表格全文.xlsx\",\r\n          \"size\": 9332,\r\n          \"mimeType\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          \"token\": \"space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\",\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/23/45f4dc68ce1144b69d3754c62e6cf1d7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 10,\r\n      \"网页类型\": \"vika.cn\",\r\n      \"电话类型\": \"13244669844\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recMTfaFJVU4l\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recu2mZqSm1v7\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ],\r\n      \"单行文本列\": \"上海\",\r\n      \"多行文本列\": \"性能测试：\\n1.接口性能\\n2.UI性能\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                            },
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwDl4pV9TGEy&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwDl4pV9TGEy"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "获取组合分组且倒序排列数据",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "\r",
                                  "\r",
                                  "    //获取组合分组第一组第一条数据\r",
                                  "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                                  "pm.test(\"获取分组前表中所有数据\", function () {\r",
                                  "    pm.expect(jsonData.data.pageSize).to.eql(4); //返回总条数pagesize判断\r",
                                  "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                                  "    pm.expect(jsonData.data.total).to.eql(4);\r",
                                  "    pm.expect(jsonData.data.records[2].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                                  "    pm.expect(jsonData.data.records[2].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[2].fields.成员类型[0].name).to.eql(\"张三\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[2].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "    \r",
                                  "    pm.expect(jsonData.data.records[3].recordId).to.eql(\"rec7sey6y6GID\");\r",
                                  "    pm.expect(jsonData.data.records[3].createdAt).to.eql(1645975688000);\r",
                                  "    pm.expect(jsonData.data.records[3].fields.成员类型[0].name).to.eql(\"李四\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.单选类型).to.eql(\"优\");\r",
                                  "    pm.expect(jsonData.data.records[3].fields.创建时间类型).to.eql(1645975688320);\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"recA0Pi3K5ZKw\");\r",
                                  "    pm.expect(jsonData.data.records[1].createdAt).to.eql(1643272854000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"彭进\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.单选类型).to.eql(\"良\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields.创建时间类型).to.eql(1643272854834);\r",
                                  "\r",
                                  "     pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec2MeBoOPCBt\");\r",
                                  "    pm.expect(jsonData.data.records[0].createdAt).to.eql(1644892060000);\r",
                                  "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"何天威\");\r",
                                  "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"差\");\r",
                                  "   pm.expect(jsonData.data.records[0].fields.创建时间类型).to.eql(1644892060570);\r",
                                  "});\r",
                                  "\r",
                                  "    \r",
                                  ""
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstRgqtHr8R6pT8ZJW/records?viewId=viwDl4pV9TGEy&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstRgqtHr8R6pT8ZJW",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viwDl4pV9TGEy"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "钟梓烨（电话、邮箱、智能公式、神奇关联、神奇引用）",
              "item": [
                {
                  "name": "电话",
                  "item": [
                    {
                      "name": "正序更新分组顺序-电话",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照电话分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recopUNMWlaZK\",\r\n    \"fields\": {\r\n      \"单行\": \" （前面有个空格）\",\r\n      \"电话\": \"（086）13269561886\",\r\n      \"神奇关联\": [\r\n        \"recopUNMWlaZK\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recUz06p16BwH\",\r\n    \"fields\": {\r\n      \"单行\": \"标题1\",\r\n      \"电话\": \"13631242466\",\r\n      \"邮箱\": \"879170043@qq.com\",\r\n      \"神奇关联\": [\r\n        \"recUz06p16BwH\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwhQL31iUPr7&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwhQL31iUPr7"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "倒序更新分组顺序-电话",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照电话分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recfK6d4QmUV4\",\r\n    \"fields\": {\r\n      \"单行\": \"数字类型\",\r\n      \"电话\": \"啊啊啊啊\",\r\n      \"邮箱\": \"啊啊啊啊\",\r\n      \"神奇关联\": [\r\n        \"recfK6d4QmUV4\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recxjhjPvv8tB\",\r\n    \"fields\": {\r\n      \"单行\": \"111111\",\r\n      \"电话\": \"31254677899\",\r\n      \"邮箱\": \"zhongziye@vikadata.com\",\r\n      \"神奇关联\": [\r\n        \"recxjhjPvv8tB\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwhQL31iUPr7&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwhQL31iUPr7"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "邮箱",
                  "item": [
                    {
                      "name": "正序更新分组顺序-邮箱",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"返回第一行行记录中的单行判断\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行).to.eql(\" （前面有个空格）\");\r",
                              "});\r",
                              "pm.test(\"返回中间行行记录中的单行判断\", function () {\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行).to.eql(\"标题1\");\r",
                              "});\r",
                              "pm.test(\"返回最后一行行记录中的单行判断\", function () {\r",
                              "    pm.expect(jsonData.data.records[4].fields.单行).to.eql(\"111111\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n\"records\": [\r\n            {\r\n                \"recordId\": \"recopUNMWlaZK\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014340000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recopUNMWlaZK\"\r\n                    ],\r\n                    \"电话\": \"（086）13269561886\",\r\n                    \"单行\": \" （前面有个空格）\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recuKmispFNlk\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014338000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recuKmispFNlk\"\r\n                    ],\r\n                    \"邮箱\": \"112@163.com\",\r\n                    \"电话\": \"31254677899\",\r\n                    \"单行\": \"apple\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recUz06p16BwH\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014333000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recUz06p16BwH\"\r\n                    ],\r\n                    \"邮箱\": \"879170043@qq.com\",\r\n                    \"电话\": \"13631242466\",\r\n                    \"单行\": \"标题1\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recfK6d4QmUV4\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014423000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recfK6d4QmUV4\"\r\n                    ],\r\n                    \"邮箱\": \"啊啊啊啊\",\r\n                    \"电话\": \"啊啊啊啊\",\r\n                    \"单行\": \"数字类型\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recxjhjPvv8tB\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014336000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recxjhjPvv8tB\"\r\n                    ],\r\n                    \"邮箱\": \"zhongziye@vikadata.com\",\r\n                    \"电话\": \"31254677899\",\r\n                    \"单行\": \"111111\"\r\n                }\r\n            }\r\n        ],\r\n\t\t\"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwMi1yn4em8e&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwMi1yn4em8e"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "倒序更新分组顺序-邮箱 Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照邮箱分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recxjhjPvv8tB\",\r\n    \"fields\": {\r\n      \"单行\": \"111111\",\r\n      \"电话\": \"31254677899\",\r\n      \"邮箱\": \"zhongziye@vikadata.com\",\r\n      \"神奇关联\": [\r\n        \"recxjhjPvv8tB\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recfK6d4QmUV4\",\r\n    \"fields\": {\r\n      \"单行\": \"数字类型\",\r\n      \"电话\": \"啊啊啊啊\",\r\n      \"邮箱\": \"啊啊啊啊\",\r\n      \"神奇关联\": [\r\n        \"recfK6d4QmUV4\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwawBg570BGM&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwawBg570BGM"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "公式",
                  "item": [
                    {
                      "name": "正序更新分组顺序-公式",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照公式分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recopUNMWlaZK\",\r\n    \"fields\": {\r\n      \"单行\": \" （前面有个空格）\",\r\n      \"电话\": \"（086）13269561886\",\r\n      \"神奇关联\": [\r\n        \"recopUNMWlaZK\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recUz06p16BwH\",\r\n    \"fields\": {\r\n      \"单行\": \"标题1\",\r\n      \"电话\": \"13631242466\",\r\n      \"邮箱\": \"879170043@qq.com\",\r\n      \"神奇关联\": [\r\n        \"recUz06p16BwH\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwY67bNk3lhn&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwY67bNk3lhn"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "正序-分组后的数据-公式",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"公式分组之后的数据排列显示\", function () {\r",
                              "pm.expect(jsonData.data.pageSize).to.eql(5);\r",
                              "//正序分组之后的数据排列显示（第一组）\r",
                              "// pm.expect(jsonData.data.records[0].recordId).to.eql(\"recopUNMWlaZK\");\r",
                              "// pm.expect(jsonData.data.records[0].fields.公式).to.eql(\"（086）132695618860\");\r",
                              "// pm.expect(jsonData.data.records[0].fields.单行).to.eql(\"标题1\");\r",
                              "// //正序分组之后的数据排列显示（第二组）\r",
                              "// pm.expect(jsonData.data.records[2].recordId).to.eql(\"recuKmispFNlk\");\r",
                              "// pm.expect(jsonData.data.records[2].fields.公式).to.eql(\"31254677899112@163.com\");\r",
                              "// pm.expect(jsonData.data.records[2].fields.单行).to.eql(\"apple\");\r",
                              "\r",
                              "// //正序分组之后的数据排列显示（最后一组）\r",
                              "// pm.expect(jsonData.data.records[4].recordId).to.eql(\"recfK6d4QmUV4\");\r",
                              "// pm.expect(jsonData.data.records[4].fields.公式).to.eql(\"啊啊啊啊啊啊啊啊\");\r",
                              "// pm.expect(jsonData.data.records[4].fields.单行).to.eql(\"数字类型\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwY67bNk3lhn&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwY67bNk3lhn"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "关联",
                  "item": [
                    {
                      "name": "正序-更新分组顺序-关联",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照关联分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n\"records\": [\r\n            {\r\n                \"recordId\": \"recopUNMWlaZK\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014340000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recopUNMWlaZK\"\r\n                    ],\r\n                    \"电话\": \"（086）13269561886\",\r\n                    \"单行\": \" （前面有个空格）\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recfK6d4QmUV4\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014423000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recfK6d4QmUV4\"\r\n                    ],\r\n                    \"邮箱\": \"啊啊啊啊\",\r\n                    \"电话\": \"啊啊啊啊\",\r\n                    \"单行\": \"数字类型\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recxjhjPvv8tB\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014336000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recxjhjPvv8tB\"\r\n                    ],\r\n                    \"邮箱\": \"zhongziye@vikadata.com\",\r\n                    \"电话\": \"31254677899\",\r\n                    \"单行\": \"111111\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recUz06p16BwH\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014333000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recUz06p16BwH\"\r\n                    ],\r\n                    \"邮箱\": \"879170043@qq.com\",\r\n                    \"电话\": \"13631242466\",\r\n                    \"单行\": \"标题1\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recuKmispFNlk\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014338000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recuKmispFNlk\"\r\n                    ],\r\n                    \"邮箱\": \"112@163.com\",\r\n                    \"电话\": \"31254677899\",\r\n                    \"单行\": \"apple\"\r\n                }\r\n            }\r\n        ],\r\n\t\t\"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwCv5A3RWQZB&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwCv5A3RWQZB"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "正序-分组后的数据-关联",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"公式分组之后的数据排列显示\", function () {\r",
                              "pm.expect(jsonData.data.pageSize).to.eql(5);\r",
                              "//正序分组之后的数据排列显示（第一组）\r",
                              "// pm.expect(jsonData.data.records[0].recordId).to.eql(\"recUz06p16BwH\");\r",
                              "// pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recUz06p16BwH\");\r",
                              "// pm.expect(jsonData.data.records[0].fields.单行).to.eql(\"标题1\");\r",
                              "//正序分组之后的数据排列显示（第二组）\r",
                              "// pm.expect(jsonData.data.records[2].recordId).to.eql(\"recuKmispFNlk\");\r",
                              "// pm.expect(jsonData.data.records[2].fields.神奇关联[0]).to.eql(\"recuKmispFNlk\");\r",
                              "// pm.expect(jsonData.data.records[2].fields.单行).to.eql(\"apple\");\r",
                              "\r",
                              "// //正序分组之后的数据排列显示（最后一组）\r",
                              "// pm.expect(jsonData.data.records[4].recordId).to.eql(\"recfK6d4QmUV4\");\r",
                              "// pm.expect(jsonData.data.records[4].fields.神奇关联[0]).to.eql(\"recfK6d4QmUV4\");\r",
                              "// pm.expect(jsonData.data.records[4].fields.单行).to.eql(\"数字类型\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwCv5A3RWQZB&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwCv5A3RWQZB"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "倒序-更新分组顺序-关联",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照关联分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recuKmispFNlk\",\r\n    \"fields\": {\r\n      \"单行\": \"apple\",\r\n      \"电话\": \"31254677899\",\r\n      \"邮箱\": \"112@163.com\",\r\n      \"神奇关联\": [\r\n        \"recuKmispFNlk\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recUz06p16BwH\",\r\n    \"fields\": {\r\n      \"单行\": \"标题1\",\r\n      \"电话\": \"13631242466\",\r\n      \"邮箱\": \"879170043@qq.com\",\r\n      \"神奇关联\": [\r\n        \"recUz06p16BwH\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwE8hyK9SJ3t&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwE8hyK9SJ3t"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "引用",
                  "item": [
                    {
                      "name": "正序-更新分组顺序-引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照引用分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n\"records\": [\r\n        {\r\n                \"recordId\": \"recxjhjPvv8tB\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014336000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recxjhjPvv8tB\"\r\n                    ],\r\n                    \"邮箱\": \"zhongziye@vikadata.com\",\r\n                    \"电话\": \"31254677899\",\r\n                    \"单行\": \"111111\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recUz06p16BwH\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014333000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recUz06p16BwH\"\r\n                    ],\r\n                    \"邮箱\": \"879170043@qq.com\",\r\n                    \"电话\": \"13631242466\",\r\n                    \"单行\": \"标题1\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recuKmispFNlk\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014338000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recuKmispFNlk\"\r\n                    ],\r\n                    \"邮箱\": \"112@163.com\",\r\n                    \"电话\": \"31254677899\",\r\n                    \"单行\": \"apple\"\r\n                }\r\n            },\r\n\t\t\t{\r\n                \"recordId\": \"recopUNMWlaZK\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014340000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recopUNMWlaZK\"\r\n                    ],\r\n                    \"电话\": \"（086）13269561886\",\r\n                    \"单行\": \" （前面有个空格）\"\r\n                }\r\n            },\r\n            {\r\n                \"recordId\": \"recfK6d4QmUV4\",\r\n                \"createdAt\": 1650014215000,\r\n                \"updatedAt\": 1650014423000,\r\n                \"fields\": {\r\n                    \"神奇关联\": [\r\n                        \"recfK6d4QmUV4\"\r\n                    ],\r\n                    \"邮箱\": \"啊啊啊啊\",\r\n                    \"电话\": \"啊啊啊啊\",\r\n                    \"单行\": \"数字类型\"\r\n                }\r\n            }    \r\n        ],\r\n\t\t\"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwogZ6ZBxVfD&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwogZ6ZBxVfD"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "正序-分组后的数据-引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"引用分组之后的数据排列显示\", function () {\r",
                              "pm.expect(jsonData.data.pageSize).to.eql(5);\r",
                              "//正序分组之后的数据排列显示（第一组）\r",
                              "// pm.expect(jsonData.data.records[0].recordId).to.eql(\"recUz06p16BwH\");\r",
                              "// pm.expect(jsonData.data.records[0].fields.神奇引用[0]).to.eql(\"选项1\");\r",
                              "// pm.expect(jsonData.data.records[0].fields.单行).to.eql(\"标题1\");\r",
                              "// //正序分组之后的数据排列显示（第二组）\r",
                              "// pm.expect(jsonData.data.records[2].recordId).to.eql(\"recuKmispFNlk\");\r",
                              "// pm.expect(jsonData.data.records[2].fields.神奇引用[0]).to.eql(\"111\");\r",
                              "// pm.expect(jsonData.data.records[2].fields.单行).to.eql(\"apple\");\r",
                              "\r",
                              "// //正序分组之后的数据排列显示（最后一组）\r",
                              "// pm.expect(jsonData.data.records[4].recordId).to.eql(\"recfK6d4QmUV4\");\r",
                              "// //pm.expect(jsonData.data.records[4].fields.神奇引用[0]).to.eql(\"前面有个空格\");\r",
                              "// pm.expect(jsonData.data.records[4].fields.单行).to.eql(\"数字类型\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwogZ6ZBxVfD&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwogZ6ZBxVfD"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "倒序-更新分组顺序-引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              "pm.test(\"按照引用分组且排序\", function () {\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Authorization",
                            "type": "text",
                            "value": "Bearer uskR7JvUjqZJeYo4SdFu1Ma"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recfK6d4QmUV4\",\r\n    \"fields\": {\r\n      \"单行\": \"数字类型\",\r\n      \"电话\": \"啊啊啊啊\",\r\n      \"邮箱\": \"啊啊啊啊\",\r\n      \"神奇关联\": [\r\n        \"recfK6d4QmUV4\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recopUNMWlaZK\",\r\n    \"fields\": {\r\n      \"单行\": \" （前面有个空格）\",\r\n      \"电话\": \"（086）13269561886\",\r\n      \"神奇关联\": [\r\n        \"recopUNMWlaZK\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstHX2lmeo4ogLT7DJ/records?viewId=viwFx8bcHXF8P&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstHX2lmeo4ogLT7DJ",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwFx8bcHXF8P"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "何天威（单行、多行、单选、多选、数字）",
              "item": [
                {
                  "name": "分组-单行A-Z",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"单行-姓名A-Z分组第一个人为蔡琴\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"蔡琴\");\r",
                          "});\r",
                          "pm.test(\"单行-姓名A-Z分组第二个人为高可\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"高可\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recld275cV3xu\",\r\n    \"fields\": {\r\n      \"姓名\": \"蔡琴\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcQA9UgIRAUi\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"多选\": [\r\n        \"一年级\",\r\n        \"二年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 4,\r\n      \"家庭住址\": \"开元区\",\r\n      \"电话\": \"160 3698 2369\",\r\n      \"缴费记录\": [\r\n        \"rec7gwZ05pVMq\",\r\n        \"recFyTApA1mi7\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec3icRwPlVHg\",\r\n    \"fields\": {\r\n      \"姓名\": \"高可\",\r\n      \"百分比\": 0.33,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atc7qhIcbLl1D\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"二年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 6,\r\n      \"家庭住址\": \"开发区\",\r\n      \"电话\": \"162 3698 2987\",\r\n      \"缴费记录\": [\r\n        \"recLLTt5EuD4j\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwTgCj7836r2&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwTgCj7836r2"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-单行A-Z的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"接口返回单行-姓名A-Z分组所有排列\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"蔡琴\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"高可\");\r",
                          "    pm.expect(jsonData.data.records[2].fields.姓名).to.eql(\"胡罗\");\r",
                          "    pm.expect(jsonData.data.records[3].fields.姓名).to.eql(\"胡笋\"); \r",
                          "    pm.expect(jsonData.data.records[4].fields.姓名).to.eql(\"李磊\");\r",
                          "    pm.expect(jsonData.data.records[5].fields.姓名).to.eql(\"李美美\");\r",
                          "    pm.expect(jsonData.data.records[6].fields.姓名).to.eql(\"王浅\");\r",
                          "    pm.expect(jsonData.data.records[7].fields.姓名).to.eql(\"张华\");\r",
                          "    pm.expect(jsonData.data.records[8].fields.姓名).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[9].fields.姓名).to.eql(\"赵耀\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwTgCj7836r2&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwTgCj7836r2"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-单行Z-A",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"单行-姓名Z-A 分组第一个人为赵耀\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"赵耀\");\r",
                          "});\r",
                          "pm.test(\"单行-姓名Z-A 分组第二个人为张三\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"张三\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recsGVW7X6UVx\",\r\n    \"fields\": {\r\n      \"姓名\": \"赵耀\",\r\n      \"百分比\": 0.33,\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"一年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 5,\r\n      \"家庭住址\": \"开发区\",\r\n      \"电话\": \"158 3698 2587\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYRZw2Vuk0u\",\r\n    \"fields\": {\r\n      \"姓名\": \"张三\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcMoO5OSsDTs\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"一年级\",\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"四年级\",\r\n        \"五年级\",\r\n        \"六年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"164 3698 7869\",\r\n      \"缴费记录\": [\r\n        \"recOEcjHRpkdK\",\r\n        \"recLLTt5EuD4j\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwkdWsNCyK2t&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwkdWsNCyK2t"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-单行Z-A的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "//pm.test(\"接口返回单行-姓名Z-A分组所有排序\", function () {\r",
                          "//    var jsonData = pm.response.json();\r",
                          "//    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"赵耀\");\r",
                          "//    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"张三\");\r",
                          "//    pm.expect(jsonData.data.records[2].fields.姓名).to.eql(\"张华\");\r",
                          "//    pm.expect(jsonData.data.records[3].fields.姓名).to.eql(\"王浅\");\r",
                          "//    pm.expect(jsonData.data.records[4].fields.姓名).to.eql(\"李美美\");\r",
                          "//    pm.expect(jsonData.data.records[5].fields.姓名).to.eql(\"李磊\");\r",
                          "//    pm.expect(jsonData.data.records[6].fields.姓名).to.eql(\"胡笋\");\r",
                          "//    pm.expect(jsonData.data.records[7].fields.姓名).to.eql(\"胡罗\");\r",
                          "//    pm.expect(jsonData.data.records[8].fields.姓名).to.eql(\"高可\");\r",
                          "//    pm.expect(jsonData.data.records[9].fields.姓名).to.eql(\"蔡琴\");\r",
                          "//});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwkdWsNCyK2t&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwkdWsNCyK2t"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-多行A-Z",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回家庭住址为朝阳区\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "});\r",
                          "pm.test(\"返回第一个姓名为王浅\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"王浅\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recDDNN5vZ3yP\",\r\n    \"fields\": {\r\n      \"姓名\": \"王浅\",\r\n      \"百分比\": 0.2,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atckobZoSI8wz\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"多选\": [\r\n        \"三年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 7,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"165 3698 8634\",\r\n      \"缴费记录\": [\r\n        \"recWOe0jKzqNJ\",\r\n        \"reclNhnMnStev\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"reczi5meL9c8Q\",\r\n    \"fields\": {\r\n      \"姓名\": \"张华\",\r\n      \"百分比\": 0.5798,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcCFmFWrNn67\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"多选\": [\r\n        \"六年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 7,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"161 3698 7521\",\r\n      \"缴费记录\": [\r\n        \"recJ4PWSyCdF6\",\r\n        \"recOEcjHRpkdK\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwWzIJdblP1s&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwWzIJdblP1s"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-多行A-Z的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回多行-家庭住址A-Z分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.家庭住址).to.eql(\"开发区\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.家庭住址).to.eql(\"开发区\");\r",
                          "//     pm.expect(jsonData.data.records[5].fields.家庭住址).to.eql(\"开元区\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.家庭住址).to.eql(\"开元区\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.家庭住址).to.eql(\"开元区\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.家庭住址).to.eql(\"老城区\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.家庭住址).to.eql(\"老城区\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwWzIJdblP1s&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwWzIJdblP1s"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-多行Z-A",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个姓名为李磊\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"李磊\");\r",
                          "});\r",
                          "pm.test(\"返回第二个姓名为胡罗\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"胡罗\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"reccrTyAL9rcE\",\r\n    \"fields\": {\r\n      \"姓名\": \"李磊\",\r\n      \"百分比\": 0.174,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atckobZoSI8wz\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"放弃\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"159 3698 2579\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\",\r\n        \"rec7gwZ05pVMq\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recTYNmVHz4Qh\",\r\n    \"fields\": {\r\n      \"姓名\": \"胡罗\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atc4r1COoalp5\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 9,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"163 3698 2479\",\r\n      \"缴费记录\": [\r\n        \"recFyTApA1mi7\",\r\n        \"recJ4PWSyCdF6\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwrcL0VtvxCJ&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwrcL0VtvxCJ"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-多行Z-A的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回多行-家庭住址Z-A分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.家庭住址).to.eql(\"老城区\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.家庭住址).to.eql(\"老城区\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.家庭住址).to.eql(\"开元区\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.家庭住址).to.eql(\"开元区\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.家庭住址).to.eql(\"开元区\");\r",
                          "//     pm.expect(jsonData.data.records[5].fields.家庭住址).to.eql(\"开发区\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.家庭住址).to.eql(\"开发区\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.家庭住址).to.eql(\"朝阳区\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwrcL0VtvxCJ&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwrcL0VtvxCJ"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-数字1-9",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个姓名为胡笋\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"胡笋\");\r",
                          "});\r",
                          "pm.test(\"返回第二个姓名为蔡琴\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"蔡琴\");\r",
                          "});\r",
                          "pm.test(\"返回message值为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recNZJ3qyL4Cg\",\r\n    \"fields\": {\r\n      \"姓名\": \"胡笋\",\r\n      \"百分比\": 0.23,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atc4r1COoalp5\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"四年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 1,\r\n      \"家庭住址\": \"开元区\",\r\n      \"电话\": \"164 3698 7863\",\r\n      \"缴费记录\": [\r\n        \"recDBMdNCJJfm\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recld275cV3xu\",\r\n    \"fields\": {\r\n      \"姓名\": \"蔡琴\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcG05ZEqCUkg\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"多选\": [\r\n        \"一年级\",\r\n        \"二年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 4,\r\n      \"家庭住址\": \"开元区\",\r\n      \"电话\": \"160 3698 2369\",\r\n      \"缴费记录\": [\r\n        \"rec7gwZ05pVMq\",\r\n        \"recFyTApA1mi7\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viw5Wi7kou2iL&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viw5Wi7kou2iL"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-数字1-9的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回数字-年龄1-9分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年龄).to.eql(1);\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年龄).to.eql(4);\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年龄).to.eql(5);\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年龄).to.eql(6);\r",
                          "//     pm.expect(jsonData.data.records[4].fields.年龄).to.eql(7);\r",
                          "//     pm.expect(jsonData.data.records[5].fields.年龄).to.eql(7);\r",
                          "//     pm.expect(jsonData.data.records[6].fields.年龄).to.eql(7);\r",
                          "//     pm.expect(jsonData.data.records[7].fields.年龄).to.eql(8);\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年龄).to.eql(8);\r",
                          "//     pm.expect(jsonData.data.records[9].fields.年龄).to.eql(9);\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viw5Wi7kou2iL&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viw5Wi7kou2iL"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-数字9-1",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个姓名为胡罗\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"胡罗\");\r",
                          "});\r",
                          "pm.test(\"返回第二个姓名为李磊\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"李磊\");\r",
                          "});\r",
                          "pm.test(\"返回message值为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recTYNmVHz4Qh\",\r\n    \"fields\": {\r\n      \"姓名\": \"胡罗\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcX3uUM7uMBH\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 9,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"163 3698 2479\",\r\n      \"缴费记录\": [\r\n        \"recFyTApA1mi7\",\r\n        \"recJ4PWSyCdF6\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"reccrTyAL9rcE\",\r\n    \"fields\": {\r\n      \"姓名\": \"李磊\",\r\n      \"百分比\": 0.174,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atc6ee9ur59kj\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"放弃\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"159 3698 2579\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\",\r\n        \"rec7gwZ05pVMq\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwBAxbvaqpUU&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwBAxbvaqpUU"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-数字1-9的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回数字-年龄9-1分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年龄).to.eql(9);\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年龄).to.eql(8);\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年龄).to.eql(8);\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年龄).to.eql(7);\r",
                          "//     pm.expect(jsonData.data.records[4].fields.年龄).to.eql(7);\r",
                          "//     pm.expect(jsonData.data.records[5].fields.年龄).to.eql(7);\r",
                          "//     pm.expect(jsonData.data.records[6].fields.年龄).to.eql(6);\r",
                          "//     pm.expect(jsonData.data.records[7].fields.年龄).to.eql(5);\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年龄).to.eql(4);\r",
                          "//     pm.expect(jsonData.data.records[9].fields.年龄).to.eql(1);\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwBAxbvaqpUU&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwBAxbvaqpUU"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-单选正序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个单选-状态为咨询中\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.状态).to.eql(\"咨询中\");\r",
                          "});\r",
                          "pm.test(\"返回第二个单选-状态为已入学\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.状态).to.eql(\"已入学\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recYRZw2Vuk0u\",\r\n    \"fields\": {\r\n      \"姓名\": \"张三\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcrctPmLMSMp\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"一年级\",\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"四年级\",\r\n        \"五年级\",\r\n        \"六年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"164 3698 7869\",\r\n      \"缴费记录\": [\r\n        \"recOEcjHRpkdK\",\r\n        \"recLLTt5EuD4j\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recsGVW7X6UVx\",\r\n    \"fields\": {\r\n      \"姓名\": \"赵耀\",\r\n      \"百分比\": 0.33,\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"一年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 5,\r\n      \"家庭住址\": \"开发区\",\r\n      \"电话\": \"158 3698 2587\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwyFWUoSPqip&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwyFWUoSPqip"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-单选正序的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回单选-状态正序分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.状态).to.eql(\"咨询中\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.状态).to.eql(\"咨询中\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[5].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.状态).to.eql(\"放弃\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.状态).to.eql(\"放弃\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwyFWUoSPqip&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwyFWUoSPqip"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-单选倒序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个单选-状态为不读了\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.状态).to.eql(\"不读了\");\r",
                          "});\r",
                          "pm.test(\"返回第二个单选-状态为放弃\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.状态).to.eql(\"放弃\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recTYNmVHz4Qh\",\r\n    \"fields\": {\r\n      \"姓名\": \"胡罗\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcxGQn4hae1M\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"不读了\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 9,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"163 3698 2479\",\r\n      \"缴费记录\": [\r\n        \"recFyTApA1mi7\",\r\n        \"recJ4PWSyCdF6\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"reccrTyAL9rcE\",\r\n    \"fields\": {\r\n      \"姓名\": \"李磊\",\r\n      \"百分比\": 0.174,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcd0TTcgNksA\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"放弃\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"159 3698 2579\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\",\r\n        \"rec7gwZ05pVMq\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwRXGWKGV56R&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwRXGWKGV56R"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-单选倒序的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回单选-状态倒序分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.状态).to.eql(\"放弃\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.状态).to.eql(\"放弃\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[5].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.状态).to.eql(\"咨询中\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.状态).to.eql(\"咨询中\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwRXGWKGV56R&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwRXGWKGV56R"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组多选正序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个多选-年级为一年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[0]).to.eql(\"一年级\");\r",
                          "});\r",
                          "pm.test(\"返回第二个多选-年级为一年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.年级[0]).to.eql(\"一年级\");\r",
                          "});\r",
                          "pm.test(\"返回第二个多选-年级为二年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.年级[1]).to.eql(\"二年级\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recsGVW7X6UVx\",\r\n    \"fields\": {\r\n      \"姓名\": \"赵耀\",\r\n      \"百分比\": 0.33,\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"多选\": [\r\n        \"一年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 5,\r\n      \"家庭住址\": \"开发区\",\r\n      \"电话\": \"158 3698 2587\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recld275cV3xu\",\r\n    \"fields\": {\r\n      \"姓名\": \"蔡琴\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcTU8ZDz2e6d\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"多选\": [\r\n        \"一年级\",\r\n        \"二年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 4,\r\n      \"家庭住址\": \"开元区\",\r\n      \"电话\": \"160 3698 2369\",\r\n      \"缴费记录\": [\r\n        \"rec7gwZ05pVMq\",\r\n        \"recFyTApA1mi7\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwvdo1ePN8mF&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwvdo1ePN8mF"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-多选正序的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回多选-年级正序分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[2]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[3]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[4]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[5]).to.eql(\"六年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[5]).to.eql(\"六年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[2]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[3]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[4]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[5]).to.eql(\"六年级\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.年级[0]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.年级[0]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.年级[0]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[0]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.年级[0]).to.eql(\"六年级\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwvdo1ePN8mF&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwvdo1ePN8mF"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "分组-多选倒序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回第一个多选-年级为六年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[0]).to.eql(\"六年级\");\r",
                          "});\r",
                          "pm.test(\"返回第二个多选-年级为五年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.年级[0]).to.eql(\"五年级\");\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"reczi5meL9c8Q\",\r\n    \"fields\": {\r\n      \"姓名\": \"张华\",\r\n      \"百分比\": 0.5798,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atczr8FjJ7EcD\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"年级\": [\r\n        \"六年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 7,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"161 3698 7521\",\r\n      \"缴费记录\": [\r\n        \"recJ4PWSyCdF6\",\r\n        \"recOEcjHRpkdK\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"reccrTyAL9rcE\",\r\n    \"fields\": {\r\n      \"姓名\": \"李磊\",\r\n      \"百分比\": 0.174,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcA7Ei6ihLhR\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"放弃\",\r\n      \"性别\": \"男\",\r\n      \"年级\": [\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"159 3698 2579\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\",\r\n        \"rec7gwZ05pVMq\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwzyQAk641su&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwzyQAk641su"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取分组-多选倒序的结果",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回多选-年级倒序分组所有排序\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[2]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[3]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[4]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[5]).to.eql(\"六年级\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级[5]).to.eql(\"六年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[2]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[3]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[4]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年级[5]).to.eql(\"六年级\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.年级[0]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.年级[0]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.年级[0]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[0]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.年级[0]).to.eql(\"六年级\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwzyQAk641su&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwzyQAk641su"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "单行string、数字number正序 Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为蔡琴，年龄为4岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"蔡琴\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年龄).to.eql(4);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为高可，年龄为6岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"高可\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.年龄).to.eql(6);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recld275cV3xu\",\r\n    \"fields\": {\r\n      \"姓名\": \"蔡琴\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcWW6U0A5lag\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"女\",\r\n      \"年级\": [\r\n        \"一年级\",\r\n        \"二年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 4,\r\n      \"家庭住址\": \"开元区\",\r\n      \"电话\": \"160 3698 2369\",\r\n      \"缴费记录\": [\r\n        \"rec7gwZ05pVMq\",\r\n        \"recFyTApA1mi7\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec3icRwPlVHg\",\r\n    \"fields\": {\r\n      \"姓名\": \"高可\",\r\n      \"百分比\": 0.33,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcu6pht92nD6\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"年级\": [\r\n        \"二年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 6,\r\n      \"家庭住址\": \"开发区\",\r\n      \"电话\": \"162 3698 2987\",\r\n      \"缴费记录\": [\r\n        \"recLLTt5EuD4j\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwesB04s0kp6&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwesB04s0kp6"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取单行-姓名、数字-年龄正序的结果 Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为蔡琴，年龄为4岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"蔡琴\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年龄).to.eql(4);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为高可，年龄为6岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"高可\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.年龄).to.eql(6);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为胡罗，年龄为9岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[2].fields.姓名).to.eql(\"胡罗\");\r",
                          "    pm.expect(jsonData.data.records[2].fields.年龄).to.eql(9);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为胡笋，年龄为1岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[3].fields.姓名).to.eql(\"胡笋\");\r",
                          "    pm.expect(jsonData.data.records[3].fields.年龄).to.eql(1);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为李磊，年龄为8岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[4].fields.姓名).to.eql(\"李磊\");\r",
                          "    pm.expect(jsonData.data.records[4].fields.年龄).to.eql(8);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为李美美，年龄为7岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[5].fields.姓名).to.eql(\"李美美\");\r",
                          "    pm.expect(jsonData.data.records[5].fields.年龄).to.eql(7);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为王浅，年龄为7岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[6].fields.姓名).to.eql(\"王浅\");\r",
                          "    pm.expect(jsonData.data.records[6].fields.年龄).to.eql(7);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为张华，年龄为7岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[7].fields.姓名).to.eql(\"张华\");\r",
                          "    pm.expect(jsonData.data.records[7].fields.年龄).to.eql(7);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为张三，年龄为8岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[8].fields.姓名).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[8].fields.年龄).to.eql(8);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为赵耀，年龄为5岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[9].fields.姓名).to.eql(\"赵耀\");\r",
                          "    pm.expect(jsonData.data.records[9].fields.年龄).to.eql(5);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwesB04s0kp6&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwesB04s0kp6"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "单行string、数字number倒序 Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为赵耀，年龄为5岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"赵耀\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年龄).to.eql(5);\r",
                          "});\r",
                          "pm.test(\"接口返回第一个姓名为张三，年龄为8岁\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.年龄).to.eql(8);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recsGVW7X6UVx\",\r\n    \"fields\": {\r\n      \"姓名\": \"赵耀\",\r\n      \"百分比\": 0.33,\r\n      \"状态\": \"已入学\",\r\n      \"性别\": \"男\",\r\n      \"年级\": [\r\n        \"一年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 5,\r\n      \"家庭住址\": \"开发区\",\r\n      \"电话\": \"158 3698 2587\",\r\n      \"缴费记录\": [\r\n        \"rec3iv1jNyE8R\",\r\n        \"recJSG532kWuk\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYRZw2Vuk0u\",\r\n    \"fields\": {\r\n      \"姓名\": \"张三\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atc5lhaHyTcTC\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"年级\": [\r\n        \"一年级\",\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"四年级\",\r\n        \"五年级\",\r\n        \"六年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"164 3698 7869\",\r\n      \"缴费记录\": [\r\n        \"recOEcjHRpkdK\",\r\n        \"recLLTt5EuD4j\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwvY6ZL9HEHs&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwvY6ZL9HEHs"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取单行-姓名、数字-年龄倒序的结果 Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回第一个姓名为赵耀，年龄为5岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"赵耀\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年龄).to.eql(5);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为张三，年龄为8岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"张三\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年龄).to.eql(8);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为张华，年龄为7岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[2].fields.姓名).to.eql(\"张华\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年龄).to.eql(7);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为王浅，年龄为7岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[3].fields.姓名).to.eql(\"王浅\");\r",
                          "//     pm.expect(jsonData.data.records[3].fields.年龄).to.eql(7);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为李美美，年龄为7岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[4].fields.姓名).to.eql(\"李美美\");\r",
                          "//     pm.expect(jsonData.data.records[4].fields.年龄).to.eql(7);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为李磊，年龄为8岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[5].fields.姓名).to.eql(\"李磊\");\r",
                          "//     pm.expect(jsonData.data.records[5].fields.年龄).to.eql(8);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为胡笋，年龄为1岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[6].fields.姓名).to.eql(\"胡笋\");\r",
                          "//     pm.expect(jsonData.data.records[6].fields.年龄).to.eql(1);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为胡罗，年龄为9岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[7].fields.姓名).to.eql(\"胡罗\");\r",
                          "//     pm.expect(jsonData.data.records[7].fields.年龄).to.eql(9);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为高可，年龄为6岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[8].fields.姓名).to.eql(\"高可\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年龄).to.eql(6);\r",
                          "// });\r",
                          "// pm.test(\"接口返回第一个姓名为蔡琴，年龄为4岁\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[9].fields.姓名).to.eql(\"蔡琴\");\r",
                          "//     pm.expect(jsonData.data.records[9].fields.年龄).to.eql(4);\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwvY6ZL9HEHs&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwvY6ZL9HEHs"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "单选string、多选array of strings正序 Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"接口返回排序第一个人为张三，状态为咨询中，年级为123456年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.状态).to.eql(\"咨询中\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[0]).to.eql(\"一年级\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[1]).to.eql(\"二年级\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[2]).to.eql(\"三年级\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[3]).to.eql(\"四年级\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[4]).to.eql(\"五年级\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.年级[5]).to.eql(\"六年级\");\r",
                          "});\r",
                          "pm.test(\"接口返回排序第二个人为胡罗，状态为咨询中，年级为235年级\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"胡罗\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.状态).to.eql(\"咨询中\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.年级[0]).to.eql(\"二年级\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.年级[1]).to.eql(\"三年级\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.年级[2]).to.eql(\"五年级\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recYRZw2Vuk0u\",\r\n    \"fields\": {\r\n      \"姓名\": \"张三\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcTuIVWcRMJr\",\r\n          \"name\": \"6f59f62edc0ceb00adab46fddee67dfe.jpg\",\r\n          \"size\": 197036,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/7ba3414ca455476aa7229191af1c0189\",\r\n          \"width\": 1024,\r\n          \"height\": 1820,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/7ba3414ca455476aa7229191af1c0189\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"年级\": [\r\n        \"一年级\",\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"四年级\",\r\n        \"五年级\",\r\n        \"六年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 8,\r\n      \"家庭住址\": \"朝阳区\",\r\n      \"电话\": \"164 3698 7869\",\r\n      \"缴费记录\": [\r\n        \"recOEcjHRpkdK\",\r\n        \"recLLTt5EuD4j\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recTYNmVHz4Qh\",\r\n    \"fields\": {\r\n      \"姓名\": \"胡罗\",\r\n      \"百分比\": 0.34,\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcrHGKG8KdjP\",\r\n          \"name\": \"R-C.jpg\",\r\n          \"size\": 123794,\r\n          \"mimeType\": \"image/jpeg\",\r\n          \"token\": \"space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\",\r\n          \"width\": 1275,\r\n          \"height\": 717,\r\n          \"url\": \"https://s1.vika.cn/space/2021/12/22/9c553c2931934c3d99db3dad7e8586b3\"\r\n        }\r\n      ],\r\n      \"状态\": \"咨询中\",\r\n      \"性别\": \"男\",\r\n      \"年级\": [\r\n        \"二年级\",\r\n        \"三年级\",\r\n        \"五年级\"\r\n      ],\r\n      \"身份证\": \"440857000000000000x\",\r\n      \"年龄\": 9,\r\n      \"家庭住址\": \"老城区\",\r\n      \"电话\": \"163 3698 2479\",\r\n      \"缴费记录\": [\r\n        \"recFyTApA1mi7\",\r\n        \"recJ4PWSyCdF6\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwZKiZIw7kpN&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwZKiZIw7kpN"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取单选-状态、多选-年级正序的结果 Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"返回code为200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "// pm.test(\"接口返回排序第一个人为张三，状态为咨询中，年级为123456年级\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[0].fields.姓名).to.eql(\"张三\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.状态).to.eql(\"咨询中\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[2]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[3]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[4]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[0].fields.年级[5]).to.eql(\"六年级\");\r",
                          "// });\r",
                          "// pm.test(\"接口返回排序第二个人为胡罗，状态为咨询中，年级为235年级\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[1].fields.姓名).to.eql(\"胡罗\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.状态).to.eql(\"咨询中\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[0]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[1]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[1].fields.年级[2]).to.eql(\"五年级\");\r",
                          "// });\r",
                          "// pm.test(\"接口返回排序第三个人为赵耀，状态为已入学，年级为一年级\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[2].fields.姓名).to.eql(\"赵耀\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.状态).to.eql(\"已入学\");\r",
                          "//     pm.expect(jsonData.data.records[2].fields.年级).to.eql(\"一年级\");\r",
                          "// });\r",
                          "// pm.test(\"接口返回排序第九个人为李美美，状态为放弃，年级为123456年级\", function () {\r",
                          "//     var jsonData = pm.response.json();\r",
                          "//     pm.expect(jsonData.data.records[8].fields.姓名).to.eql(\"李美美\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.状态).to.eql(\"放弃\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[0]).to.eql(\"一年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[1]).to.eql(\"二年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[2]).to.eql(\"三年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[3]).to.eql(\"四年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[4]).to.eql(\"五年级\");\r",
                          "//     pm.expect(jsonData.data.records[8].fields.年级[5]).to.eql(\"六年级\");\r",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstPE1DiRPRaNF1aYg/records?viewId=viwZKiZIw7kpN&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstPE1DiRPRaNF1aYg",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwZKiZIw7kpN"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "钟潇（成员、勾选、评分、网址）",
              "item": [
                {
                  "name": "成员",
                  "item": [
                    {
                      "name": "成员A-Z",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"成员A-Z\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"reccF9F2xkqSR\",\r\n    \"fields\": {\r\n      \"标题\": \"test2\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcWL25H94TYS\",\r\n          \"name\": \"测试CSV.CSV\",\r\n          \"size\": 2643,\r\n          \"mimeType\": \"text/csv\",\r\n          \"token\": \"space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\",\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1470293994248802306\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"NagisaKon\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/07/b5cf7296114d4d799d52a8799be21ab3\"\r\n        }\r\n      ],\r\n      \"评分\": 1,\r\n      \"网址\": \"https://www.google.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYlzs2s9312\",\r\n    \"fields\": {\r\n      \"标题\": \"test3\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgtsjLdtCL5\",\r\n          \"name\": \"测试GIF.gif\",\r\n          \"size\": 1517631,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\",\r\n          \"width\": 1255,\r\n          \"height\": 821,\r\n          \"url\": \"https://s1.vika.cn/space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1475369241790054401\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"钟梓烨-个人\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/12/58fcd3f176a54f29b2bf754dbc1d53a6\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"评分\": 3,\r\n      \"网址\": \"https://www.taobao.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viwT31lzUjlMT&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwT31lzUjlMT"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "成员A-Z分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取成员A-Z结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test2\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.成员[0].name).to.eql(\"钟梓烨-个人\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test3\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.成员[0].name).to.eql(\"钟梓烨-个人\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test4\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.成员[0].name).to.eql(\"何天威\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test1\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.成员[0].name).to.eql(\"1号机\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?field=成员&order=asc",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "field",
                              "value": "成员"
                            },
                            {
                              "key": "order",
                              "value": "asc"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "成员Z-A",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"成员Z-1\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recKJWaxUZpds\",\r\n    \"fields\": {\r\n      \"标题\": \"test1\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcViYZ62h4bt\",\r\n          \"name\": \"测试DOC.doc\",\r\n          \"size\": 26624,\r\n          \"mimeType\": \"application/msword\",\r\n          \"token\": \"space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\",\r\n          \"width\": 0,\r\n          \"height\": 0,\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1481107937207201794\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"1号机\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/e4d073b1fa674bc884a8c194e9248ecf\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"网址\": \"https://www.baidu.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgCKQFK3UWq\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viwT31lzUjlMT&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwT31lzUjlMT"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "成Z-A分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取成员Z-A结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    // pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test2\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.成员[0].name).to.eql(\"NagisaKon\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test3\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.成员[0].name).to.eql(\"钟梓烨-个人\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test4\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.成员[0].name).to.eql(\"何天威\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test1\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.成员[0].name).to.eql(\"1号机\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viwT31lzUjlMT&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwT31lzUjlMT"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "勾选",
                  "item": [
                    {
                      "name": "勾选0-1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"勾选0-1\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"reccF9F2xkqSR\",\r\n    \"fields\": {\r\n      \"标题\": \"test2\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcWL25H94TYS\",\r\n          \"name\": \"测试CSV.CSV\",\r\n          \"size\": 2643,\r\n          \"mimeType\": \"text/csv\",\r\n          \"token\": \"space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\",\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1470293994248802306\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"NagisaKon\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/07/b5cf7296114d4d799d52a8799be21ab3\"\r\n        }\r\n      ],\r\n      \"评分\": 1,\r\n      \"网址\": \"https://www.google.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgCKQFK3UWq\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viwAEYAhXlRWV&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwAEYAhXlRWV"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "勾选0-1分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取勾选0-1结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    // pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test2\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.勾选).to.not.exist;\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test4\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.勾选).to.not.exist;\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test1\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.勾选).to.eql(true);\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test3\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.勾选).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viwT31lzUjlMT&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwT31lzUjlMT"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "勾选1-0",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"勾选1-0\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recKJWaxUZpds\",\r\n    \"fields\": {\r\n      \"标题\": \"test1\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcViYZ62h4bt\",\r\n          \"name\": \"测试DOC.doc\",\r\n          \"size\": 26624,\r\n          \"mimeType\": \"application/msword\",\r\n          \"token\": \"space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\",\r\n          \"width\": 0,\r\n          \"height\": 0,\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1481107937207201794\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"teamxkon\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/e4d073b1fa674bc884a8c194e9248ecf\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"网址\": \"https://www.baidu.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYlzs2s9312\",\r\n    \"fields\": {\r\n      \"标题\": \"test3\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgtsjLdtCL5\",\r\n          \"name\": \"测试GIF.gif\",\r\n          \"size\": 1517631,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\",\r\n          \"width\": 1255,\r\n          \"height\": 821,\r\n          \"url\": \"https://s1.vika.cn/space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1475369241790054401\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"钟梓烨-个人\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/12/58fcd3f176a54f29b2bf754dbc1d53a6\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"评分\": 3,\r\n      \"网址\": \"https://www.taobao.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viwAEYAhXlRWV&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwAEYAhXlRWV"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "勾选1-0分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取勾选1-0结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    // pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test1\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.勾选).to.eql(true);\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test3\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.勾选).to.eql(true);\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test2\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.勾选).to.not.exist;\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test4\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.勾选).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viwAEYAhXlRWV&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwAEYAhXlRWV"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "评分",
                  "item": [
                    {
                      "name": "评分1-9",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"评分1-9\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"reccF9F2xkqSR\",\r\n    \"fields\": {\r\n      \"标题\": \"test2\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcWL25H94TYS\",\r\n          \"name\": \"测试CSV.CSV\",\r\n          \"size\": 2643,\r\n          \"mimeType\": \"text/csv\",\r\n          \"token\": \"space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\",\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1470293994248802306\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"NagisaKon\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/07/b5cf7296114d4d799d52a8799be21ab3\"\r\n        }\r\n      ],\r\n      \"评分\": 1,\r\n      \"网址\": \"https://www.google.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgCKQFK3UWq\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viw9SghKLZ5fW&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw9SghKLZ5fW"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "评分1-9分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取评分1-9结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test4\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.评分).to.eql(5);\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test3\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.评分).to.eql(3);\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.评分).to.eql(1);\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test1\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viw9SghKLZ5fW&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw9SghKLZ5fW"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "评分9-1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"评分9-1\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgCKQFK3UWq\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYlzs2s9312\",\r\n    \"fields\": {\r\n      \"标题\": \"test3\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgtsjLdtCL5\",\r\n          \"name\": \"测试GIF.gif\",\r\n          \"size\": 1517631,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\",\r\n          \"width\": 1255,\r\n          \"height\": 821,\r\n          \"url\": \"https://s1.vika.cn/space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1475369241790054401\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"钟梓烨-个人\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/12/58fcd3f176a54f29b2bf754dbc1d53a6\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"评分\": 3,\r\n      \"网址\": \"https://www.taobao.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viw9SghKLZ5fW&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw9SghKLZ5fW"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "评分9-1分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取评分9-1结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test4\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.评分).to.eql(5);\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.评分).to.eql(3);\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.评分).to.eql(1);\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test1\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viw9SghKLZ5fW&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw9SghKLZ5fW"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "网址",
                  "item": [
                    {
                      "name": "网址A-Z",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"网址A-Z\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recKJWaxUZpds\",\r\n    \"fields\": {\r\n      \"标题\": \"test1\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcViYZ62h4bt\",\r\n          \"name\": \"测试DOC.doc\",\r\n          \"size\": 26624,\r\n          \"mimeType\": \"application/msword\",\r\n          \"token\": \"space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\",\r\n          \"width\": 0,\r\n          \"height\": 0,\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1481107937207201794\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"teamxkon\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/e4d073b1fa674bc884a8c194e9248ecf\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"网址\": \"https://www.baidu.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgCKQFK3UWq\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viwQNj7dq6OHr&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwQNj7dq6OHr"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "网址A-Z分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取网址A-Z结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test1\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.网址.text).to.eql(\"https://www.baidu.com/\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test4\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.网址.text).to.eql(\"https://www.feishu.com/\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.网址.text).to.eql(\"https://www.google.com/\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test3\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.网址.text).to.eql(\"https://www.taobao.com/\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viwQNj7dq6OHr&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwQNj7dq6OHr"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "网址Z-A",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"网址Z-A\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgCKQFK3UWq\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYlzs2s9312\",\r\n    \"fields\": {\r\n      \"标题\": \"test3\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcgtsjLdtCL5\",\r\n          \"name\": \"测试GIF.gif\",\r\n          \"size\": 1517631,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\",\r\n          \"width\": 1255,\r\n          \"height\": 821,\r\n          \"url\": \"https://s1.vika.cn/space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1475369241790054401\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"钟梓烨-个人\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/12/58fcd3f176a54f29b2bf754dbc1d53a6\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"评分\": 3,\r\n      \"网址\": \"https://www.taobao.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstixfppSUEu1YeMas/records?viewId=viwQNj7dq6OHr&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstixfppSUEu1YeMas",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwQNj7dq6OHr"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "网址Z-A分组后数据",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"获取网址Z-A结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "    \r",
                              "    pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test1\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.网址.text).to.eql(\"https://www.baidu.com/\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test4\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.网址.text).to.eql(\"https://www.feishu.com/\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.网址.text).to.eql(\"https://www.google.com/\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.网址.text).to.eql(\"https://www.taobao.com/\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstuTFXhlXBuAajeRb/records?viewId=viw9SghKLZ5fW&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstuTFXhlXBuAajeRb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw9SghKLZ5fW"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "组合",
                  "item": [
                    {
                      "name": "组合正序",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"组合倒序\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"reccF9F2xkqSR\",\r\n    \"fields\": {\r\n      \"标题\": \"test2\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcxAZCg5hooE\",\r\n          \"name\": \"测试CSV.CSV\",\r\n          \"size\": 2643,\r\n          \"mimeType\": \"text/csv\",\r\n          \"token\": \"space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\",\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/392fc34c057b4d07a98423a192e1dc54\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1470293994248802306\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"NagisaKon\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/07/b5cf7296114d4d799d52a8799be21ab3\"\r\n        }\r\n      ],\r\n      \"评分\": 1,\r\n      \"网址\": \"https://www.google.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec3a2tYWMbS9\",\r\n    \"fields\": {\r\n      \"标题\": \"test5\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcGPfGyAJ5Eg\",\r\n          \"name\": \"测试DOC.doc\",\r\n          \"size\": 26624,\r\n          \"mimeType\": \"application/msword\",\r\n          \"token\": \"space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\",\r\n          \"url\": \"https://s1.vika.cn/space/2022/04/18/48318bd0d7d34e57b9174dc3715101d8\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1470293994248802306\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"NagisaKon\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/07/b5cf7296114d4d799d52a8799be21ab3\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"评分\": 3,\r\n      \"网址\": \"https://www.baidu.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstBSge3tJvPtgjm78/records?viewId=viwbYza1pkFHe&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstBSge3tJvPtgjm78",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwbYza1pkFHe"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "组合正序分组后结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"组合正序分组后结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test2\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.附件[0].name).to.eql(\"测试CSV.CSV\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.成员[0].name).to.eql(\"NagisaKon\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.勾选).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[0].fields.评分).to.eql(1);\r",
                              "    // pm.expect(jsonData.data.records[0].fields.网址).to.eql(\"https://www.google.com/\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test5\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.附件[0].name).to.eql(\"测试DOC.doc\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.成员[0].name).to.eql(\"NagisaKon\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.勾选).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[1].fields.评分).to.eql(3);\r",
                              "    // pm.expect(jsonData.data.records[1].fields.网址).to.eql(\"https://www.baidu.com/\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test3\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.附件[0].name).to.eql(\"测试GIF.gif\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.成员[0].name).to.eql(\"钟梓烨-个人\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.勾选).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.评分).to.eql(3);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.网址).to.eql(\"https://www.taobao.com/\");\r",
                              "    \r",
                              "    // pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test4\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.附件[0].name).to.eql(\"测试BMP.bmp\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.成员[0].name).to.eql(\"何天威\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.勾选).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[3].fields.评分).to.eql(5);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.网址).to.eql(\"https://www.feishu.com/\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[4].fields.标题).to.eql(\"test1\");\r",
                              "    // pm.expect(jsonData.data.records[4].fields.附件[0].name).to.eql(\"测试DOC.doc\");\r",
                              "    // pm.expect(jsonData.data.records[4].fields.成员[0].name).to.eql(\"teamxkon\");\r",
                              "    // pm.expect(jsonData.data.records[4].fields.勾选).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[4].fields.评分).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[4].fields.网址).to.eql(\"https://www.baidu.com/\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstBSge3tJvPtgjm78/records?viewId=viwbYza1pkFHe&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstBSge3tJvPtgjm78",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwbYza1pkFHe"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "组合倒序",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"组合倒序\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "PATCH",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"recsc3aWRuEpd\",\r\n    \"fields\": {\r\n      \"标题\": \"test4\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atc6BEoBX6CVP\",\r\n          \"name\": \"测试BMP.bmp\",\r\n          \"size\": 3216582,\r\n          \"mimeType\": \"image/bmp\",\r\n          \"token\": \"space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\",\r\n          \"width\": 1239,\r\n          \"height\": 649,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/11/1e02fdc7f11844bf88fe99411e476324\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1480522756888989698\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"何天威\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e\"\r\n        }\r\n      ],\r\n      \"评分\": 5,\r\n      \"网址\": \"https://www.feishu.com/\"\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"recYlzs2s9312\",\r\n    \"fields\": {\r\n      \"标题\": \"test3\",\r\n      \"附件\": [\r\n        {\r\n          \"id\": \"atcfP6ais7kRm\",\r\n          \"name\": \"测试GIF.gif\",\r\n          \"size\": 1517631,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\",\r\n          \"width\": 1255,\r\n          \"height\": 821,\r\n          \"url\": \"https://s1.vika.cn/space/2022/01/22/6d97b52c26204c11909efbd254a2d8a9\"\r\n        }\r\n      ],\r\n      \"成员\": [\r\n        {\r\n          \"id\": \"1475369241790054401\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"钟梓烨-个人\",\r\n          \"avatar\": \"https://s1.vika.cn/public/2022/03/12/58fcd3f176a54f29b2bf754dbc1d53a6\"\r\n        }\r\n      ],\r\n      \"勾选\": true,\r\n      \"评分\": 3,\r\n      \"网址\": \"https://www.taobao.com/\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstBSge3tJvPtgjm78/records?viewId=viwccwgZwzmVb&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstBSge3tJvPtgjm78",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwccwgZwzmVb"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "组合倒序分组后结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"组合倒序分组后结果\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[3].fields.标题).to.eql(\"test2\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.附件[0].name).to.eql(\"测试CSV.CSV\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.成员[0].name).to.eql(\"NagisaKon\");\r",
                              "    // pm.expect(jsonData.data.records[3].fields.勾选).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[3].fields.评分).to.eql(1);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.网址).to.eql(\"https://www.google.com/\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[2].fields.标题).to.eql(\"test5\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.附件[0].name).to.eql(\"测试DOC.doc\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.成员[0].name).to.eql(\"NagisaKon\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.勾选).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.评分).to.eql(3);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.网址).to.eql(\"https://www.baidu.com/\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[1].fields.标题).to.eql(\"test3\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.附件[0].name).to.eql(\"测试GIF.gif\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.成员[0].name).to.eql(\"钟梓烨-个人\");\r",
                              "    // pm.expect(jsonData.data.records[1].fields.勾选).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[1].fields.评分).to.eql(3);\r",
                              "    // pm.expect(jsonData.data.records[1].fields.网址).to.eql(\"https://www.taobao.com/\");\r",
                              "    \r",
                              "    // pm.expect(jsonData.data.records[0].fields.标题).to.eql(\"test4\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.附件[0].name).to.eql(\"测试BMP.bmp\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.成员[0].name).to.eql(\"何天威\");\r",
                              "    // pm.expect(jsonData.data.records[0].fields.勾选).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[0].fields.评分).to.eql(5);\r",
                              "    // pm.expect(jsonData.data.records[0].fields.网址).to.eql(\"https://www.feishu.com/\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[4].fields.标题).to.eql(\"test1\");\r",
                              "    // pm.expect(jsonData.data.records[4].fields.附件[0].name).to.eql(\"测试DOC.doc\");\r",
                              "    // pm.expect(jsonData.data.records[4].fields.成员[0].name).to.eql(\"teamxkon\");\r",
                              "    // pm.expect(jsonData.data.records[4].fields.勾选).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[4].fields.评分).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[4].fields.网址).to.eql(\"https://www.baidu.com/\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstBSge3tJvPtgjm78/records?viewId=viwccwgZwzmVb&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstBSge3tJvPtgjm78",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwccwgZwzmVb"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usky0IDpvjlyUNKNPjqgghP",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "神奇引用",
          "item": [
            {
              "name": "钟梓烨",
              "item": [
                {
                  "name": "邮箱",
                  "item": [
                    {
                      "name": "原样",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.原样[0]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[0]).to.eql(\"zhongziye@vikadata.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[1]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.原样[0]).to.eql(\"112@163.com\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.原样[0]).to.eql(\"163.com\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱平均数引用所有数据\", function () {\r",
                              "   // var jsonData = pm.response.json();\r",
                              "   // pm.expect(jsonData.data.records[0].fields.平均数).to.eql(0);\r",
                              "    //pm.expect(jsonData.data.records[1].fields.平均数).to.eql(0);\r",
                              "    //pm.expect(jsonData.data.records[2].fields.平均数).to.eql(0);\r",
                              "    //pm.expect(jsonData.data.records[3].fields.平均数).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱非空数值计数引用所有数据\", function () {\r",
                              "   // var jsonData = pm.response.json();\r",
                              "    //pm.expect(jsonData.data.records[0].fields.非空数值计数).to.eql(0);\r",
                              "   // pm.expect(jsonData.data.records[1].fields.非空数值计数).to.eql(0);\r",
                              "   // pm.expect(jsonData.data.records[2].fields.非空数值计数).to.eql(0);\r",
                              "   // pm.expect(jsonData.data.records[3].fields.非空数值计数).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱非空值计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱全计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "总和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱最小值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最小值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱最大值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最大值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱和运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-邮箱异或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.异或运算).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话去重引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.去重[0]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.去重[0]).to.eql(\"zhongziye@vikadata.com\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.去重[0]).to.eql(\"112@163.com\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.去重[0]).to.eql(\"163.com\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "过滤空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话过滤空值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.过滤空值[0]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[0]).to.eql(\"zhongziye@vikadata.com\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.过滤空值[0]).to.eql(\"112@163.com\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.过滤空值[0]).to.eql(\"163.com\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话逗号连接引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(\"zhongziye@vikadata.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[1]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.逗号连接[0]).to.eql(\"112@163.com\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.逗号连接[0]).to.eql(\"163.com\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话连接成文本引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[0]).to.eql(\"879170043@qq.com\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[0]).to.eql(\"zhongziye@vikadata.com\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.连接成文本[0]).to.eql(\"112@163.com\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.连接成文本[0]).to.eql(\"163.com\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstz89LDjLe3Z7AHZ1/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstz89LDjLe3Z7AHZ1",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "神奇关联",
                  "item": [
                    {
                      "name": "原样",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.原样[0]).to.eql(\"recUz06p16BwH\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[0]).to.eql(\"recxjhjPvv8tB\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.原样[0]).to.eql(\"recuKmispFNlk\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.原样[0]).to.eql(\"recopUNMWlaZK\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联平均数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.平均数).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.平均数).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.平均数).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.平均数).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联非空值计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联全计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "总和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联最小值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最小值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联最大值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最大值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联和运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联异或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.异或运算).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用去重引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.去重[0]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.去重[0]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.去重[0]).to.eql(\"recFhwdy7LiYT\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.去重[0]).to.eql(\"recHRzlhGxmaO\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "过滤空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联过滤空值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.过滤空值[0]).to.eql(\"recUz06p16BwH\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[0]).to.eql(\"recxjhjPvv8tB\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.过滤空值[0]).to.eql(\"recuKmispFNlk\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.过滤空值[0]).to.eql(\"recopUNMWlaZK\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联逗号连接引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(\"recUz06p16BwH\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(\"recxjhjPvv8tB\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.逗号连接[0]).to.eql(\"recuKmispFNlk\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.逗号连接[0]).to.eql(\"recopUNMWlaZK\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-关联连接成文本引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[0]).to.eql(\"recUz06p16BwH\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[0]).to.eql(\"recxjhjPvv8tB\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.连接成文本[0]).to.eql(\"recuKmispFNlk\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.连接成文本[0]).to.eql(\"recopUNMWlaZK\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dst9JUvo3QYpWzDYHH/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dst9JUvo3QYpWzDYHH",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "神奇引用",
                  "item": [
                    {
                      "name": "原样",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.原样[0]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[0]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[1]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.原样[0]).to.eql(\"recFhwdy7LiYT\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.原样[0]).to.eql(\"recHRzlhGxmaO\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用全计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.全计数).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[2].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "总和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用最小值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最小值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用最大值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最大值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用和运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用异或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.异或运算).to.eql();\r",
                              "    pm.expect(jsonData.data.records[1].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用去重引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.去重[0]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.去重[1]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.去重[0]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.去重[1]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.去重[0]).to.eql(\"recFhwdy7LiYT\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.去重[0]).to.eql(\"recHRzlhGxmaO\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "过滤空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用过滤空值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.过滤空值[0]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.过滤空值[1]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[0]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[1]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.过滤空值[0]).to.eql(\"recFhwdy7LiYT\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.过滤空值[0]).to.eql(\"recHRzlhGxmaO\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用逗号连接引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[1]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[0]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[1]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.过滤空值[0]).to.eql(\"recFhwdy7LiYT\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.过滤空值[0]).to.eql(\"recHRzlhGxmaO\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-引用连接成文本引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[0]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[1]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[0]).to.eql(\"rec6RMjGPQrpB\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[1]).to.eql(\"reczq1zDaACJS\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.连接成文本[0]).to.eql(\"recFhwdy7LiYT\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.连接成文本[0]).to.eql(\"recHRzlhGxmaO\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstnyUUQiylomXhaTh/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstnyUUQiylomXhaTh",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "评分",
                  "item": [
                    {
                      "name": "原样",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.原样[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[0]).to.eql(10);\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[1]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[2].fields.原样[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.原样[0]).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分平均数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.平均数).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.平均数).to.eql(7.5);\r",
                              "    pm.expect(jsonData.data.records[2].fields.平均数).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.平均数).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分非空数值计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空数值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空数值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.非空数值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.非空数值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分非空值计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分全计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "总和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分总和引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.总和).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.总和).to.eql(15);\r",
                              "    pm.expect(jsonData.data.records[2].fields.总和).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.总和).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分最小值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最小值).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.最小值).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[2].fields.最小值).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.最小值).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分最大值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最大值).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.最大值).to.eql(10);\r",
                              "    pm.expect(jsonData.data.records[2].fields.最大值).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.最大值).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分和运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分异或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.异或运算).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分去重引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.去重[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.去重[0]).to.eql(10);\r",
                              "    pm.expect(jsonData.data.records[2].fields.去重[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.去重[0]).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "过滤空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分过滤空值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.过滤空值[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[0]).to.eql(10);\r",
                              "    pm.expect(jsonData.data.records[2].fields.过滤空值[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.过滤空值[0]).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分逗号连接引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(10);\r",
                              "    pm.expect(jsonData.data.records[2].fields.逗号连接[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.逗号连接[0]).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-评分连接成文本引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[0]).to.eql(10);\r",
                              "    pm.expect(jsonData.data.records[2].fields.连接成文本[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[3].fields.连接成文本[0]).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstGgKqTwzExVNfsHV/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstGgKqTwzExVNfsHV",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "电话",
                  "item": [
                    {
                      "name": "原样",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.原样[0]).to.eql(\"13631242466\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[0]).to.eql(\"31254677899\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.原样[1]).to.eql(\"13631242466\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.原样[0]).to.eql(\"0756-85548445\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.原样[0]).to.eql(\"（086）13269561886\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话平均数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.平均数).to.eql(13631242466);\r",
                              "    pm.expect(jsonData.data.records[1].fields.平均数).to.eql(22442960182.5);\r",
                              "    pm.expect(jsonData.data.records[2].fields.平均数).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.平均数).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话非空值计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话全计数引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[2].fields.全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "总和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话最小值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最小值).to.eql(13631242466);\r",
                              "    pm.expect(jsonData.data.records[1].fields.最小值).to.eql(13631242466);\r",
                              "    pm.expect(jsonData.data.records[2].fields.最小值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最小值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话最大值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.最大值).to.eql(13631242466);\r",
                              "    pm.expect(jsonData.data.records[1].fields.最大值).to.eql(31254677899);\r",
                              "    pm.expect(jsonData.data.records[2].fields.最大值).to.eql();\r",
                              "    pm.expect(jsonData.data.records[3].fields.最大值).to.eql();\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话和运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话异或运算引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.异或运算).to.eql();\r",
                              "    pm.expect(jsonData.data.records[2].fields.异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话去重引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.去重[0]).to.eql(\"13631242466\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.去重[0]).to.eql(\"31254677899\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.去重[0]).to.eql(\"0756-85548445\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.去重[0]).to.eql(\"（086）13269561886\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "过滤空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话过滤空值引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.过滤空值[0]).to.eql(\"13631242466\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.过滤空值[0]).to.eql(\"31254677899\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.过滤空值[0]).to.eql(\"0756-85548445\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.过滤空值[0]).to.eql(\"（086）13269561886\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话逗号连接引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(\"13631242466\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(\"31254677899\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.逗号连接[0]).to.eql(\"0756-85548445\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.逗号连接[0]).to.eql(\"（086）13269561886\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-电话连接成文本引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[0]).to.eql(\"13631242466\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[0]).to.eql(\"31254677899\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.连接成文本[0]).to.eql(\"0756-85548445\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.连接成文本[0]).to.eql(\"（086）13269561886\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "uskR7JvUjqZJeYo4SdFu1Ma",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstD9w9q4VxfjHQNay/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstD9w9q4VxfjHQNay",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "钟潇",
              "item": [
                {
                  "name": "神奇引用-附件",
                  "item": [
                    {
                      "name": "135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['135-9-附件-过滤所有空值(ARRAYCOMPACT)-Array'][2].name).to.eql(\"excel小程序03.xlsx\");\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "134-9-附件-去重(ARRAYUNIQUE)-Array Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"134-9-附件-去重(ARRAYUNIQUE)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['134-9-附件-去重(ARRAYUNIQUE)-Array'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['134-9-附件-去重(ARRAYUNIQUE)-Array'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['134-9-附件-去重(ARRAYUNIQUE)-Array'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['134-9-附件-去重(ARRAYUNIQUE)-Array'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['134-9-附件-去重(ARRAYUNIQUE)-Array'][2].name).to.eql(\"excel小程序03.xlsx\");\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "133-9-附件-逗号连接(ARRAYJOIN)-String",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"133-9-附件-逗号连接(ARRAYJOIN)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "// test1\r",
                              "    pm.expect(jsonData.data.records[0].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][0].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/d07c134b502940819285d847827acfe5\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][1].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/393b075ec4a441468c0385652a8c954b\");\r",
                              "// test2\r",
                              "    pm.expect(jsonData.data.records[1].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][0].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/d07c134b502940819285d847827acfe5\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][1].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/393b075ec4a441468c0385652a8c954b\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][2].name).to.eql(\"excel小程序03.xlsx\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['133-9-附件-逗号连接(ARRAYJOIN)-String'][2].url).to.eql(\"https://s1.vika.cn/space/2022/04/30/9c764f376fe349079343f62ac70c77c4\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "132-9-附件-连接成文本(CONCATENATE)-String Copy Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"132-9-附件-连接成文本(CONCATENATE)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "// test1\r",
                              "    pm.expect(jsonData.data.records[0].fields['132-9-附件-连接成文本(CONCATENATE)-String'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['132-9-附件-连接成文本(CONCATENATE)-String'][0].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/d07c134b502940819285d847827acfe5\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['132-9-附件-连接成文本(CONCATENATE)-String'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['132-9-附件-连接成文本(CONCATENATE)-String'][1].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/393b075ec4a441468c0385652a8c954b\");\r",
                              "// test2\r",
                              "    pm.expect(jsonData.data.records[1].fields['132-9-附件-连接成文本(CONCATENATE)-String'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['132-9-附件-连接成文本(CONCATENATE)-String'][0].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/d07c134b502940819285d847827acfe5\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['132-9-附件-连接成文本(CONCATENATE)-String'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['132-9-附件-连接成文本(CONCATENATE)-String'][1].url).to.eql(\"https://s1.vika.cn/space/2021/12/02/393b075ec4a441468c0385652a8c954b\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['132-9-附件-连接成文本(CONCATENATE)-String'][2].name).to.eql(\"excel小程序03.xlsx\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['132-9-附件-连接成文本(CONCATENATE)-String'][2].url).to.eql(\"https://s1.vika.cn/space/2022/04/30/9c764f376fe349079343f62ac70c77c4\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "131-9-附件-异或运算(XOR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"131-9-附件-异或运算(XOR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['131-9-附件-异或运算(XOR)-Boolean']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['131-9-附件-异或运算(XOR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "130-9-附件-或运算(OR)-Boolean Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"130-9-附件-或运算(OR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['130-9-附件-或运算(OR)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['130-9-附件-或运算(OR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "129-9-附件-和运算(AND)-Boolean Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"129-9-附件-和运算(AND)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['129-9-附件-和运算(AND)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['129-9-附件-和运算(AND)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "128-9-附件-最大值(MAX)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"128-9-附件-最大值(MAX)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['128-9-附件-最大值(MAX)-Number']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['128-9-附件-最大值(MAX)-Number']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "127-9-附件-最小值(MIN)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"127-9-附件-最小值(MIN)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['127-9-附件-最小值(MIN)-Number']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['127-9-附件-最小值(MIN)-Number']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "126-9-附件-求和(SUM)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"126-9-附件-求和(SUM)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['126-9-附件-求和(SUM)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['126-9-附件-求和(SUM)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "125-9-附件-全计数(COUNTALL)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"125-9-附件-全计数(COUNTALL)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['125-9-附件-全计数(COUNTALL)-Number']).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields['125-9-附件-全计数(COUNTALL)-Number']).to.eql(3);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "124-9-附件-非空计数(COUNTA)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"124-9-附件-非空计数(COUNTA)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['124-9-附件-非空计数(COUNTA)-Number']).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields['124-9-附件-非空计数(COUNTA)-Number']).to.eql(3);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "123-9-附件-非空数值计数(COUNT)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"123-9-附件-非空数值计数(COUNT)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['123-9-附件-非空数值计数(COUNT)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['123-9-附件-非空数值计数(COUNT)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "122-9-附件-平均值(AVERAGE)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"122-9-附件-平均值(AVERAGE)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['122-9-附件-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['122-9-附件-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "121-9-附件-原样引用(VALUES)-Array Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"121-9-附件-原样引用(VALUES)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['121-9-附件-原样引用(VALUES)-Array'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[0].fields['121-9-附件-原样引用(VALUES)-Array'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['121-9-附件-原样引用(VALUES)-Array'][0].name).to.eql(\"R.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['121-9-附件-原样引用(VALUES)-Array'][1].name).to.eql(\"IMG_20200422_090222.jpeg\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['121-9-附件-原样引用(VALUES)-Array'][2].name).to.eql(\"excel小程序03.xlsx\");\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "type": "text/javascript",
                        "exec": [""]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [""]
                      }
                    }
                  ]
                },
                {
                  "name": "神奇引用-成员",
                  "item": [
                    {
                      "name": "149-10-成员-去重(ARRAYUNIQUE)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"149-10-成员-去重(ARRAYUNIQUE)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['149-10-成员-去重(ARRAYUNIQUE)-Array'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['149-10-成员-去重(ARRAYUNIQUE)-Array'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['149-10-成员-去重(ARRAYUNIQUE)-Array'][1].name).to.eql(\"钟梓烨\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "148-10-成员-逗号连接(ARRAYJOIN)-String",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"148-10-成员-逗号连接(ARRAYJOIN)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['148-10-成员-逗号连接(ARRAYJOIN)-String'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['148-10-成员-逗号连接(ARRAYJOIN)-String'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['148-10-成员-逗号连接(ARRAYJOIN)-String'][1].name).to.eql(\"钟梓烨\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "147-10-成员-连接成文本(CONCATENATE)-String",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"147-10-成员-连接成文本(CONCATENATE)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['147-10-成员-连接成文本(CONCATENATE)-String'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['147-10-成员-连接成文本(CONCATENATE)-String'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['147-10-成员-连接成文本(CONCATENATE)-String'][1].name).to.eql(\"钟梓烨\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "146-10-成员-异或运算(XOR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"146-10-成员-异或运算(XOR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['146-10-成员-异或运算(XOR)-Boolean']).to.not.exist;\r",
                              "    // pm.expect(jsonData.data.records[1].fields['146-10-成员-异或运算(XOR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "145-10-成员-或运算(OR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"145-10-成员-或运算(OR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['145-10-成员-或运算(OR)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['145-10-成员-或运算(OR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "144-10-成员-和运算(AND)-Boolean Copy Copy Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"144-10-成员-和运算(AND)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['144-10-成员-和运算(AND)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['144-10-成员-和运算(AND)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "143-10-成员-最大值(MAX)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"143-10-成员-最大值(MAX)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['143-10-成员-最大值(MAX)-Number']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['143-10-成员-最大值(MAX)-Number']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "142-10-成员-最小值(MIN)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"142-10-成员-最小值(MIN)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['142-10-成员-最小值(MIN)-Number']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['142-10-成员-最小值(MIN)-Number']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "141-10-成员-求和(SUM)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"141-10-成员-求和(SUM)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['141-10-成员-求和(SUM)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['141-10-成员-求和(SUM)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "140-10-成员-全计数(COUNTALL)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"140-10-成员-全计数(COUNTALL)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['140-10-成员-全计数(COUNTALL)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['140-10-成员-全计数(COUNTALL)-Number']).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "139-10-成员-非空计数(COUNTA)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"139-10-成员-非空计数(COUNTA)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['139-10-成员-非空计数(COUNTA)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['139-10-成员-非空计数(COUNTA)-Number']).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "138-10-成员-非空数值计数(COUNT)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"137-10-成员-平均值(AVERAGE)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['137-10-成员-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['137-10-成员-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "137-10-成员-平均值(AVERAGE)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"137-10-成员-平均值(AVERAGE)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['137-10-成员-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['137-10-成员-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "136-10-成员-原样引用(VALUES)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"136-10-成员-原样引用(VALUES)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['136-10-成员-原样引用(VALUES)-Array'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['136-10-成员-原样引用(VALUES)-Array'][0].name).to.eql(\"易可可Coco\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['136-10-成员-原样引用(VALUES)-Array'][1].name).to.eql(\"钟梓烨\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "神奇引用-勾选",
                  "item": [
                    {
                      "name": "165-11-勾选-过滤所有空值(ARRAYCOMPACT)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"165-11-勾选-过滤所有空值(ARRAYCOMPACT)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['165-11-勾选-过滤所有空值(ARRAYCOMPACT)-Array'][0]).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['165-11-勾选-过滤所有空值(ARRAYCOMPACT)-Array'][0]).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "164-11-勾选-去重(ARRAYUNIQUE)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"164-11-勾选-去重(ARRAYUNIQUE)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['164-11-勾选-去重(ARRAYUNIQUE)-Array'][0]).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['164-11-勾选-去重(ARRAYUNIQUE)-Array'][0]).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "163-11-勾选-逗号连接(ARRAYJOIN)-String",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"163-11-勾选-逗号连接(ARRAYJOIN)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['163-11-勾选-逗号连接(ARRAYJOIN)-String'][0]).to.eql(1);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['163-11-勾选-逗号连接(ARRAYJOIN)-String'][0]).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "162-11-勾选-连接成文本(CONCATENATE)-String Copy Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"162-11-勾选-连接成文本(CONCATENATE)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['162-11-勾选-连接成文本(CONCATENATE)-String'][0]).to.eql(1);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['162-11-勾选-连接成文本(CONCATENATE)-String'][0]).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "161-11-勾选-异或运算(XOR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"161-11-勾选-异或运算(XOR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['161-11-勾选-异或运算(XOR)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['161-11-勾选-异或运算(XOR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "160-11-勾选-或运算(OR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"160-11-勾选-或运算(OR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['160-11-勾选-或运算(OR)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['160-11-勾选-或运算(OR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "159-11-勾选-和运算(AND)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"159-11-勾选-和运算(AND)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['159-11-勾选-和运算(AND)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['159-11-勾选-和运算(AND)-Boolean']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "158-11-勾选-最大值(MAX)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"158-11-勾选-最大值(MAX)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['158-11-勾选-最大值(MAX)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['158-11-勾选-最大值(MAX)-Number']).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "156-11-勾选-求和(SUM)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"156-11-勾选-求和(SUM)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['156-11-勾选-求和(SUM)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['156-11-勾选-求和(SUM)-Number']).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "155-11-勾选-全计数(COUNTALL)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"155-11-勾选-全计数(COUNTALL)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['155-11-勾选-全计数(COUNTALL)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['155-11-勾选-全计数(COUNTALL)-Number']).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "154-11-勾选-非空计数(COUNTA)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"154-11-勾选-非空计数(COUNTA)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['154-11-勾选-非空计数(COUNTA)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['154-11-勾选-非空计数(COUNTA)-Number']).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "153-11-勾选-非空数值计数(COUNT)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"153-11-勾选-非空数值计数(COUNT)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['153-11-勾选-非空数值计数(COUNT)-Number']).to.eql(tru0e);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['153-11-勾选-非空数值计数(COUNT)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "152-11-勾选-平均值(AVERAGE)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"152-11-勾选-平均值(AVERAGE)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['152-11-勾选-平均值(AVERAGE)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['152-11-勾选-平均值(AVERAGE)-Number']).to.eql(0.5);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "151-11-勾选-原样引用(VALUES)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"151-11-勾选-原样引用(VALUES)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['151-11-勾选-原样引用(VALUES)-Array'][0]).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['151-11-勾选-原样引用(VALUES)-Array'][0]).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "神奇引用-网址",
                  "item": [
                    {
                      "name": "195-13-网址-过滤所有空值(ARRAYCOMPACT)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"195-13-网址-过滤所有空值(ARRAYCOMPACT)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['195-13-网址-过滤所有空值(ARRAYCOMPACT)-Array'][0].title).to.eql(\"https://vika.cn/1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['195-13-网址-过滤所有空值(ARRAYCOMPACT)-Array'][0].text).to.eql(\"https://vika.cn/1\");\r",
                              "   \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "194-13-网址-去重(ARRAYUNIQUE)-Array",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"194-13-网址-去重(ARRAYUNIQUE)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['194-13-网址-去重(ARRAYUNIQUE)-Array'][0].title).to.eql(\"https://vika.cn/1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['194-13-网址-去重(ARRAYUNIQUE)-Array'][0].text).to.eql(\"https://vika.cn/1\");\r",
                              "  \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "193-13-网址-逗号连接(ARRAYJOIN)-String",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"193-13-网址-逗号连接(ARRAYJOIN)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['193-13-网址-逗号连接(ARRAYJOIN)-String'][0].title).to.eql(\"https://vika.cn/1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['193-13-网址-逗号连接(ARRAYJOIN)-String'][0].text).to.eql(\"https://vika.cn/1\");\r",
                              "   \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "192-13-网址-连接成文本(CONCATENATE)-String",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"192-13-网址-连接成文本(CONCATENATE)-String\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['192-13-网址-连接成文本(CONCATENATE)-String'][0].title).to.eql(\"https://vika.cn/1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['192-13-网址-连接成文本(CONCATENATE)-String'][0].text).to.eql(\"https://vika.cn/1\");\r",
                              "   \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "191-13-网址-异或运算(XOR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"191-13-网址-异或运算(XOR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['191-13-网址-异或运算(XOR)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['191-13-网址-异或运算(XOR)-Boolean']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "190-13-网址-或运算(OR)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"190-13-网址-或运算(OR)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['190-13-网址-或运算(OR)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['190-13-网址-或运算(OR)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "189-13-网址-和运算(AND)-Boolean",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"189-13-网址-和运算(AND)-Boolean\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['189-13-网址-和运算(AND)-Boolean']).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields['189-13-网址-和运算(AND)-Boolean']).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "188-13-网址-最大值(MAX)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"188-13-网址-最大值(MAX)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['188-13-网址-最大值(MAX)-Number']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['188-13-网址-最大值(MAX)-Number']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "187-13-网址-最小值(MIN)-Number Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"187-13-网址-最小值(MIN)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['187-13-网址-最小值(MIN)-Number']).to.not.exist;\r",
                              "    pm.expect(jsonData.data.records[1].fields['187-13-网址-最小值(MIN)-Number']).to.not.exist;\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "186-13-网址-求和(SUM)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"186-13-网址-求和(SUM)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['186-13-网址-求和(SUM)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['186-13-网址-求和(SUM)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "185-13-网址-全计数(COUNTALL)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"185-13-网址-全计数(COUNTALL)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['185-13-网址-全计数(COUNTALL)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['185-13-网址-全计数(COUNTALL)-Number']).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "184-13-网址-非空计数(COUNTA)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"184-13-网址-非空计数(COUNTA)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['184-13-网址-非空计数(COUNTA)-Number']).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields['184-13-网址-非空计数(COUNTA)-Number']).to.eql(2);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "183-13-网址-非空数值计数(COUNT)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"183-13-网址-非空数值计数(COUNT)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['183-13-网址-非空数值计数(COUNT)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['183-13-网址-非空数值计数(COUNT)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "182-13-网址-平均值(AVERAGE)-Number",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"182-13-网址-平均值(AVERAGE)-Number\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    // pm.expect(jsonData.data.records[0].fields['182-13-网址-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields['182-13-网址-平均值(AVERAGE)-Number']).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "181-13-网址-原样引用(VALUES)-Array Copy",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"181-13-网址-原样引用(VALUES)-Array\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.code).to.eql(200);\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[0].fields['181-13-网址-原样引用(VALUES)-Array'][0].title).to.eql(\"https://vika.cn/1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields['181-13-网址-原样引用(VALUES)-Array'][0].text).to.eql(\"https://vika.cn/1\");\r",
                              "   \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstL76tLQVMVWzVpb6/records?viewId=viw2yoTZtUR2S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstL76tLQVMVWzVpb6",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viw2yoTZtUR2S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "神奇引用-智能公式",
                  "item": [
                    {
                      "name": "number",
                      "item": [
                        {
                          "name": "number神奇引用-原样引用（VALUES）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-原样引用（VALUES）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-原样引用（VALUES）'][0]).to.eql(118.1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-原样引用（VALUES）'][0]).to.eql(118.1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-原样引用（VALUES）'][1]).to.eql(219.2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-平均数（AVERAGE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-平均数（AVERAGE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-平均数（AVERAGE）']).to.eql(118.1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-平均数（AVERAGE）']).to.eql(168.65);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-非空数值计数（COUNT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-非空数值计数（COUNT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-非空数值计数（COUNT）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-非空数值计数（COUNT）']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-非空值计数（COUNTA)",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-非空值计数（COUNTA)\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-非空值计数（COUNTA)']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-非空值计数（COUNTA)']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-全计数（COUNTALL）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-全计数（COUNTALL）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-全计数（COUNTALL）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-全计数（COUNTALL）']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-总和（SUM）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-总和（SUM）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-总和（SUM）']).to.eql(118.1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-总和（SUM）']).to.eql(337.3);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-最小值（MIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-最小值（MIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-最小值（MIN）']).to.eql(118.1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-最小值（MIN）']).to.eql(118.1);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-最大值（MAX）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-最大值（MAX）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-最大值（MAX）']).to.eql(118.1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-最大值（MAX）']).to.eql(219.2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-和运算（AND）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-和运算（AND）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-或运算（OR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-或运算（OR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-异或运算（XOR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-异或运算（XOR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-异或运算（XOR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-异或运算（XOR）']).to.not.exist;\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-连接成文本（CONCATENATE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-连接成文本（CONCATENATE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-连接成文本（CONCATENATE）'][1]).to.eql(219.2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-逗号连接（ARRAYJOIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-逗号连接（ARRAYJOIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-逗号连接（ARRAYJOIN）'][1]).to.eql(219.2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-去重（ARRAYUNIQUE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-去重（ARRAYUNIQUE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-去重（ARRAYUNIQUE）'][1]).to.eql(219.2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "number神奇引用-过滤所有空值（ARRAYCOMPACT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"number神奇引用-过滤所有空值（ARRAYCOMPACT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['number神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(118.10);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['number神奇引用-过滤所有空值（ARRAYCOMPACT）'][1]).to.eql(219.2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "string",
                      "item": [
                        {
                          "name": "string神奇引用-原样引用（VALUES）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-原样引用（VALUES）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-原样引用（VALUES）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-原样引用（VALUES）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-原样引用（VALUES）'][1]).to.eql(\"李四FALSE\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-平均数（AVERAGE",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-平均数（AVERAGE\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['string神奇引用-平均数（AVERAGE']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['string神奇引用-平均数（AVERAGE']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-非空数值计数（COUNT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-非空数值计数（COUNT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['string神奇引用-非空数值计数（COUNT）']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['string神奇引用-非空数值计数（COUNT）']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-非空值计数（COUNTA)",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-非空值计数（COUNTA)\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-非空值计数（COUNTA)']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-非空值计数（COUNTA)']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-全计数（COUNTALL）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-全计数（COUNTALL）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-全计数（COUNTALL）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-全计数（COUNTALL）']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-总和（SUM）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-总和（SUM）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['string神奇引用-总和（SUM）']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['string神奇引用-总和（SUM）']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-最小值（MIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-最小值（MIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-最小值（MIN）']).to.not.exist;\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-最小值（MIN）']).to.not.exist;\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-最大值（MAX）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-最大值（MAX）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-最大值（MAX）']).to.not.exist;\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-最大值（MAX）']).to.not.exist;\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-和运算（AND）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-和运算（AND）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-或运算（OR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-或运算（OR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-异或运算（XOR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-异或运算（XOR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-异或运算（XOR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-异或运算（XOR）']).to.not.exist;\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-连接成文本（CONCATENATE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-连接成文本（CONCATENATE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-连接成文本（CONCATENATE）'][1]).to.eql(\"李四FALSE\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-逗号连接（ARRAYJOIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-逗号连接（ARRAYJOIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-逗号连接（ARRAYJOIN）'][1]).to.eql(\"李四FALSE\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-去重（ARRAYUNIQUE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-去重（ARRAYUNIQUE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-去重（ARRAYUNIQUE）'][1]).to.eql(\"李四FALSE\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "string神奇引用-过滤所有空值（ARRAYCOMPACT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-过滤所有空值（ARRAYCOMPACT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['string神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(\"张三TRUE\");\r",
                                  "    pm.expect(jsonData.data.records[1].fields['string神奇引用-过滤所有空值（ARRAYCOMPACT）'][1]).to.eql(\"李四FALSE\");\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "date",
                      "item": [
                        {
                          "name": "date神奇引用-原样引用（VALUES）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-原样引用（VALUES）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date(\"2021-01-01-00:00\")\r",
                                  "    var date2 = new Date(\"2021-02-28-00:00\")\r",
                                  "    \r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-原样引用（VALUES）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-原样引用（VALUES）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-原样引用（VALUES）'][1]).to.eql(date2.getTime());\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-原样引用（VALUES）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-原样引用（VALUES）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-原样引用（VALUES）'][1]).to.eql(1614441600000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-平均数（AVERAGE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-平均数（AVERAGE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-平均数（AVERAGE']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-平均数（AVERAGE']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-非空数值计数（COUNT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-非空数值计数（COUNT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-非空数值计数（COUNT）']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-非空数值计数（COUNT）']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-非空值计数（COUNTA)",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-非空值计数（COUNTA)\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-非空值计数（COUNTA)']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-非空值计数（COUNTA)']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-全计数（COUNTALL）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-全计数（COUNTALL）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-全计数（COUNTALL）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-全计数（COUNTALL）']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-总和（SUM）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-总和（SUM）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-总和（SUM）']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-总和（SUM）']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-最小值（MIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-最小值（MIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date('2021-01-01 00:00')\r",
                                  "    var date2 = new Date('2021-02-28 00:00')\r",
                                  "\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-最小值（MIN）']).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-最小值（MIN）']).to.eql(date1.getTime());\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-最小值（MIN）']).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-最小值（MIN）']).to.eql(1609430400000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-最大值（MAX）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-最大值（MAX）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date('2021-01-01 00:00')\r",
                                  "    var date2 = new Date('2021-02-28 00:00')\r",
                                  "\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-最大值（MAX）']).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-最大值（MAX）']).to.eql(date2.getTime());\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-最大值（MAX）']).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-最大值（MAX）']).to.eql(1614441600000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-和运算（AND）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-和运算（AND）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-或运算（OR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-或运算（OR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-异或运算（XOR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-异或运算（XOR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-异或运算（XOR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-异或运算（XOR）']).to.not.exist;\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-连接成文本（CONCATENATE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-连接成文本（CONCATENATE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date('2021-01-01 00:00')\r",
                                  "    var date2 = new Date('2021-02-28 00:00')\r",
                                  "\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-连接成文本（CONCATENATE）'][1]).to.eql(date2.getTime());    \r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-连接成文本（CONCATENATE）'][1]).to.eql(1614441600000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-逗号连接（ARRAYJOIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-逗号连接（ARRAYJOIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date('2021-01-01 00:00')\r",
                                  "    var date2 = new Date('2021-02-28 00:00')\r",
                                  "    \r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-逗号连接（ARRAYJOIN）'][1]).to.eql(date2.getTime());\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-逗号连接（ARRAYJOIN）'][1]).to.eql(1614441600000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-去重（ARRAYUNIQUE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-去重（ARRAYUNIQUE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date('2021-01-01 00:00')\r",
                                  "    var date2 = new Date('2021-02-28 00:00')\r",
                                  "\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-去重（ARRAYUNIQUE）'][1]).to.eql(date2.getTime());\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-去重（ARRAYUNIQUE）'][1]).to.eql(1614441600000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "date神奇引用-过滤所有空值（ARRAYCOMPACT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"date神奇引用-过滤所有空值（ARRAYCOMPACT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    var date1 = new Date('2021-01-01 00:00')\r",
                                  "    var date2 = new Date('2021-02-28 00:00')\r",
                                  "\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['date神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(date1.getTime());\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['date神奇引用-过滤所有空值（ARRAYCOMPACT）'][1]).to.eql(date2.getTime());\r",
                                  "    pm.expect(jsonData.data.records[0].fields['date神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(1609430400000);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['date神奇引用-过滤所有空值（ARRAYCOMPACT）'][1]).to.eql(1614441600000);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    },
                    {
                      "name": "bool",
                      "item": [
                        {
                          "name": "bool神奇引用-原样引用（VALUES）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-原样引用（VALUES）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-原样引用（VALUES）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-原样引用（VALUES）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-原样引用（VALUES）'][1]).to.eql(false);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-平均数（AVERAGE",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-平均数（AVERAGE\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-平均数（AVERAGE']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-平均数（AVERAGE']).to.eql(0.5);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-非空数值计数（COUNT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-非空数值计数（COUNT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['bool神奇引用-非空数值计数（COUNT）']).to.eql(0);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['bool神奇引用-非空数值计数（COUNT）']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-非空值计数（COUNTA)",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-非空值计数（COUNTA)\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-非空值计数（COUNTA)']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-非空值计数（COUNTA)']).to.eql(1);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-全计数（COUNTALL）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-全计数（COUNTALL）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-全计数（COUNTALL）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-全计数（COUNTALL）']).to.eql(2);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-总和（SUM）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-总和（SUM）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-总和（SUM）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-总和（SUM）']).to.eql(1);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-最小值（MIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"string神奇引用-最小值（MIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    // pm.expect(jsonData.data.records[0].fields['bool神奇引用-最小值（MIN）']).to.eql(1);\r",
                                  "    // pm.expect(jsonData.data.records[1].fields['bool神奇引用-最小值（MIN）']).to.eql(0);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-最大值（MAX）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-最大值（MAX）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-最大值（MAX）']).to.eql(1);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-最大值（MAX）']).to.eql(1);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-和运算（AND）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-和运算（AND）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-和运算（AND）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-和运算（AND）']).to.not.exist;\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-或运算（OR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-或运算（OR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-或运算（OR）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-异或运算（XOR）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-异或运算（XOR）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-异或运算（XOR）']).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-异或运算（XOR）']).to.eql(true);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-连接成文本（CONCATENATE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-连接成文本（CONCATENATE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-连接成文本（CONCATENATE）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-连接成文本（CONCATENATE）'][1]).to.eql(false);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-逗号连接（ARRAYJOIN）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-逗号连接（ARRAYJOIN）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-逗号连接（ARRAYJOIN）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-逗号连接（ARRAYJOIN）'][1]).to.eql(false);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-去重（ARRAYUNIQUE）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-去重（ARRAYUNIQUE）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-去重（ARRAYUNIQUE）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-去重（ARRAYUNIQUE）'][1]).to.eql(false);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "name": "bool神奇引用-过滤所有空值（ARRAYCOMPACT）",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"bool神奇引用-过滤所有空值（ARRAYCOMPACT）\", function () {\r",
                                  "    var jsonData = pm.response.json();\r",
                                  "    pm.expect(jsonData.code).to.eql(200);\r",
                                  "    pm.expect(jsonData.success).to.eql(true);\r",
                                  "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                                  "\r",
                                  "    pm.expect(jsonData.data.records[0].fields['bool神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-过滤所有空值（ARRAYCOMPACT）'][0]).to.eql(true);\r",
                                  "    pm.expect(jsonData.data.records[1].fields['bool神奇引用-过滤所有空值（ARRAYCOMPACT）'][1]).to.eql(false);\r",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ],
                          "request": {
                            "method": "GET",
                            "header": [],
                            "url": {
                              "raw": "{{baseURL}}/fusion/v1/datasheets/dstxextF9fVitYHzG5/records?viewId=viw53h8HwaF66&fieldKey=name",
                              "host": ["{{baseURL}}"],
                              "path": [
                                "fusion",
                                "v1",
                                "datasheets",
                                "dstxextF9fVitYHzG5",
                                "records"
                              ],
                              "query": [
                                {
                                  "key": "viewId",
                                  "value": "viw53h8HwaF66"
                                },
                                {
                                  "key": "fieldKey",
                                  "value": "name"
                                }
                              ]
                            }
                          },
                          "response": []
                        }
                      ]
                    }
                  ]
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usky0IDpvjlyUNKNPjqgghP",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "彭进",
              "item": [
                {
                  "name": "神奇引用货币字段类型",
                  "item": [
                    {
                      "name": "货币原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "//const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中//\r",
                              " //pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "  //  pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "   // pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "//pm.test(\"判断神奇引用货币类型字段且数据统计类型为原样引用值等于5\", function () {/\r",
                              "  //  pm.expect(jsonData.data.records[0].recordId).to.eql(\"\");\r",
                              "   // pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "   // pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    //pm.expect(jsonData.data.records[0].fields.原样引用[0]).to.eql(5);\r",
                              "//});\r",
                              "\r",
                              "//pm.test(\"判断神奇引用货币类型字段且数据统计类型为原样引用值等于5/6/7/8\", function () {\r",
                              "   // pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "   // pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "  //  pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "   // pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "   // pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql/(\"recdVhSJehCKe\");\r",
                              "   /// pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "  //  pm.expect(jsonData.data.records[1].fields.原样引用[0]).to.eql(5);\r",
                              "   // pm.expect(jsonData.data.records[1].fields.原样引用[1]).to.eql(6);\r",
                              "   // pm.expect(jsonData.data.records[1].fields.原样引用[2]).to.eql(7);\r",
                              "   // pm.expect(jsonData.data.records[1].fields.原样引用[3]).to.eql(8);\r",
                              "//});\r",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "货币平均数统计",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为平均数统计数值等于5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.平均数).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为平均数值等于6.5\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.平均数).to.eql(6.5);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为非空数值计数等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空数值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为非空数值计数等于4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空数值计数).to.eql(4);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为非空值计数等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为非空值计数等于4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.非空值计数).to.eql(4);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为全计数值等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为全计数值等于4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.全计数).to.eql(4);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "总和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型总和值等于5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.总和).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为总和等于26\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.总和).to.eql(26);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型最小值等于5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.最小值).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为最小值等于5\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.最小值).to.eql(5);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型最大值等于5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.最大值).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为最大值等于8\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.最大值).to.eql(8);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为和运算等于true\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为和运算等于true\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.和运算).to.eql(true);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为异或运算等于true\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为异或运算为空\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    \r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "链接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为链接成文本为5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.连接成文本[0]).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为链接成文本为5/6/7/8\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[1]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[2]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.连接成文本[3]).to.eql(8);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为或运算等于true\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为或运算等于true\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.或运算).to.eql(true);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为逗号链接为5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为逗号链接为5/6/7/8\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[1]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[2]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[3]).to.eql(8);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为去重为5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为去重为5/6/7/8\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[1]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[2]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[3]).to.eql(8);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为过滤所有空值为5\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.逗号连接[0]).to.eql(5);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用货币类型字段且数据统计类型为过滤所有空值为5/6/7/8\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[0]).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[1]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[2]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.逗号连接[3]).to.eql(8);\r",
                              "    \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "神奇引用百分比字段类型",
                  "item": [
                    {
                      "name": "原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为原样引用等于0.34\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比原样[0]).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为原样引用等于0.34/0.35/0.36/0.37\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比原样[0]).to.eql(0.34);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比原样[1]).to.eql(0.35);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比原样[2]).to.eql(0.36);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比原样[3]).to.eql(0.37);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为平均数等于0.34\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比平均数).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为平均数等于0.355\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比平均数).to.eql(0.355);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为非空数值计数等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比非空数值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为非空数值计数等于4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比非空数值计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为百分比非空值计数等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为百分比非空值计数等于4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比非空值计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为全计数等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为sum等于4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比全计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "sum",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为sum等于0.34\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比求和).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为sum等于1.42\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比求和).to.eql(1.42);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "min",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为min等于0.34\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比最小值).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为min等于0.34\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比最小值).to.eql(0.34);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "max",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为max等于0.34\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比最大值).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为max等于0.37\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比最大值).to.eql(0.37);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "and",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为true\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为true\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比和运算).to.eql(true);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "OR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为true\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为true\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比或运算).to.eql(true);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "XOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为true\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为null\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比异或运算).to.eql();\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成问本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为连接成文本值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比连接成文本[0]).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比连接成文本[0]).to.eql(0.34);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比连接成文本[1]).to.eql(0.35);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比连接成文本[2]).to.eql(0.36);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比连接成文本[3]).to.eql(0.37);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比逗号连接[0]).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比逗号连接[0]).to.eql(0.34);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比逗号连接[1]).to.eql(0.35);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比逗号连接[2]).to.eql(0.36);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比逗号连接[3]).to.eql(0.37);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "百分比去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为百分比去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比去重[0]).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为百分比去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比去重[0]).to.eql(0.34);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比去重[1]).to.eql(0.35);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比去重[2]).to.eql(0.36);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比去重[3]).to.eql(0.37);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "百分比过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为百分比过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.百分比过滤所有空值[0]).to.eql(0.34);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用百分比类型字段且数据统计类型为百分比过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比过滤所有空值[0]).to.eql(0.34);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比过滤所有空值[1]).to.eql(0.35);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比过滤所有空值[2]).to.eql(0.36);\r",
                              "    pm.expect(jsonData.data.records[1].fields.百分比过滤所有空值[3]).to.eql(0.37);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "日期",
                  "item": [
                    {
                      "name": "原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期原样引用等于2022/5/1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期原样引用[0]).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期原样引用等于2022/5/1~2022/5/4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期原样引用[0]).to.eql(1651334400000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期原样引用[1]).to.eql(1651420800000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期原样引用[2]).to.eql(1651507200000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期原样引用[3]).to.eql(1651593600000);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "avg",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期平均数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期平均数).to.eql();\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "日期非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期非空数值计数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期非空数值计数).to.eql();\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "日期非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期非空值计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "日期全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期sum\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期求和).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期sum\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期求和).to.eql();\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "sum",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期全计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "min",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期最小值).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期最小值).to.eql(1651334400000);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "max",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期最大值).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期最大值).to.eql(1651593600000);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "and",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期和运算).to.eql(true);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "OR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期异或运算).to.eql();\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "XOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期或运算).to.eql(true);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期链接成文本[0]).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期链接成文本[0]).to.eql(1651334400000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期链接成文本[1]).to.eql(1651420800000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期链接成文本[2]).to.eql(1651507200000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期链接成文本[3]).to.eql(1651593600000); \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期逗号链接[0]).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期去重[0]).to.eql(1651334400000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期去重[1]).to.eql(1651420800000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期去重[2]).to.eql(1651507200000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期去重[3]).to.eql(1651593600000); \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期过滤所有空值[0]).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为日期过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期过滤所有空值[0]).to.eql(1651334400000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期过滤所有空值[1]).to.eql(1651420800000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期过滤所有空值[2]).to.eql(1651507200000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期过滤所有空值[3]).to.eql(1651593600000); \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "日期过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.日期逗号链接[0]).to.eql(1651334400000);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用日期类型字段且数据统计类型为逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期逗号链接[0]).to.eql(1651334400000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期逗号链接[1]).to.eql(1651420800000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期逗号链接[2]).to.eql(1651507200000);\r",
                              "    pm.expect(jsonData.data.records[1].fields.日期逗号链接[3]).to.eql(1651593600000); \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "自增数字",
                  "item": [
                    {
                      "name": "自增数字原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字原样引用等于1\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字原样引用[0]).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字原样引用等于1/2/3/4\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字原样引用[0]).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字原样引用[1]).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字原样引用[2]).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字原样引用[3]).to.eql(4);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字平均数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字平均数).to.eql(2.5);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字非空数值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字非空数值计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字全计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字非空值计数).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "min",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字最小值).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字最小值).to.eql(1);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "sum",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字总和\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字总和).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字总和\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字总和).to.eql(10);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "max",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字最大值).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字最大值).to.eql(4);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "and",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字和运算).to.eql(true);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "OR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字异或运算).to.eql();\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "链接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字连接成文本[0]).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字连接成文本[0]).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字连接成文本[1]).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字连接成文本[2]).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字连接成文本[3]).to.eql(4);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "XOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字或运算).to.eql(true);\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字逗号连接[0]).to.eql(1);\r",
                              "});\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字逗号连接[0]).to.eql(1,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字逗号连接[1]).to.eql(2,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字逗号连接[2]).to.eql(3,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字逗号连接[3]).to.eql(4);   \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字去重[0]).to.eql(1);\r",
                              "});\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字去重[0]).to.eql(1,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字去重[1]).to.eql(2,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字去重[2]).to.eql(3,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字去重[3]).to.eql(4);   \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "自增数字过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.自增数字过滤所有空值[0]).to.eql(1);\r",
                              "});\r",
                              "pm.test(\"判断神奇引用自增数字类型字段且数据统计类型为自增数字过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字过滤所有空值[0]).to.eql(1,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字过滤所有空值[1]).to.eql(2,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字过滤所有空值[2]).to.eql(3,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.自增数字过滤所有空值[3]).to.eql(4);   \r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "创建时间",
                  "item": [
                    {
                      "name": "创建时间平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间平均数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间平均数).to.eql();\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间原样引用等于2022/05/04\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间原样引用[0]).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间原样引用等于2022/05/04\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间原样引用[0]).to.eql(1651624172572);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间原样引用[1]).to.eql(1651624172572);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间原样引用[2]).to.eql(1651624172572);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间原样引用[3]).to.eql(1651624227031);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间非空数值计数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间非空数值计数).to.eql();\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间创建时间非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间非空值计数).to.eql(4);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间全计数).to.eql(4);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "min",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间最小值).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间最小值).to.eql(1651624172572);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "sum",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间求和).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间求和).to.eql();\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "max",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间最大值).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间最大值).to.eql(1651624227031);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "and",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间和运算).to.eql(true);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "or",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间或运算).to.eql(true);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "XOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间异或运算).to.eql();\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间连接成文本[0]).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间连接成文本[0]).to.eql(1651624172572);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间连接成文本[1]).to.eql(1651624172572);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间连接成文本[2]).to.eql(1651624172572);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间连接成文本[3]).to.eql(1651624227031);\r",
                              "\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间去重[0]).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间去重[0]).to.eql(1651624172572);\r",
                              "\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间逗号连接[0]).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[0]).to.eql(1651624172572,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[1]).to.eql(1651624172572,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[2]).to.eql(1651624172572,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[3]).to.eql(1651624227031);\r",
                              "\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间逗号连接[0]).to.eql(1651624172572);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建时间类型字段且数据统计类型为创建时间逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[0]).to.eql(1651624172572,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[1]).to.eql(1651624172572,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[2]).to.eql(1651624172572,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间逗号连接[3]).to.eql(1651624227031);\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "修改时间",
                  "item": [
                    {
                      "name": "修改时间原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为创建时间原样引用等于2022/05/04\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间原样引用[0]).to.eql(1651649064603);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为创建时间原样引用等于2022/05/04\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间原样引用[0]).to.eql(1651649064603);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间原样引用[1]).to.eql(1651649069454);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间原样引用[2]).to.eql(1651649071537);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间原样引用[3]).to.eql(1651649073355);\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改时间平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间平均数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间平均数).to.eql();\r",
                              "\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改时间非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间非空数值计数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间非空数值计数).to.eql();\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改时间非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建时间非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建时间非空值计数).to.eql(4);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改时间全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间全计数).to.eql(4);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "min",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间最小值).to.eql(1651649064603);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间最小值).to.eql(1651649064603);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "sum",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间求和).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间求和).to.eql();\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "max",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间最大值).to.eql(1651649064603);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间最大值).to.eql(1651649073355);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "and",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间和运算).to.eql(true);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "or",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间或运算).to.eql(true);\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "XOR",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间异或运算).to.eql();\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改时间连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间连接成文本[0]).to.eql(1651649064603);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间连接成文本[0]).to.eql(1651649064603);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间连接成文本[1]).to.eql(1651649069454);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间连接成文本[2]).to.eql(1651649071537);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间连接成文本[3]).to.eql(1651649073355);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改时间去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间去重[0]).to.eql(1651649064603);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间去重[0]).to.eql(1651649064603,);\r",
                              "  \r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建时间过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改时间过滤所有空值[0]).to.eql(1651649064603);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用修改时间类型字段且数据统计类型为修改时间过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间过滤所有空值[0]).to.eql(1651649064603,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间过滤所有空值[1]).to.eql(1651649069454,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间过滤所有空值[2]).to.eql(1651649071537,);\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改时间过滤所有空值[3]).to.eql(1651649073355);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "创建人",
                  "item": [
                    {
                      "name": "创建人原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型原样引用\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人原样引用[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型原样引用\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[3].name).to.eql(\"彭进\");\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人非空数值计数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人非空数值计数).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人平均数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人平均数).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人非空值计数).to.eql(4);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人全计数).to.eql(4);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人求和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人求和).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人求和).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人最小值).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人最小值).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人最大值).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人最大值).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人和运算).to.eql(true);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "   // pm.expect(jsonData.data.records[1].fields.创建人或运算).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人连接成文本[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人连接成文本[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人连接成文本[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人连接成文本[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人连接成文本[3].name).to.eql(\"彭进\");   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "   // pm.expect(jsonData.data.records[1].fields.创建人异或运算).to.eql(true);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人逗号连接[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人逗号连接[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人逗号连接[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人逗号连接[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人逗号连接[3].name).to.eql(\"彭进\");   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人去重[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人去重[0].name).to.eql(\"彭进\");\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "创建人过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人过滤所有空值[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创建人过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人过滤所有空值[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人过滤所有空值[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人过滤所有空值[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人过滤所有空值[3].name).to.eql(\"彭进\");   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "修改人",
                  "item": [
                    {
                      "name": "修改原样引用",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型原样引用\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.创建人原样引用[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型原样引用\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人原样引用[3].name).to.eql(\"彭进\");\r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人非空数值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型创修改人非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人非空数值计数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人非空数值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人非空数值计数).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人平均数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人平均数).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人平均数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人平均数).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人非空值计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人非空值计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人非空值计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人非空值计数).to.eql(4);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人全计数",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人全计数).to.eql(1);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人全计数\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人全计数).to.eql(4);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人求和",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人求和).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人求和\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人求和).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人最小值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人最小值).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人最小值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.创建人最小值).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人最大值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人最大值).to.eql();\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人最大值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人最大值).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人和运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人和运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人和运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人和运算).to.eql(true);\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "   // pm.expect(jsonData.data.records[1].fields.修改人或运算).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人连接成文本",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人连接成文本[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人连接成文本\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人连接成文本[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人连接成文本[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人连接成文本[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人连接成文本[3].name).to.eql(\"彭进\");   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人异或运算",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人异或运算).to.eql(true);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人异或运算\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人异或运算).to.eql();\r",
                              "   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人逗号连接",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人逗号连接[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人逗号连接\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人逗号连接[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人逗号连接[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人逗号连接[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人逗号连接[3].name).to.eql(\"彭进\");   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人去重",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人去重[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人去重\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人去重[0].name).to.eql(\"彭进\");\r",
                              "  \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "修改人过滤所有空值",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                              " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                              "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.修改人过滤所有空值[0].name).to.eql(\"彭进\");\r",
                              "});\r",
                              "\r",
                              "pm.test(\"判断神奇引用创建人类型字段且数据统计类型修改人过滤所有空值\", function () {\r",
                              "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                              "\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人过滤所有空值[0].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人过滤所有空值[1].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人过滤所有空值[2].name).to.eql(\"彭进\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.修改人过滤所有空值[3].name).to.eql(\"彭进\");   \r",
                              "\r",
                              "\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "https://integration.vika.ltd/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                          "protocol": "https",
                          "host": ["integration", "vika", "ltd"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstwVQSBmhYTryoB9z",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwjocChGCK1S"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "获取神奇关联列的数值",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                          " pm.expect(jsonData.data.pageSize).to.eql(2); //返回总条数pagesize判断\r",
                          "    pm.expect(jsonData.success).to.eql(true); //返回结果\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "pm.test(\"获取第一条神奇关联列数据\", function () {\r",
                          "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.成员类型[0].name).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                          "});\r",
                          "pm.test(\"获取第二条神奇关联列数据\", function () {\r",
                          "    pm.expect(jsonData.data.records[1].recordId).to.eql(\"rec7sey6y6GID\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.成员类型[0].name).to.eql(\"李四\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.神奇关联[0]).to.eql(\"recGkRhhnVAW8\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.神奇关联[1]).to.eql(\"recmgVm3R1B2z\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.神奇关联[2]).to.eql(\"recdVhSJehCKe\");\r",
                          "    pm.expect(jsonData.data.records[1].fields.神奇关联[3]).to.eql(\"recIPuU03OG6R\");\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstwVQSBmhYTryoB9z/records?viewId=viwjocChGCK1S&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstwVQSBmhYTryoB9z",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwjocChGCK1S"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "何天威",
              "item": [
                {
                  "name": "单行字段作为引用列",
                  "item": [
                    {
                      "name": "获取单行原样引用作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行原样[0]).to.eql(\"深圳南山区\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行原样[0]).to.eql(\"深圳福田区\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行原样[0]).to.eql(\"深圳宝安区\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行原样[0]).to.eql(\"深圳宝安区\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行平均数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行平均数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行平均数).to.eql(6.3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行平均数).to.eql(2.5);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行平均数).to.eql(0.0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行平均数).to.eql(7);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行非空数值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "// pm.test(\"接口返回表中所有神奇引用-单行非空数值计数所有数据\", function () {\r",
                              "//     var jsonData = pm.response.json();\r",
                              "//     pm.expect(jsonData.data.records[0].fields.单行非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[1].fields.单行非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[2].fields.单行非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[3].fields.单行非空数值计数).to.eql(0.0);\r",
                              "// });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行非空值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行非空值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行非空值计数).to.eql(1);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行非空值计数).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行全计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行全计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行总和作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行总和所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行总和).to.eql(6.3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行总和).to.eql(2.5);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行总和).to.eql(0.0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行总和).to.eql(7);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行最小值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行最小值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行最小值).to.eql(6.3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行最小值).to.eql(2.5);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行最小值).to.eql(0.0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行最小值).to.eql(7);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行最大值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行最大值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行最大值).to.eql(6.3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行最大值).to.eql(2.5);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行最大值).to.eql(0.0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行最大值).to.eql(7);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行和运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行和运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行和运算).to.eql(true);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行异或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行异或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行连接成文本作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行连接成文本所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行连接成文本[0]).to.eql(\"深圳南山区\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行连接成文本[0]).to.eql(\"深圳福田区\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行连接成文本[0]).to.eql(\"深圳宝安区\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行连接成文本[0]).to.eql(\"深圳宝安区\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行单行逗号连接作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行逗号连接所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行逗号连接[0]).to.eql(\"深圳南山区\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行逗号连接[0]).to.eql(\"深圳福田区\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行逗号连接[0]).to.eql(\"深圳宝安区\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行逗号连接[0]).to.eql(\"深圳宝安区\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行单行去重作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行去重所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行去重[0]).to.eql(\"深圳南山区\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行去重[0]).to.eql(\"深圳福田区\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单行去重[0]).to.eql(\"深圳宝安区\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行去重[0]).to.eql(\"深圳宝安区\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单行单行过滤空值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单行过滤空值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单行过滤空值[0]).to.eql(\"6.30\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单行过滤空值[0]).to.eql(\"2.50\");\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单行过滤空值[0]).to.eql(\"0.00\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单行过滤空值[0]).to.eql(\"7.00\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstjJ3axbjTx1bvR2h/records?viewId=viwwJ3c3NH2Li&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstjJ3axbjTx1bvR2h",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwwJ3c3NH2Li"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "usk6zWnpR8ReurmO10qdr51",
                        "type": "string"
                      }
                    ]
                  },
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "type": "text/javascript",
                        "exec": [""]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [""]
                      }
                    }
                  ]
                },
                {
                  "name": "多行字段作为引用列",
                  "item": [
                    {
                      "name": "获取多行原样引用作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行原样[0]).to.eql(\"南山区第一中学\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行原样[1]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行原样[0]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行原样[0]).to.eql(\"宝安区第三中学\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行原样[0]).to.eql(\"宝安区高级中学\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行平均数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行平均数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行平均数[0]).to.eql(\"南山区第一中学\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行平均数[1]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行平均数[0]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行平均数[0]).to.eql(\"宝安区第三中学\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行平均数[0]).to.eql(\"宝安区高级中学\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行非空数值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "// pm.test(\"接口返回表中所有神奇引用-多行非空数值计数所有数据\", function () {\r",
                              "//     var jsonData = pm.response.json();\r",
                              "//     pm.expect(jsonData.data.records[0].fields.多行非空数值计数).to.eql(0.0)\r",
                              "//     pm.expect(jsonData.data.records[1].fields.多行非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[2].fields.多行非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[3].fields.多行非空数值计数).to.eql(0.0);\r",
                              "// });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行非空值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行非空值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行非空值计数).to.eql(2)\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行全计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行全计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行全计数).to.eql(2)\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行总和作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "// pm.test(\"接口返回表中所有神奇引用-多行总和所有数据\", function () {\r",
                              "//     var jsonData = pm.response.json();\r",
                              "//     pm.expect(jsonData.data.records[0].fields.多行总和).to.eql(0.0)\r",
                              "//     pm.expect(jsonData.data.records[1].fields.多行总和).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[2].fields.多行总和).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[3].fields.多行总和).to.eql(0.0);\r",
                              "// });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行最小值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "// pm.test(\"接口返回表中所有神奇引用-多行最小值所有数据\", function () {\r",
                              "//     var jsonData = pm.response.json();\r",
                              "//     pm.expect(jsonData.data.records[0].fields.多行最小值).to.eql(0.0)\r",
                              "//     pm.expect(jsonData.data.records[1].fields.多行最小值).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[2].fields.多行最小值).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[3].fields.多行最小值).to.eql(0.0);\r",
                              "// });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行最大值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "// pm.test(\"接口返回表中所有神奇引用-多行最大值所有数据\", function () {\r",
                              "//     var jsonData = pm.response.json();\r",
                              "//     pm.expect(jsonData.data.records[0].fields.多行最大值).to.eql(0.0)\r",
                              "//     pm.expect(jsonData.data.records[1].fields.多行最大值).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[2].fields.多行最大值).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[3].fields.多行最大值).to.eql(0.0);\r",
                              "// });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行和运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行和运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行和运算).to.eql(true)\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行或运算).to.eql(true)\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行异或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行异或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    // pm.expect(jsonData.data.records[0].fields.多行异或运算).to.eql(0.0)\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行连接成文本作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行连接成文本所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行连接成文本[0]).to.eql(\"南山区第一中学\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行连接成文本[1]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行连接成文本[0]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行连接成文本[0]).to.eql(\"宝安区第三中学\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行连接成文本[0]).to.eql(\"宝安区高级中学\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行逗号连接作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行逗号连接所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行逗号连接[0]).to.eql(\"南山区第一中学\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行逗号连接[1]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行逗号连接[0]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行逗号连接[0]).to.eql(\"宝安区第三中学\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行逗号连接[0]).to.eql(\"宝安区高级中学\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行去重作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行去重所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行去重[0]).to.eql(\"南山区第一中学\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行去重[1]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行去重[0]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行去重[0]).to.eql(\"宝安区第三中学\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行去重[0]).to.eql(\"宝安区高级中学\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多行过滤空值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多行过滤空值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行过滤空值[0]).to.eql(\"南山区第一中学\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多行过滤空值[1]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多行过滤空值[0]).to.eql(\"福田区第五中学\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多行过滤空值[0]).to.eql(\"宝安区第三中学\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多行过滤空值[0]).to.eql(\"宝安区高级中学\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstr5Czz4GQAlhJ4rk/records?viewId=viwx6bh8pbvyf&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstr5Czz4GQAlhJ4rk",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwx6bh8pbvyf"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "多选字段作为引用列",
                  "item": [
                    {
                      "name": "获取多选原样作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选原样[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选原样[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选原样[2]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选原样[3]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选原样[4]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选原样[0]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选原样[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选原样[2]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选原样[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选原样[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选原样[2]).to.eql(\"英语课\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选原样[0]).to.eql(\"语文课\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选平均数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选平均数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选平均数).to.eql(1.2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选平均数).to.eql(2);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.多选平均数).to.eql(0.0);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.多选平均数).to.eql(0.0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选非空数值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "// pm.test(\"接口返回表中所有神奇引用-多选非空数值计数所有数据\", function () {\r",
                              "//     var jsonData = pm.response.json();\r",
                              "//     pm.expect(jsonData.data.records[0].fields.多选非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[1].fields.多选非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[2].fields.多选非空数值计数).to.eql(0.0);\r",
                              "//     pm.expect(jsonData.data.records[3].fields.多选非空数值计数).to.eql(0.0);\r",
                              "// });"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选非空值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选非空值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选非空值计数).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选非空值计数).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选非空值计数).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选全计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选全计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选全计数).to.eql(5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选全计数).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选全计数).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选总和作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选总和所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选总和).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选总和).to.eql(6);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.多选总和).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.多选总和).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选最小值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选最小值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选最小值).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选最小值).to.eql(1);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.多选最小值).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.多选最小值).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选最大值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选最大值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选最大值).to.eql(3);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选最大值).to.eql(3);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.多选最大值).to.eql(0);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.多选最大值).to.eql(0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选和运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选和运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选异或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选异或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选连接成文本作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选连接成文本所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选连接成文本[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选连接成文本[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选连接成文本[2]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选连接成文本[3]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选连接成文本[4]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选连接成文本[0]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选连接成文本[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选连接成文本[2]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选连接成文本[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选连接成文本[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选连接成文本[2]).to.eql(\"英语课\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选连接成文本[0]).to.eql(\"语文课\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选逗号连接作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选逗号连接所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选逗号连接[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选逗号连接[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选逗号连接[2]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选逗号连接[3]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选逗号连接[4]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选逗号连接[0]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选逗号连接[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选逗号连接[2]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选逗号连接[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选逗号连接[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选逗号连接[2]).to.eql(\"英语课\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选逗号连接[0]).to.eql(\"语文课\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选去重作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选去重所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选去重[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选去重[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选去重[2]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选去重[3]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选去重[4]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选去重[0]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选去重[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选去重[2]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选去重[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选去重[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选去重[2]).to.eql(\"英语课\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选去重[0]).to.eql(\"语文课\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取多选过滤空值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-多选过滤空值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选过滤空值[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选过滤空值[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选过滤空值[2]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选过滤空值[3]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.多选过滤空值[4]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选过滤空值[0]).to.eql(\"1\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选过滤空值[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.多选过滤空值[2]).to.eql(\"3\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选过滤空值[0]).to.eql(\"语文课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选过滤空值[1]).to.eql(\"数学课\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.多选过滤空值[2]).to.eql(\"英语课\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.多选过滤空值[0]).to.eql(\"语文课\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstlAQnWHSda3Epd80/records?viewId=viwVx0toHSAh0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstlAQnWHSda3Epd80",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwVx0toHSAh0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "单选字段作为引用列",
                  "item": [
                    {
                      "name": "获取单选原样引用作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选原样[0]).to.eql(\"一年级\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选原样[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选原样[0]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选原样[0]).to.eql(\"三年级\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选原样[0]).to.eql(\"4\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选平均数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选平均数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选平均数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选平均数).to.eql(2);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单选平均数).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选平均数).to.eql(4);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选非空数值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选非空数值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    // pm.expect(jsonData.data.records[0].fields.单选非空数值计数).to.eql(0.0);\r",
                              "    // pm.expect(jsonData.data.records[1].fields.单选非空数值计数).to.eql(0.0);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单选非空数值计数).to.eql(0.0);\r",
                              "    // pm.expect(jsonData.data.records[3].fields.单选非空数值计数).to.eql(0.0);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选非空值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选非空值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选非空值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选全计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选全计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选总和作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选总和所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选总和).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选总和).to.eql(2);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单选总和).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选总和).to.eql(4);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选最小值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选最小值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选最小值).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选最小值).to.eql(2);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单选最小值).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选最小值).to.eql(4);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选最大值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选最大值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选最大值).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选最大值).to.eql(2);\r",
                              "    // pm.expect(jsonData.data.records[2].fields.单选最大值).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选最大值).to.eql(4);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选和运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选和运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选异或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选异或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    // pm.expect(jsonData.data.records[0].fields.单选异或运算).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选逗号连接作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选逗号连接所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选逗号连接[0]).to.eql(\"一年级\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选逗号连接[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选逗号连接[0]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选逗号连接[0]).to.eql(\"三年级\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选逗号连接[0]).to.eql(\"4\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选连接成文本作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选连接成文本所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选连接成文本[0]).to.eql(\"一年级\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选连接成文本[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选连接成文本[0]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选连接成文本[0]).to.eql(\"三年级\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选连接成文本[0]).to.eql(\"4\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选去重作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选去重所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选去重[0]).to.eql(\"reclLSajRkdVm\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选去重[1]).to.eql(\"recVCeG4t9z9A\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选去重[0]).to.eql(\"reclLSajRkdVm\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选去重[1]).to.eql(\"recVCeG4t9z9A\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选去重[0]).to.eql(\"recoSXSuEXllP\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选去重[0]).to.eql(\"recCGfCSYBTDU\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取单选过滤空值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-单选过滤空值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选过滤空值[0]).to.eql(\"一年级\");\r",
                              "    pm.expect(jsonData.data.records[0].fields.单选过滤空值[1]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[1].fields.单选过滤空值[0]).to.eql(\"2\");\r",
                              "    pm.expect(jsonData.data.records[2].fields.单选过滤空值[0]).to.eql(\"三年级\");\r",
                              "    pm.expect(jsonData.data.records[3].fields.单选过滤空值[0]).to.eql(\"4\");\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstZqQKbVQXm7EiAtb/records?viewId=viwPvTXxQQjtg&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstZqQKbVQXm7EiAtb",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwPvTXxQQjtg"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                },
                {
                  "name": "数字字段作为引用列",
                  "item": [
                    {
                      "name": "获取数字原样作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字原样引用所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字原样[0]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字原样[1]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字原样[0]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字原样[0]).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字原样[0]).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字平均数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字平均数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字平均数).to.eql(6.5);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字平均数).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字平均数).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字平均数).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字非空数值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字非空数值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字非空数值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字非空数值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字非空数值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字非空数值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字非空值计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字非空值计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字非空值计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字非空值计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字非空值计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字全计数作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字全计数所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字全计数).to.eql(2);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字全计数).to.eql(1);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字全计数).to.eql(1);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字总和作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字总和所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字总和).to.eql(13);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字总和).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字总和).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字总和).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字最小值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字最小值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字最小值).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字最小值).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字最小值).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字最小值).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字最大值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字最大值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字最大值).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字最大值).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字最大值).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字最大值).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字和运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字和运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字和运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字和运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字异或运算作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字异或运算所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    // pm.expect(jsonData.data.records[0].fields.数字异或运算).to.eql(0);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字异或运算).to.eql(true);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字异或运算).to.eql(true);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字连接成文本作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字连接成文本所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字连接成文本[0]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字连接成文本[1]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字连接成文本[0]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字连接成文本[0]).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字连接成文本[0]).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字逗号连接作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字逗号连接所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字逗号连接[0]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字逗号连接[1]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字逗号连接[0]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字逗号连接[0]).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字逗号连接[0]).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字去重作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字去重所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字去重[0]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字去重[1]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字去重[0]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字去重[0]).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字去重[0]).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "获取数字过滤空值作为神奇引用字段的结果",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"返回code为200\", function () {\r",
                              "    pm.response.to.have.status(200);\r",
                              "});\r",
                              "pm.test(\"接口返回success为true\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.success).to.eql(true);\r",
                              "});\r",
                              "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                              "});\r",
                              "pm.test(\"接口返回表中所有神奇引用-数字过滤空值所有数据\", function () {\r",
                              "    var jsonData = pm.response.json();\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字过滤空值[0]).to.eql(6);\r",
                              "    pm.expect(jsonData.data.records[0].fields.数字过滤空值[1]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[1].fields.数字过滤空值[0]).to.eql(7);\r",
                              "    pm.expect(jsonData.data.records[2].fields.数字过滤空值[0]).to.eql(8);\r",
                              "    pm.expect(jsonData.data.records[3].fields.数字过滤空值[0]).to.eql(9);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "usk6zWnpR8ReurmO10qdr51",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseURL}}/fusion/v1/datasheets/dstqPisf04oZ7JoALw/records?viewId=viwTBy72sqrb0&fieldKey=name",
                          "host": ["{{baseURL}}"],
                          "path": [
                            "fusion",
                            "v1",
                            "datasheets",
                            "dstqPisf04oZ7JoALw",
                            "records"
                          ],
                          "query": [
                            {
                              "key": "viewId",
                              "value": "viwTBy72sqrb0"
                            },
                            {
                              "key": "fieldKey",
                              "value": "name"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "排序",
          "item": [
            {
              "name": "单个String类型正序排列",
              "item": [
                {
                  "name": "获取没有排序之前的顺序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                          "pm.test(\"返回符合条件记录总数pageSize判断\", function () {\r",
                          "    pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                          "});\r",
                          "pm.test(\"返回String参数中第一个电话号码判断\", function () {\r",
                          "    pm.expect(jsonData.data.records[0].fields.电话类型).to.eql(\"0755-1234556\");\r",
                          "});\r",
                          "pm.test(\"返回String参数中第二个电话号码判断\", function () {\r",
                          "    pm.expect(jsonData.data.records[1].fields.电话类型).to.eql(\"13244669844\");\r",
                          "});\r",
                          "pm.test(\"返回String参数中第三个电话号码判断\", function () {\r",
                          "    pm.expect(jsonData.data.records[2].fields.电话类型).to.eql(\"123456789\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstG0Zgej3xoz7KpJm/records?viewId=viwNOc78jS8xQ&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstG0Zgej3xoz7KpJm",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwNOc78jS8xQ"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更新排列顺序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                          "pm.test(\"单个String类型正序排列\", function () {\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.data.records[0].recordId).to.eql(\"rec5E2SqWcbN0\");  \r",
                          "    pm.expect(jsonData.data.records[1].fields.电话类型).to.eql(\"0755-1234556\");\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.data.records[0].fields.邮箱类型).to.eql(\"1234@vikadata.com\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.智能公式[0]).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"recordId\": \"rec5E2SqWcbN0\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1484441868643770370\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/41e723917dc742d2974e41abab8cf60b\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 23,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1637660340000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcBVYsA2bjoA\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"1234@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    \"recordId\": \"rec7sey6y6GID\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": \"https://s1.vika.cn/space/2020/09/11/4dce50e4ec4649b9a408a494aca28183\"\r\n        }\r\n      ],\r\n      \"单选类型\": \"优\",\r\n      \"关联成绩表\": [\r\n        \"recu2mZqSm1v7\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\"\r\n      ],\r\n      \"数字类型01\": 25,\r\n      \"货币类型\": 1,\r\n      \"百分比类型\": 0.12,\r\n      \"日期类型\": 1636537140000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atc0ASn1Rbfdy\",\r\n          \"name\": \"01.gif\",\r\n          \"size\": 30996,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\",\r\n          \"width\": 240,\r\n          \"height\": 240,\r\n          \"url\": \"https://s1.vika.cn/space/2021/11/15/28d3db885f0348fab57dfc3b3558e0f7\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 3,\r\n      \"网页类型\": \"www.baidu.com\",\r\n      \"电话类型\": \"0755-1234556\",\r\n      \"邮箱类型\": \"123456@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recn4d27Z2EDd\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"reccHvGnnYe9e\",\r\n        \"rec9bCwViuXNm\",\r\n        \"recHi92wqk4pp\"\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstG0Zgej3xoz7KpJm/records?viewId=viwjocChGCK1S&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstG0Zgej3xoz7KpJm",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viwjocChGCK1S"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取排序后的顺序",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                          "pm.test(\"更新后单个String类型正序排列\", function () {\r",
                          "    pm.expect(jsonData.data.pageSize).to.eql(4);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.data.records[1].fields.电话类型).to.eql(\"0755-1234556\");\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.data.records[0].fields.邮箱类型).to.eql(\"1234@vikadata.com\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.智能公式[0]).to.eql(\"张三\");\r",
                          "    pm.expect(jsonData.data.records[0].fields.单选类型).to.eql(\"优\");\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/fusion/v1/datasheets/dstG0Zgej3xoz7KpJm/records?viewId=viw14rl2gVs7U&fieldKey=name",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "fusion",
                        "v1",
                        "datasheets",
                        "dstG0Zgej3xoz7KpJm",
                        "records"
                      ],
                      "query": [
                        {
                          "key": "viewId",
                          "value": "viw14rl2gVs7U"
                        },
                        {
                          "key": "fieldKey",
                          "value": "name"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            }
          ]
        },
        {
          "name": "嵌入api",
          "item": [
            {
              "name": "创建嵌入参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdnull\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回shareBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回widgetBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回formBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回historyBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回robotBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回viewControl内collapsed的参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回permissionType的参数默认为readOnly\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.permissionType).to.eql(\"readOnly\");\r",
                      "});\r",
                      "pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"返回code为200\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.code).to.eql(200);\r",
                      "// });\r",
                      "// // pm.test(\"返回collapsed参数默认为false\", function () {\r",
                      "// //     var jsonData = pm.response.json();\r",
                      "// //     pm.expect(jsonData.data[0].payload.primarySideBar.collapsed).to.eql(false);\r",
                      "// // });\r",
                      "// pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.tabBar).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回basicTools参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回shareBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回widgetBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回apiBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "// });\r",
                      "// // pm.test(\"返回formBtn参数默认为false\", function () {\r",
                      "// //     var jsonData = pm.response.json();\r",
                      "// //     pm.expect(jsonData.data[0].payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "// // });\r",
                      "// pm.test(\"返回historyBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回robotBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回viewControl内collapsed的参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.collapsed).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.bannerLogo).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].theme).to.eql(\"light\");\r",
                      "// });\r",
                      "// pm.test(\"返回message为SUCCESS\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdnull}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdnull}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "重复删除嵌入参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为1501\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(1501);\r",
                      "});\r",
                      "pm.test(\"返回message为指定的嵌入链接不存在，请调整 linkId 后再试\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"指定的嵌入链接不存在，请调整 linkId 后再试\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdnull}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdnull}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入参数为true",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdtrue\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(true);\r",
                      "//     //表示开启工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viw81iq8Gtfnh\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viw81iq8Gtfnh\");\r",
                      "    //显示单一维格视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "    //在嵌入界面里显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(true);\r",
                      "    //折叠视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "    //显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回permissionType的参数默认为readOnly\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.permissionType).to.eql(\"readOnly\");\r",
                      "    //访问者在嵌入表格里只能阅读，不能编辑\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "    //在嵌入界面里显示高亮主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"permissionType\":\"readOnly\"\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入参数为true",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"返回code为200\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.code).to.eql(200);\r",
                      "// });\r",
                      "// // pm.test(\"返回collapsed参数为true\", function () {\r",
                      "// //     var jsonData = pm.response.json();\r",
                      "// //     pm.expect(jsonData.data[0].payload.primarySideBar.collapsed).to.eql(true);\r",
                      "// // });\r",
                      "// pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.tabBar).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回basicTools参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回shareBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回widgetBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回apiBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回formBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回historyBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回robotBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回viewControl内collapsed的参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.collapsed).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.bannerLogo).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回permissionType的参数为readOnly\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.permissionType).to.eql(\"readOnly\");\r",
                      "// });\r",
                      "// pm.test(\"返回viewId参数为viw81iq8Gtfnh\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.viewId).to.eql(\"viw81iq8Gtfnh\");\r",
                      "//     //显示单一维格视图\r",
                      "// });\r",
                      "// pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].theme).to.eql(\"light\");\r",
                      "// });\r",
                      "// pm.test(\"返回message为SUCCESS\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入参数为true",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdtrue}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdtrue}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdfalse\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "//     //折叠工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(false);\r",
                      "    //不显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viw5oYscvRxUd\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viw5oYscvRxUd\");\r",
                      "    //显示单一相册视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "    //在嵌入界面里不显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(false);\r",
                      "    //不显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为dark\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"dark\");\r",
                      "    //在嵌入界面里显示暗黑主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw5oYscvRxUd\",\r\n      \"tabBar\": false,\r\n      \"toolBar\": {\r\n        \"basicTools\": false,\r\n        \"shareBtn\": false,\r\n        \"widgetBtn\": false,\r\n        \"apiBtn\": false,\r\n        \"formBtn\": false,\r\n        \"historyBtn\": false,\r\n        \"robotBtn\": false\r\n      },\r\n      \"collapsed\": false\r\n    },\r\n    \"bannerLogo\": false,\r\n    \"permissionType\":\"readOnly\"\r\n  },\r\n  \"theme\": \"dark\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"返回code为200\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.code).to.eql(200);\r",
                      "// });\r",
                      "// // pm.test(\"返回collapsed参数为false\", function () {\r",
                      "// //     var jsonData = pm.response.json();\r",
                      "// //     pm.expect(jsonData.data[0].payload.primarySideBar.collapsed).to.eql(false);\r",
                      "// // });\r",
                      "// pm.test(\"返回tabBar参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.tabBar).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回basicTools参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回shareBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回widgetBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回apiBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回formBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回historyBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回robotBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回viewControl内collapsed的参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.collapsed).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回bannerLogo的参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.bannerLogo).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回viewId参数为viw5oYscvRxUd\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.viewId).to.eql(\"viw5oYscvRxUd\");\r",
                      "//     //显示单一维格视图\r",
                      "// });\r",
                      "// pm.test(\"返回theme的参数为dark\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].theme).to.eql(\"dark\");\r",
                      "// });\r",
                      "// pm.test(\"返回message为SUCCESS\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入看板视图，参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdnull\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回viewId参数为viwWYc7MyFdcI\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viwWYc7MyFdcI\");\r",
                      "    //显示单一看板视图\r",
                      "});\r",
                      "pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回shareBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回widgetBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回formBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回historyBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viwWYc7MyFdcI\"\r\n    }\r\n  }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入看板视图，参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdnull}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdnull}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入相册视图，参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdnull\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回viewId参数为viw5oYscvRxUd\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viw5oYscvRxUd\");\r",
                      "    //显示单一相册视图\r",
                      "});\r",
                      "pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回shareBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回widgetBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "});\r",
                      "// pm.test(\"返回formBtn参数默认为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "// });\r",
                      "pm.test(\"返回historyBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw5oYscvRxUd\"\r\n    }\r\n  }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入相册视图，参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdnull}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdnull}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入甘特视图，参数为true",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdtrue\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(true);\r",
                      "//     //表示开启工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viwQuzNG58mG5\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viwQuzNG58mG5\");\r",
                      "    //显示单一维格视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "    //在嵌入界面里显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(true);\r",
                      "    //折叠视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "    //显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "    //在嵌入界面里显示高亮主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viwQuzNG58mG5\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入甘特视图，参数为true",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdtrue}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdtrue}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入日历视图，参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdfalse\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "//     //折叠工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(false);\r",
                      "    //不显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viw3Sb1UyRqGj\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viw3Sb1UyRqGj\");\r",
                      "    //显示单一相册视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "    //在嵌入界面里不显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(false);\r",
                      "    //不显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为dark\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"dark\");\r",
                      "    //在嵌入界面里显示暗黑主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw3Sb1UyRqGj\",\r\n      \"tabBar\": false,\r\n      \"toolBar\": {\r\n        \"basicTools\": false,\r\n        \"shareBtn\": false,\r\n        \"widgetBtn\": false,\r\n        \"apiBtn\": false,\r\n        \"formBtn\": false,\r\n        \"historyBtn\": false,\r\n        \"robotBtn\": false\r\n      },\r\n      \"collapsed\": false\r\n    },\r\n    \"bannerLogo\": false\r\n  },\r\n  \"theme\": \"dark\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入日历视图，参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入架构视图，参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdfalse\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "//     //折叠工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(false);\r",
                      "    //不显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viwhGHnUXXNwl\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viwhGHnUXXNwl\");\r",
                      "    //显示单一相册视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "    //在嵌入界面里不显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "    //在嵌入界面里不显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(false);\r",
                      "    //不显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为dark\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"dark\");\r",
                      "    //在嵌入界面里显示暗黑主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viwhGHnUXXNwl\",\r\n      \"tabBar\": false,\r\n      \"toolBar\": {\r\n        \"basicTools\": false,\r\n        \"shareBtn\": false,\r\n        \"widgetBtn\": false,\r\n        \"apiBtn\": false,\r\n        \"formBtn\": false,\r\n        \"historyBtn\": false,\r\n        \"robotBtn\": false\r\n      },\r\n      \"collapsed\": false\r\n    },\r\n    \"bannerLogo\": false\r\n  },\r\n  \"theme\": \"dark\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入架构视图，参数为false",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "同一表格创建第31个嵌入链接失败",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为抱歉, 新建嵌入链接不能超过30个\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"创建的嵌入链接数量已达上限，单个维格表的嵌入链接数量不能超过30个\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"tabBar\": false,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": false,\r\n        \"formBtn\": false,\r\n        \"historyBtn\": false,\r\n        \"robotBtn\": false\r\n      },\r\n      \"collapsed\": false\r\n    },\r\n    \"bannerLogo\": false,\r\n    \"editable\": false\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstwRlHmtS6a5wJwQK/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstwRlHmtS6a5wJwQK",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "同一表格创建第30个嵌入链接成功",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// var jsonData = JSON.parse(responseBody);\r",
                      "// pm.globals.set(\"linkIdfalse\", jsonData.data.linkId);\r",
                      "// pm.test(\"返回code为200\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.code).to.eql(200);\r",
                      "// });\r",
                      "// // pm.test(\"返回collapsed参数为false\", function () {\r",
                      "// //     var jsonData = pm.response.json();\r",
                      "// //     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(false);\r",
                      "// //     //折叠工作目录\r",
                      "// // });\r",
                      "// pm.test(\"返回tabBar参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(false);\r",
                      "//     //不显示视图标签栏\r",
                      "// });\r",
                      "// pm.test(\"返回basicTools参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "//     //在嵌入界面里不显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "// });\r",
                      "// pm.test(\"返回shareBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(false);\r",
                      "//     //在嵌入界面里不显示“分享”按钮\r",
                      "// });\r",
                      "// pm.test(\"返回widgetBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "//     //在嵌入界面里不显示“小程序”按钮\r",
                      "// });\r",
                      "// pm.test(\"返回apiBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "//     //在嵌入界面里不显示“API”按钮\r",
                      "// });\r",
                      "// pm.test(\"返回formBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(false);\r",
                      "//     //在嵌入界面里不显示“神奇表单”按钮\r",
                      "// });\r",
                      "// pm.test(\"返回historyBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "//     //在嵌入界面里不显示“时光机”按钮\r",
                      "// });\r",
                      "// pm.test(\"返回robotBtn参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(false);\r",
                      "//     //在嵌入界面里不显示“机器人”按钮\r",
                      "// });\r",
                      "// pm.test(\"返回viewControl内collapsed的参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "//     //显示视图标签栏\r",
                      "// });\r",
                      "// pm.test(\"返回bannerLogo的参数为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.bannerLogo).to.eql(false);\r",
                      "//     //不显示「vika维格表」的品牌logo\r",
                      "// });\r",
                      "// pm.test(\"返回theme的参数为dark\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.theme).to.eql(\"dark\");\r",
                      "//     //在嵌入界面里显示暗黑主题\r",
                      "// });\r",
                      "// pm.test(\"返回message为SUCCESS\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"tabBar\": false,\r\n      \"toolBar\": {\r\n        \"basicTools\": false,\r\n        \"shareBtn\": false,\r\n        \"widgetBtn\": false,\r\n        \"apiBtn\": false,\r\n        \"formBtn\": false,\r\n        \"historyBtn\": false,\r\n        \"robotBtn\": false\r\n      },\r\n      \"collapsed\": false\r\n    },\r\n    \"bannerLogo\": false\r\n  },\r\n  \"theme\": \"dark\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dsteY8Ru9uTGATgsWL/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dsteY8Ru9uTGATgsWL",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除第30个嵌入链接",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"返回code为200\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.code).to.eql(200);\r",
                      "// });\r",
                      "// pm.test(\"返回message为SUCCESS\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "// });\r",
                      "// pm.test(\"返回success为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.success).to.eql(true);\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dsteY8Ru9uTGATgsWL/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dsteY8Ru9uTGATgsWL",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入spacieId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为spaceId 不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 spaceId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces//nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入spacieId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为spaceId 不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 spaceId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces//nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入spacieId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为spaceId 不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 spaceId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces//nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入spacieId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为指定的空间站不存在，请调整 spaceId 后再试\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"指定的空间站不存在，请调整 spaceId 后再试\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6fqqqq/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6fqqqq",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入spacieId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为指定的空间站不存在，请调整 spaceId 后再试\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"指定的空间站不存在，请调整 spaceId 后再试\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6fqqwb/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6fqqwb",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入spacieId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为指定的空间站不存在，请调整 spaceId 后再试\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"指定的空间站不存在，请调整 spaceId 后再试\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6fqqwb/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6fqqwb",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入nodeId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为nodeId不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 nodeId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes//embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入nodeId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为nodeId不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 nodeId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes//embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入nodeId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为nodeId不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 nodeId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes//embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入nodeId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为找不到指定的维格表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"找不到指定的维格表\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstCctcd6ZNaaaaaaa/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstCctcd6ZNaaaaaaa",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入nodeId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为找不到指定的维格表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"找不到指定的维格表\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstCctcd6ZNaaaaaaa/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstCctcd6ZNaaaaaaa",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入nodeId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为找不到指定的维格表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"找不到指定的维格表\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstCctcd6ZNaaaaaaa/embedlinks/{{linkIdfalse}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstCctcd6ZNaaaaaaa",
                    "embedlinks",
                    "{{linkIdfalse}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入linkId参数为空",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为linkId 不能为空\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 linkId 为必填项\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    ""
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入linkId参数不匹配",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为1501\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(1501);\r",
                      "});\r",
                      "pm.test(\"返回message为指定的嵌入链接不存在，请调整 linkId 后再试\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"指定的嵌入链接不存在，请调整 linkId 后再试\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/emb57d6cd2faaaaaaaa",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "emb57d6cd2faaaaaaaa"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入basicTools参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为basicTools 需要传入boolean类型\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 basicTools 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": 1,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入tabBar参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 tabBar 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 tabBar 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": 1,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入shareBtn参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"返回code为400\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.code).to.eql(400);\r",
                      "// });\r",
                      "// pm.test(\"返回message为参数 shareBtn 只接受 boolean 类型的值\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"参数 shareBtn 只接受 boolean 类型的值\");\r",
                      "// });\r",
                      "// pm.test(\"返回success为false\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.success).to.eql(false);\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": 1,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入widgetBtn参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 widgetBtn 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 widgetBtn 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": 1,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入apiBtn参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 apiBtn 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 apiBtn 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": 1,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入historyBtn参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 historyBtn 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 historyBtn 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": 1,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入robotBtn参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 robotBtn 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 robotBtn 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": 1\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入payload下的collapsed参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 collapsed 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 collapsed 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": 1\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入bannerLogo参数为非boolean类型",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "});\r",
                      "pm.test(\"返回message为参数 bannerLogo 只接受 boolean 类型的值\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"参数 bannerLogo 只接受 boolean 类型的值\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": 1,\r\n    \"editable\": true\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入nodeid为非数表",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为400\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为抱歉, 新建嵌入链接目前支持数表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/fom2VvHnYchU8l1H2p/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "fom2VvHnYchU8l1H2p",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入空间站为非企业级空间站",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为1502\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(1502);\r",
                      "});\r",
                      "pm.test(\"返回message为抱歉，此接口仅可在黄金级以上的空间站中调用\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"抱歉，此接口仅可在黄金级以上的空间站中调用\");\r",
                      "});\r",
                      "pm.test(\"返回success为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4XYPfyAUuq/nodes/dstphTzhtfTkfAKwCM/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4XYPfyAUuq",
                    "nodes",
                    "dstphTzhtfTkfAKwCM",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入permissionType参数为publicEdit",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdtrue\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(true);\r",
                      "//     //表示开启工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viw81iq8Gtfnh\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viw81iq8Gtfnh\");\r",
                      "    //显示单一维格视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "    //在嵌入界面里显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(true);\r",
                      "    //折叠视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "    //显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回permissionType的参数默认为publicEdit\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.permissionType).to.eql(\"publicEdit\");\r",
                      "    //访问者登录后即可在嵌入表格里编辑行数据\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "    //在嵌入界面里显示高亮主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"permissionType\":\"publicEdit\"\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入permissionType参数为publicEdit",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.primarySideBar.collapsed).to.eql(true);\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.tabBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "});\r",
                      "// pm.test(\"返回formBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "// });\r",
                      "pm.test(\"返回historyBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.collapsed).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.bannerLogo).to.eql(true);\r",
                      "});\r",
                      "// pm.test(\"返回permissionType的参数为publicEdit\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.permissionType).to.eql(\"publicEdit\");\r",
                      "// });\r",
                      "pm.test(\"返回viewId参数为viw81iq8Gtfnh\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.viewId).to.eql(\"viw81iq8Gtfnh\");\r",
                      "    //显示单一维格视图\r",
                      "});\r",
                      "pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].theme).to.eql(\"light\");\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入permissionType参数为publicEdit",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdtrue}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdtrue}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建嵌入permissionType参数为privateEdit",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkIdtrue\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.payload.primarySideBar.collapsed).to.eql(true);\r",
                      "//     //表示开启工作目录\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "    //显示视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回viewId参数为viw81iq8Gtfnh\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.viewId).to.eql(\"viw81iq8Gtfnh\");\r",
                      "    //显示单一维格视图\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "    //在嵌入界面里显示基础工具栏（包含：分组、筛选、行高、隐藏字段、排序）\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“分享”按钮\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“小程序”按钮\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“API”按钮\r",
                      "});\r",
                      "pm.test(\"返回formBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“神奇表单”按钮\r",
                      "});\r",
                      "pm.test(\"返回historyBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“时光机”按钮\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "    //在嵌入界面里显示“机器人”按钮\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(true);\r",
                      "    //折叠视图标签栏\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.bannerLogo).to.eql(true);\r",
                      "    //显示「vika维格表」的品牌logo\r",
                      "});\r",
                      "pm.test(\"返回permissionType的参数默认为privateEdit\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.permissionType).to.eql(\"privateEdit\");\r",
                      "    //在空间站里的每一个表格都可以指定成员的操作权限（只可阅读、只可更新、可以编辑、可以管理）\r",
                      "});\r",
                      "pm.test(\"返回theme的参数为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"light\");\r",
                      "    //在嵌入界面里显示高亮主题\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n    \"viewControl\": {\r\n      \"viewId\": \"viw81iq8Gtfnh\",\r\n      \"tabBar\": true,\r\n      \"toolBar\": {\r\n        \"basicTools\": true,\r\n        \"shareBtn\": true,\r\n        \"widgetBtn\": true,\r\n        \"apiBtn\": true,\r\n        \"formBtn\": true,\r\n        \"historyBtn\": true,\r\n        \"robotBtn\": true\r\n      },\r\n      \"collapsed\": true\r\n    },\r\n    \"bannerLogo\": true,\r\n    \"permissionType\":\"privateEdit\"\r\n  },\r\n  \"theme\": \"light\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取嵌入permissionType参数为privateEdit",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "// pm.test(\"返回collapsed参数为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.primarySideBar.collapsed).to.eql(true);\r",
                      "// });\r",
                      "pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.tabBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.basicTools).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回shareBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.shareBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回widgetBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.widgetBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.apiBtn).to.eql(true);\r",
                      "});\r",
                      "// pm.test(\"返回formBtn参数默认为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.viewControl.toolBar.formBtn).to.eql(true);\r",
                      "// });\r",
                      "pm.test(\"返回historyBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.historyBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回robotBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.toolBar.robotBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回viewControl内collapsed的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.collapsed).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回bannerLogo的参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.bannerLogo).to.eql(true);\r",
                      "});\r",
                      "// pm.test(\"返回permissionType的参数为privateEdit\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data[0].payload.permissionType).to.eql(\"privateEdit\");\r",
                      "// });\r",
                      "pm.test(\"返回viewId参数为viw81iq8Gtfnh\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].payload.viewControl.viewId).to.eql(\"viw81iq8Gtfnh\");\r",
                      "    //显示单一维格视图\r",
                      "});\r",
                      "pm.test(\"返回theme的参数默认为light\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].theme).to.eql(\"light\");\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除嵌入permissionType参数为privateEdit",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc4ush6f0zXz/nodes/dstfTgHGsSx4u7wgfJ/embedlinks/{{linkIdtrue}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc4ush6f0zXz",
                    "nodes",
                    "dstfTgHGsSx4u7wgfJ",
                    "embedlinks",
                    "{{linkIdtrue}}"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "fusionAPI_delete",
          "item": [
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "    pm.collectionVariables.set(\"recordId_2\", jsonData.data.records[1].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"语法1\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"语法2\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》支持recordIds=AAAA&recordIds=BBBB",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》支持recordIds=AAAA&recordIds=BBBB\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}&recordIds={{recordId_2}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    },
                    {
                      "key": "recordIds",
                      "value": "{{recordId_2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "    pm.collectionVariables.set(\"recordId_2\", jsonData.data.records[1].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"语法1\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"语法2\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》支持recordIds[]=AAAA&recordIds[]=BBBB",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》支持recordIds[]=AAAA&recordIds[]=BBBB\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds[]={{recordId_1}}&recordIds[]={{recordId_2}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds[]",
                      "value": "{{recordId_1}}"
                    },
                    {
                      "key": "recordIds[]",
                      "value": "{{recordId_2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "    pm.collectionVariables.set(\"recordId_2\", jsonData.data.records[1].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"语法1\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"语法2\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》不支持recordIds[]=AAAA,BBBB",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》不支持recordIds[]=AAAA,BBBB\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contain(\"指定的记录不存在\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds[]={{recordId_1}},{{recordId_2}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds[]",
                      "value": "{{recordId_1}},{{recordId_2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》支持recordIds=AAAA,BBBB",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》支持recordIds=AAAA,BBBB\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}},{{recordId_2}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}},{{recordId_2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "    pm.collectionVariables.set(\"recordId_2\", jsonData.data.records[1].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除多条recID不同的记录——1\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除多条recID不同的记录——2\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》删除多条recID不同的记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》删除多条recID不同的记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}&recordIds={{recordId_2}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    },
                    {
                      "key": "recordIds",
                      "value": "{{recordId_2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "    pm.collectionVariables.set(\"recordId_2\", jsonData.data.records[1].recordId);",
                      "    pm.collectionVariables.set(\"recordId_3\", jsonData.data.records[2].recordId);",
                      "    pm.collectionVariables.set(\"recordId_4\", jsonData.data.records[3].recordId);",
                      "    pm.collectionVariables.set(\"recordId_5\", jsonData.data.records[4].recordId);",
                      "    pm.collectionVariables.set(\"recordId_6\", jsonData.data.records[5].recordId);",
                      "    pm.collectionVariables.set(\"recordId_7\", jsonData.data.records[6].recordId);",
                      "    pm.collectionVariables.set(\"recordId_8\", jsonData.data.records[7].recordId);",
                      "    pm.collectionVariables.set(\"recordId_9\", jsonData.data.records[8].recordId);",
                      "    pm.collectionVariables.set(\"recordId_10\", jsonData.data.records[9].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——1\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——2\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——3\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——4\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——5\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——6\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——7\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——8\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——9\"\n    }\n  },  \n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——10\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_11\", jsonData.data.records[0].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除11条recID不同的记录〉数组——11\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》删除11条recID不同的记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》删除11条recID不同的记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contains(\"单次请求修改\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}},{{recordId_2}},{{recordId_3}},{{recordId_4}},{{recordId_5}},{{recordId_6}},{{recordId_7}},{{recordId_8}},{{recordId_9}},{{recordId_10}},{{recordId_11}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}},{{recordId_2}},{{recordId_3}},{{recordId_4}},{{recordId_5}},{{recordId_6}},{{recordId_7}},{{recordId_8}},{{recordId_9}},{{recordId_10}},{{recordId_11}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》删除10条recID不同的记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》删除10条recID不同的记录〉数组\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}},{{recordId_2}},{{recordId_3}},{{recordId_4}},{{recordId_5}},{{recordId_6}},{{recordId_7}},{{recordId_8}},{{recordId_9}},{{recordId_10}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}},{{recordId_2}},{{recordId_3}},{{recordId_4}},{{recordId_5}},{{recordId_6}},{{recordId_7}},{{recordId_8}},{{recordId_9}},{{recordId_10}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》删除单条记录〉[]",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》删除单条记录〉[]\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds[]={{recordId_11}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds[]",
                      "value": "{{recordId_11}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除单条记录\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》删除单条记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》删除单条记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "    pm.collectionVariables.set(\"recordId_2\", jsonData.data.records[1].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除多条recID相同的记录——1\"\n    }\n  },\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》删除多条recID相同的记录——2\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》删除多条recID相同的记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》删除多条recID相同的记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}&recordIds={{recordId_1}}&recordIds={{recordId_2}}&recordIds={{recordId_2}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    },
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    },
                    {
                      "key": "recordIds",
                      "value": "{{recordId_2}}"
                    },
                    {
                      "key": "recordIds",
                      "value": "{{recordId_2}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete_addRecord",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete_addRecord\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"recordId_1\", jsonData.data.records[0].recordId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"标题\": \"fusionAPI_delete》异常情况\"\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?viewId=viwJfTUmdVBza&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJfTUmdVBza"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》表ID为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》表ID为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(301);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"找不到指定的维格表\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets//records?recordIds={{recordId_1}}",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "datasheets", "", "records"],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》表ID不存在",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》表ID不存在\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(301);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"找不到指定的维格表\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstxxxxxxxxxxx/records?recordIds={{recordId_1}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstxxxxxxxxxxx",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》记录ID不存在",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》记录ID不存在\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contain(\"recordId 指定的记录不存在\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds=recxxxxxxxxxxxxx",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "recxxxxxxxxxxxxx"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》记录ID为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》记录ID为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contain(\"[recordIds]不能为空\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds=",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》记录ID不在该表",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》记录ID不在该表\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contain(\"recordId 指定的记录不存在\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds=rect5VTRZ0pOX",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "rect5VTRZ0pOX"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》只读权限删除记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》只读权限删除记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(602);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contain(\"Operation denied\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskMMpWMH2XhUEttw4IVAad",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》可更新权限删除记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》可更新权限删除记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(602);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contain(\"Operation denied\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskGvHLZly90j85l71UtlXn",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "fusionAPI_delete》可编辑权限删除记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fusionAPI_delete》可编辑权限删除记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.contain(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk8i1cgBhtUNp4J3kqtghi",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst6bkk3p3s1CeZk9a/records?recordIds={{recordId_1}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst6bkk3p3s1CeZk9a",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{recordId_1}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "fusionAPI_v2_Search Node",
          "item": [
            {
              "name": "Search node>Success",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>Found file without permission to view\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(1);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{editor_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&query=Ghost&permissions=1",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "query",
                      "value": "Ghost"
                    },
                    {
                      "key": "permissions",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type is Mirror",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type is Mirror\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Mirror02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Mirror\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Mirror01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Mirror\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Mirror",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Mirror"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type is null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type is null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"The type must be one of the following values: \\\"Folder\\\", \\\"Datasheet\\\", \\\"Form\\\", \\\"Dashboard\\\", \\\"Mirror\\\".\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type not filled",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type not filled\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"The type must be one of the following values: \\\"Folder\\\", \\\"Datasheet\\\", \\\"Form\\\", \\\"Dashboard\\\", \\\"Mirror\\\".\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type not available",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type not available\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"The type must be one of the following values: \\\"Folder\\\", \\\"Datasheet\\\", \\\"Form\\\", \\\"Dashboard\\\", \\\"Mirror\\\".\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=folder",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "folder"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type is Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type is Folder\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Folder01\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Folder\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Permissions\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Folder\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"Folder03\");",
                      "    pm.expect(jsonData.data.nodes[2].type).to.eql(\"Folder\");",
                      "    pm.expect(jsonData.data.nodes[2].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[2].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[2].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[3].name).to.eql(\"Folder02\");",
                      "    pm.expect(jsonData.data.nodes[3].type).to.eql(\"Folder\");",
                      "    pm.expect(jsonData.data.nodes[3].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[3].parentId).to.eql(\"fodeeZgBd7ztD\");",
                      "    pm.expect(jsonData.data.nodes[3].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[3].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Folder",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Folder"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type is Datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type is Datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Star\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"⭐\");",
                      "    pm.expect(jsonData.data.nodes[0].parentId).to.eql(\"fodeeZgBd7ztD\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Datasheet01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[2].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[2].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[2].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[2].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[3].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[3].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[3].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[3].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[3].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type is Form",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type is Form\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Form02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Form\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Form01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Form\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Form",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Form"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>type is Dashboard",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>type is Dashboard\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Dashboard02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Dashboard\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Dashboard01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Dashboard\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Dashboard",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Dashboard"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>spaceId is not available",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>spaceId is not available\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"指定的空间站不存在，请调整 spaceId 后再试\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{spaceId}/nodes?type=Dashboard",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "{spaceId}", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Dashboard"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>SpaceId does not match the token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>sSpaceId does not match the token\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(403);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"API Token 所属用户不是该空间站的成员，请调整 spaceId 或 API Token 后再试\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcV8uiSeBFB3/nodes?type=Dashboard",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcV8uiSeBFB3", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Dashboard"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>token is null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"spaceId is not available\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(401);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"Unauthorized\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Dashboard",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Dashboard"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permissions not filled",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permissions not filled\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Star\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"⭐\");",
                      "    pm.expect(jsonData.data.nodes[0].parentId).to.eql(\"fodeeZgBd7ztD\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Datasheet01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[2].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[2].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[2].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[2].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[3].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[3].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[3].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[3].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[3].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permissions is manager",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permissions is manager\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Star\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"⭐\");",
                      "    pm.expect(jsonData.data.nodes[0].parentId).to.eql(\"fodeeZgBd7ztD\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Datasheet01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[2].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[2].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[2].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[2].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{manager_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=0",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "0"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permissions is editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permissions is editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(1);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(1);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{editor_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=1",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permissions is update-only",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permissions is update-only\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(2);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(2);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{update-only_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=2",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permissions is reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permissions is reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(3);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(3);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{reader_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=3",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "3"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permissions is multi-value",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permissions is multi-value\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Star\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"⭐\");",
                      "    pm.expect(jsonData.data.nodes[0].parentId).to.eql(\"fodeeZgBd7ztD\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Datasheet01\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[2].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[2].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[2].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[2].permission).to.eql(3);",
                      "",
                      "    pm.expect(jsonData.data.nodes[3].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[3].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[3].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[3].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[3].permission).to.eql(3);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{reader_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=0,1,2,3",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "0,1,2,3"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>no permissions",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>no permissions\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes).to.eql([]);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{no-permission_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=1,2,3",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "1,2,3"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>permission does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>permission does not exist\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes).to.eql([]);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{no-permission_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=1，2，3",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "1，2，3"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node> query not filled",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node> query not filled\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(3);",
                      "",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(3);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{reader_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&permissions=1,2,3&query",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "permissions",
                      "value": "1,2,3"
                    },
                    {
                      "key": "query",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node> Precise Matching",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>Precise Matching\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Ghost\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&query=Ghost",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "query",
                      "value": "Ghost"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node> Partial matching",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>Partial matching\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"Datasheet01\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[0].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[0].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[0].permission).to.eql(0);",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"Datasheet02\");",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[1].icon).to.eql(\"\");",
                      "    pm.expect(jsonData.data.nodes[1].isFav).to.eql(false);",
                      "    pm.expect(jsonData.data.nodes[1].permission).to.eql(0);",
                      "",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&query=Datasheet",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "query",
                      "value": "Datasheet"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node> File doesn't exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>File doesn't exist\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes).to.eql([]);",
                      "",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&query=Datasheet03",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "query",
                      "value": "Datasheet03"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Search node>Found file without permission to view",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Search node>Found file without permission to view\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.nodes).to.eql([]);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{no-permission_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{search_node_spaceId}}/nodes?type=Datasheet&query=Ghost",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v2",
                    "spaces",
                    "{{search_node_spaceId}}",
                    "nodes"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    },
                    {
                      "key": "query",
                      "value": "Ghost"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.collectionVariables.set(\"search_node_spaceId\", \"spcMBN7ZAN5R6\");",
                  "pm.collectionVariables.set(\"reader_token\", \"uskMMpWMH2XhUEttw4IVAad\");",
                  "pm.collectionVariables.set(\"update-only_token\", \"uskGvHLZly90j85l71UtlXn\");",
                  "pm.collectionVariables.set(\"editor_token\", \"usk8i1cgBhtUNp4J3kqtghi\");",
                  "pm.collectionVariables.set(\"manager_token\", \"uskBIjCcfaKI9BNPoXbOe1W\");",
                  "pm.collectionVariables.set(\"no-permission_token\", \"usk8oiriC92FrEmFmahpZ6U\");",
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "仪表盘嵌入api",
          "item": [
            {
              "name": "创建仪表盘",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkId\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回tabBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.tabBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回basicTools参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.basicTools).to.eql(false);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"返回widgetBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.widgetBtn).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回apiBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.apiBtn).to.eql(false);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"返回historyBtn参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.historyBtn).to.eql(false);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"返回viewControl内collapsed的参数默认为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collapsed).to.eql(false);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"返回permissionType的参数默认为readOnly\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.permissionType).to.eql(\"readOnly\");\r",
                      "});\r",
                      "pm.test(\"返回theme的参数默认为dark\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.theme).to.eql(\"dark\");\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n      \"viewControl\": {\r\n        \"viewId\": \"viw63YCDPSA0S\",\r\n        \"tabBar\": true,\r\n        \"nodeInfoBar\": false,\r\n        \"collaboratorStatusBar\": false,\r\n        \"toolBar\": {\r\n            \"basicTools\": false,\r\n            \"shareBtn\": true,\r\n            \"widgetBtn\": false,\r\n            \"apiBtn\": false,\r\n            \"formBtn\": false,\r\n            \"historyBtn\": false,\r\n            \"robotBtn\": false,\r\n            \"addWidgetBtn\": false,\r\n            \"fullScreenBtn\": false\r\n        }\r\n      },\r\n      \"primarySideBar\": { \r\n          \"collapsed\": true\r\n      },\r\n      \"bannerLogo\": false,\r\n      \"permissionType\": \"readOnly\"\r\n  },\r\n  \"theme\": \"dark\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除已创建的仪表盘",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks/{{linkId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks",
                    "{{linkId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "仪表盘中显示网络保存状态",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkId\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回collaboratorStatusBar参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.collaboratorStatusBar).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n      \"viewControl\": {\r\n        \"viewId\": \"viw63YCDPSA0S\",\r\n        \"tabBar\": true,\r\n        \"nodeInfoBar\": false,\r\n        \"collaboratorStatusBar\": true,\r\n        \"toolBar\": {\r\n            \"basicTools\": false,\r\n            \"shareBtn\": true,\r\n            \"widgetBtn\": false,\r\n            \"apiBtn\": false,\r\n            \"formBtn\": false,\r\n            \"historyBtn\": false,\r\n            \"robotBtn\": false,\r\n            \"addWidgetBtn\": false,\r\n            \"fullScreenBtn\": false\r\n        }\r\n      },\r\n      \"primarySideBar\": { \r\n          \"collapsed\": true\r\n      },\r\n      \"bannerLogo\": false,\r\n      \"permissionType\": \"readOnly\"\r\n  },\r\n  \"theme\": \"dark\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除参数collaboratorStatusBar为true嵌入",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks/{{linkId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks",
                    "{{linkId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "仪表盘中添加小组件",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkId\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回addWidgetBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.addWidgetBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n      \"viewControl\": {\r\n        \"tabBar\": true,\r\n        \"nodeInfoBar\": false,\r\n        \"collaboratorStatusBar\": true,\r\n        \"toolBar\": {\r\n            \"basicTools\": true,\r\n            \"shareBtn\": true,\r\n            \"widgetBtn\": false,\r\n            \"apiBtn\": false,\r\n            \"formBtn\": false,\r\n            \"historyBtn\": false,\r\n            \"robotBtn\": false,\r\n            \"addWidgetBtn\": true,\r\n            \"fullScreenBtn\": false\r\n        }\r\n      },\r\n      \"primarySideBar\": { \r\n          \"collapsed\": true\r\n      },\r\n      \"bannerLogo\": false,\r\n      \"permissionType\": \"privateEdit\"\r\n  },\r\n  \"theme\": \"dark\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除参数addWidgetBtn为true",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks/{{linkId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks",
                    "{{linkId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "全屏查看嵌入仪表盘",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"linkId\", jsonData.data.linkId);\r",
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回fullScreenBtn参数默认为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.payload.viewControl.toolBar.fullScreenBtn).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"payload\": {\r\n      \"viewControl\": {\r\n        \"tabBar\": true,\r\n        \"nodeInfoBar\": false,\r\n        \"collaboratorStatusBar\": true,\r\n        \"toolBar\": {\r\n            \"basicTools\": true,\r\n            \"shareBtn\": true,\r\n            \"widgetBtn\": false,\r\n            \"apiBtn\": false,\r\n            \"formBtn\": false,\r\n            \"historyBtn\": false,\r\n            \"robotBtn\": false,\r\n            \"addWidgetBtn\": true,\r\n            \"fullScreenBtn\": true\r\n        }\r\n      },\r\n      \"primarySideBar\": { \r\n          \"collapsed\": true\r\n      },\r\n      \"bannerLogo\": false,\r\n      \"permissionType\": \"privateEdit\"\r\n  },\r\n  \"theme\": \"dark\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除参数fullScreenBtn参数为true",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/dsbWxlBchX3GfcX7bE/embedlinks/{{linkId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "dsbWxlBchX3GfcX7bE",
                    "embedlinks",
                    "{{linkId}}"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "fusionapi",
          "item": [
            {
              "name": "Get records",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/records?viewId=viwjocChGCK1S&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwjocChGCK1S"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "add records",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"record1Id\",jsonData.data.records[0].recordId);\r",
                      "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501007097871257602\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"张三\",\r\n          \"avatar\": null\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcXZLLhtOuWl\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ],\r\n      \"复选框类型\": true,\r\n      \"分数类型\": 6,\r\n      \"电话类型\": \"123456789\",\r\n      \"邮箱类型\": \"12345@vikadata.com\",\r\n      \"关联班级表\": [\r\n        \"recL1VRV1ZAy7\"\r\n      ],\r\n      \"成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"单行文本列\": \"北京\",\r\n      \"多行文本列\": \"系统测试：\\n1.UAT测试\\n2.AT测试\"\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/records",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "records"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update records",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"recordId\",jsonData.data.records[0].recordId);\r",
                      "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"records\": [\r\n  {\r\n      \"recordId\": \"{{record1Id}}\",\r\n    \"fields\": {\r\n      \"成员类型\": [\r\n        {\r\n          \"id\": \"1501006749047771137\",\r\n          \"type\": \"Member\",\r\n          \"name\": \"李四\",\r\n          \"avatar\": null\r\n        }\r\n      ],\r\n      \"单选类型\": \"差\",\r\n      \"关联成绩表\": [\r\n        \"recA1Ju7x6zcA\"\r\n      ],\r\n      \"多选类型\": [\r\n        \"好\",\r\n        \"良\",\r\n        \"差\"\r\n      ],\r\n      \"数字类型01\": 40,\r\n      \"货币类型\": 3,\r\n      \"百分比类型\": 0.14,\r\n      \"日期类型\": 1644895020000,\r\n      \"附件类型\": [\r\n        {\r\n          \"id\": \"atcXZLLhtOuWl\",\r\n          \"name\": \"208.gif\",\r\n          \"size\": 969376,\r\n          \"mimeType\": \"image/gif\",\r\n          \"token\": \"space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\",\r\n          \"width\": 2282,\r\n          \"height\": 1304,\r\n          \"url\": \"https://s1.vika.cn/space/2022/02/15/f4c2c8ecac7f480eae5635a65ec25334\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n],\r\n  \"fieldKey\": \"name\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/records",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "records"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete records",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/records?recordIds={{record1Id}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "recordIds",
                      "value": "{{record1Id}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Fields",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "add fields",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"fieldid\",jsonData.data.id);\r",
                      "pm.test(\"接口返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "    pm.expect(jsonData.data.name).to.eql(\"test003\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n \"type\": \"SingleText\",\r\n \"name\": \"test003\",\r\n \"property\": {\r\n \"defaultValue\": \"test001\"\r\n }\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/datasheets/dstbV7RDHRvMk8JnXz/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete Fields",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"接口返回信息\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "    pm.expect(jsonData.success).is.true;\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/datasheets/dstbV7RDHRvMk8JnXz/fields/{{fieldid}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "fields",
                    "{{fieldid}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Views",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回视图数据\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/views",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "views"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Create Datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回视图数据\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "    pm.expect(jsonData.data.fields[0].name).to.eql(\"标题\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n \"name\": \"创建表格\",\r\n \"description\": \"表格描述\",\r\n \"folderId\": \"fodkbp5vTA4DW\",\r\n \"preNodeId\": \"\",\r\n \"fields\": [\r\n   {\r\n     \"type\": \"Text\",\r\n     \"name\": \"标题\"\r\n   }\r\n ]\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get the list of space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回所有空间站列表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "spaces"]
                }
              },
              "response": []
            },
            {
              "name": "Get a list of nodes",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回所有节点列表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "spaces", "spcrMy6a6xuqZ", "nodes"]
                }
              },
              "response": []
            },
            {
              "name": "Get Node Details",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回节点详情\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/nodes/fodkbp5vTA4DW",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "nodes",
                    "fodkbp5vTA4DW"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "fusionAPI文件节点",
          "item": [
            {
              "name": "获取文件节点列表",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取文件节点列表\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Mirror\");",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"维格视图的镜像\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[1].type).to.eql(\"Dashboard\");",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"新建仪表盘\");",
                      "    ",
                      "    pm.expect(jsonData.data.nodes[2].type).to.eql(\"Form\");",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"维格视图的神奇表单\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[3].type).to.eql(\"Datasheet\");",
                      "    pm.expect(jsonData.data.nodes[3].name).to.eql(\"新建表格\");",
                      "    pm.expect(jsonData.data.nodes[3].icon).to.eql(\"😅\");",
                      "",
                      "    pm.expect(jsonData.data.nodes[4].type).to.eql(\"Folder\");",
                      "    pm.expect(jsonData.data.nodes[4].name).to.eql(\"新建文件夹\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcCLYq8RVVzt/nodes",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "spaces", "spcCLYq8RVVzt", "nodes"]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(500);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"类型必须是以下值之一：“文件夹”、“数据表”、“窗体”、“仪表板”、“镜像”。\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type不存在",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type不存在\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(500);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"类型必须是以下值之一：“文件夹”、“数据表”、“窗体”、“仪表板”、“镜像”。\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "type",
                    "value": "folder",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type为Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type为Folder\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0]).to.eql({",
                      "                \"id\": \"fod8ta6rnz8JM\",",
                      "                \"name\": \"新建文件夹\",",
                      "                \"type\": \"Folder\",",
                      "                \"icon\": \"\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes?type=Folder",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Folder"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type为Datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type为Datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0]).to.eql({",
                      "                \"id\": \"dst6lC5iiUjjwHKyzD\",",
                      "                \"name\": \"新建表格\",",
                      "                \"type\": \"Datasheet\",",
                      "                \"icon\": \"\",",
                      "                \"parentId\": \"fod8ta6rnz8JM\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "    pm.expect(jsonData.data.nodes[1]).to.eql({",
                      "                \"id\": \"dstfDuph6REPMoTPxl\",",
                      "                \"name\": \"新建表格\",",
                      "                \"type\": \"Datasheet\",",
                      "                \"icon\": \"😅\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes?type=Datasheet",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Datasheet"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type为Form",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type为Form\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0]).to.eql({",
                      "                \"id\": \"fomfn0SmTVgMPKvpLa\",",
                      "                \"name\": \"维格视图的神奇表单\",",
                      "                \"type\": \"Form\",",
                      "                \"icon\": \"\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes?type=Form",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Form"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type为Dashboard",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type为Dashboard\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0]).to.eql({",
                      "                \"id\": \"dsbuzGRaLvAAPfzj63\",",
                      "                \"name\": \"新建仪表盘\",",
                      "                \"type\": \"Dashboard\",",
                      "                \"icon\": \"\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes?type=Dashboard",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Dashboard"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点》type为Mirror",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点》type为Mirror\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0]).to.eql({",
                      "                \"id\": \"mirYstNvbdtF4k3t9Z\",",
                      "                \"name\": \"维格视图的镜像\",",
                      "                \"type\": \"Mirror\",",
                      "                \"icon\": \"\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/spcCLYq8RVVzt/nodes?type=Mirror",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "spcCLYq8RVVzt", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Mirror"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取文件节点详情》指定文件夹ID为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取文件节点详情》指定文件夹ID为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"mirYstNvbdtF4k3t9Z\");",
                      "    pm.expect(jsonData.data.nodes[1].name).to.eql(\"dsbuzGRaLvAAPfzj63\");",
                      "    pm.expect(jsonData.data.nodes[2].name).to.eql(\"dstfDuph6REPMoTPxl\");",
                      "    pm.expect(jsonData.data.nodes[3].name).to.eql(\"fod8ta6rnz8JM\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcCLYq8RVVzt/nodes",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "spaces", "spcCLYq8RVVzt", "nodes"]
                }
              },
              "response": []
            },
            {
              "name": "获取文件节点详情",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取文件节点详情\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodes[0].children).to.eql({",
                      "                \"id\": \"dst6lC5iiUjjwHKyzD\",",
                      "                \"name\": \"新建表格\",",
                      "                \"type\": \"Datasheet\",",
                      "                \"icon\": \"\",",
                      "                \"isFav\": false,",
                      "                \"permission\": 0",
                      "            });",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"新建文件夹\");",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcCLYq8RVVzt/nodes/fod8ta6rnz8JM",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcCLYq8RVVzt",
                    "nodes",
                    "fod8ta6rnz8JM"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "fusionAPI创建表",
          "item": [
            {
              "name": "创建文件夹",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建文件夹\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "\r",
                      "    pm.collectionVariables.set(\"folderId\", jsonData.data.nodeId);\r",
                      "    console.log(jsonData.data.nodeId)\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"parentId\": \"fodF6YGbbeLde\",\r\n    \"type\": 1\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "create"]
                }
              },
              "response": []
            },
            {
              "name": "首列多行，次列多行",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列多行，次列多行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列多行，次列多行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"标题\",\r\n        \"type\": \"Text\"\r\n    },{\r\n        \"name\": \"多行\",\r\n        \"type\": \"Text\",\r\n        \"property\": null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列数字，次列数字",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列数字，次列数字\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列数字，次列数字\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"数字\",\r\n        \"type\": \"Number\",\r\n        \"property\": {\r\n          \"defaultValue\": \"1\",\r\n          \"precision\": \"2\"\r\n    }\r\n    },{\r\n        \"name\": \"数\",\r\n        \"type\": \"Number\",\r\n        \"property\": {\r\n          \"defaultValue\": \"1\",\r\n          \"precision\": \"2\"\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列网址，次列网址",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列网址，次列网址\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列网址，次列网址\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"网址\",\r\n        \"type\": \"URL\"\r\n    },{\r\n        \"name\": \"URL\",\r\n        \"type\": \"URL\",\r\n        \"property\":null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列邮箱，次列邮箱",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列邮箱，次列邮箱\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列邮箱，次列邮箱\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"Email\",\r\n        \"type\": \"Email\"\r\n    },{\r\n        \"name\": \"邮箱\",\r\n        \"type\": \"Email\",\r\n        \"property\": null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列电话，次列电话",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列电话，次列电话\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列电话，次列电话\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"Phone\",\r\n        \"type\": \"Phone\"\r\n    },{\r\n        \"name\": \"电话\",\r\n        \"type\": \"Phone\",\r\n        \"property\": null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列单行，次列单行",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列单行，次列单行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列单行，次列单行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"单行文本\",\r\n        \"type\": \"SingleText\",\r\n        \"property\": {\r\n         \"defaultValue\": \"单行文本\"\r\n    }\r\n    },{\r\n        \"name\": \"单行\",\r\n        \"type\": \"SingleText\",\r\n        \"property\": {\r\n         \"defaultValue\": \"单行文本\"\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列货币，次列货币",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列货币，次列货币\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列货币，次列货币\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"货币\",\r\n        \"type\": \"Currency\",\r\n        \"property\": {\r\n         \"defaultValue\": \"1\",\r\n         \"precision\": 2,\r\n         \"symbolAlign\": \"Left\",\r\n         \"symbol\": \"元\"\r\n    }\r\n    },{\r\n        \"name\": \"货币1\",\r\n        \"type\": \"Currency\",\r\n        \"property\": {\r\n         \"defaultValue\": \"1\",\r\n         \"precision\": 2,\r\n         \"symbolAlign\": \"Left\",\r\n         \"symbol\": \"元\"\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列百分比，次列百分比",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列百分比，次列百分比\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列百分比，次列百分比\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"百分比\",\r\n        \"type\": \"Percent\",\r\n        \"property\": {\r\n         \"defaultValue\": \"1\",\r\n         \"precision\": 2\r\n    }\r\n    },{\r\n        \"name\": \"百分比1\",\r\n        \"type\": \"Percent\",\r\n        \"property\": {\r\n         \"defaultValue\": \"1\",\r\n         \"precision\": 2\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列日期，次列日期",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列日期，次列日期\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列日期，次列日期\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"日期\",\r\n        \"type\": \"DateTime\",\r\n        \"property\": {\r\n          \"dateFormat\": \"YYYY-MM-DD\",\r\n          \"timeFormat\": \"HH:mm\",\r\n          \"autoFill\": true,\r\n         \"includeTime\": true\r\n    }\r\n    },{\r\n        \"name\": \"日期1\",\r\n        \"type\": \"DateTime\",\r\n        \"property\": {\r\n          \"dateFormat\": \"YYYY-MM-DD\",\r\n          \"timeFormat\": \"HH:mm\",\r\n          \"autoFill\": true,\r\n         \"includeTime\": true\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列公式，次列公式",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列公式，次列公式\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列公式，次列公式\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"公式\",\r\n        \"type\": \"Formula\",\r\n        \"property\": {\r\n          \"expression\": \"'1 + 1 = 2'\"\r\n    }\r\n    },{\r\n        \"name\": \"智能公式\",\r\n        \"type\": \"Formula\",\r\n        \"property\": {\r\n          \"expression\": \"'1 + 1 = 2'\"\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增，次列自增",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增，次列自增\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增，次列自增\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"自增\",\r\n        \"type\": \"AutoNumber\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列创建时间",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列创建时间\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列创建时间\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"创建时间\",\r\n        \"type\": \"CreatedTime\",\r\n        \"property\": {\r\n         \"dateFormat\": \"YYYY/MM/DD\",\r\n         \"timeFormat\": \"HH:mm\",\r\n         \"includeTime\": true\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列修改时间",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列修改时间\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列修改时间\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"修改时间\",\r\n        \"type\": \"LastModifiedTime\",\r\n        \"property\": {\r\n         \"dateFormat\": \"YYYY/MM/DD\",\r\n         \"timeFormat\": \"HH:mm\",\r\n         \"includeTime\": true\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列创建人",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列创建人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列创建人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"创建人\",\r\n        \"type\": \"CreatedBy\",\r\n        \"property\": null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列修改人",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列修改人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列修改人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"修改人\",\r\n        \"type\": \"LastModifiedBy\",\r\n        \"property\":{}\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列附件",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列附件\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列附件\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"附件\",\r\n        \"type\": \"Attachment\",\r\n        \"property\": null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列成员\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列成员\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"成员\",\r\n        \"type\": \"Member\",\r\n        \"property\": {\r\n         \"isMulti\": true,\r\n         \"shouldSendMsg\": false\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列多选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列多选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列多选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"多选\",\r\n        \"type\": \"MultiSelect\",\r\n        \"property\": {\r\n         \"defaultValue\": [],\r\n         \"options\": [\r\n             {\r\n             \"name\": \"选项1\"\r\n             },\r\n             {\r\n             \"name\": \"选项2\",\r\n             \"color\": \"red_1\"\r\n             }\r\n         ]\r\n     }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列评分",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列评分\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列评分\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"评分\",\r\n        \"type\": \"Rating\",\r\n        \"property\": {\r\n          \"icon\": \"boxing_glove\",\r\n          \"max\": 8\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列自增数字，次列勾选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列自增数字，次列勾选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列自增数字，次列勾选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"自增数字\",\r\n        \"type\": \"AutoNumber\"\r\n    },{\r\n        \"name\": \"勾选\",\r\n        \"type\": \"Checkbox\",\r\n        \"property\": {\r\n         \"icon\": \"art\"\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列多行，次列神奇关联",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列多行，次列神奇关联\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"首列多行，次列神奇关联\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"标题\",\r\n        \"type\": \"Text\"\r\n    },{\r\n        \"name\": \"神奇关联\",\r\n        \"type\": \"MagicLink\",\r\n        \"property\": {\r\n         \"foreignDatasheetId\": \"dstSRmHD6Kbs54iaBU\",\r\n         \"limitSingleRecord\": true\r\n    }\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "首列创建人，次列创建人",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"首列创建人，次列创建人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"首列创建人，次列创建人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(400);\r",
                      "pm.test(\"首列创建人，次列创建人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"首列类型不允许为CreatedBy\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"第一个表格\",\r\n    \"folderId\": \"{{folderId}}\",\r\n    \"fields\": [{\r\n        \"name\": \"创建\",\r\n        \"type\": \"CreatedBy\",\r\n        \"property\": null\r\n    },{\r\n        \"name\": \"创建人\",\r\n        \"type\": \"CreatedBy\",\r\n        \"property\": null\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除文件夹",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除文件夹\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});",
                      "pm.test(\"删除文件夹\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/{{folderId}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "{{folderId}}"]
                }
              },
              "response": []
            },
            {
              "name": "查找关联表的关联列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查找关联表的关联列\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"fields\", jsonData.data.fields[1].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstSRmHD6Kbs54iaBU/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstSRmHD6Kbs54iaBU",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除多余的关联列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除文件夹\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});",
                      "pm.test(\"删除文件夹\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spc8AXuhrHcVt/datasheets/dstSRmHD6Kbs54iaBU/fields/{{fields}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spc8AXuhrHcVt",
                    "datasheets",
                    "dstSRmHD6Kbs54iaBU",
                    "fields",
                    "{{fields}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "fusionAPI创建字段和获取字段",
          "item": [
            {
              "name": "创建多行字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"duohang\", jsonData.data.id);\r",
                      "pm.test(\"创建多行字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"创建多行字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"多行\",\r\n        \"type\": \"Text\",\r\n        \"property\": null\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建数字字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"shuzi\", jsonData.data.id);\r",
                      "pm.test(\"创建数字字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建数字字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"数字\",\r\n        \"type\": \"Number\",\r\n        \"property\": {\r\n          \"defaultValue\": \"1\",\r\n          \"precision\": \"2\"\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建网址字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"wangzhi\", jsonData.data.id);\r",
                      "pm.test(\"创建网址字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建网址字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"URL\",\r\n        \"type\": \"URL\"\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建邮箱字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"youxiang\", jsonData.data.id);\r",
                      "pm.test(\"创建邮箱字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建邮箱字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"邮箱\",\r\n        \"type\": \"Email\",\r\n        \"property\": null\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建电话字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"dianhua\", jsonData.data.id);\r",
                      "pm.test(\"创建电话字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建电话字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"电话\",\r\n        \"type\": \"Phone\",\r\n        \"property\": null\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建单行字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"danhang\", jsonData.data.id);\r",
                      "pm.test(\"创建单行字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建单行字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"单行\",\r\n        \"type\": \"SingleText\",\r\n        \"property\": {\r\n         \"defaultValue\": \"单行文本\"\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建货币字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"huobi\", jsonData.data.id);\r",
                      "pm.test(\"创建货币字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建货币字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"货币1\",\r\n        \"type\": \"Currency\",\r\n        \"property\": {\r\n         \"defaultValue\": \"1\",\r\n         \"precision\": 2,\r\n         \"symbolAlign\": \"Left\",\r\n         \"symbol\": \"元\"\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建百分比字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"baifenbi\", jsonData.data.id);\r",
                      "pm.test(\"创建百分比字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建百分比字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"百分比1\",\r\n        \"type\": \"Percent\",\r\n        \"property\": {\r\n         \"defaultValue\": \"1\",\r\n         \"precision\": 2\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建日期字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"riqi\", jsonData.data.id);\r",
                      "pm.test(\"创建日期字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建日期字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"日期1\",\r\n        \"type\": \"DateTime\",\r\n        \"property\": {\r\n          \"dateFormat\": \"YYYY-MM-DD\",\r\n          \"timeFormat\": \"HH:mm\",\r\n          \"autoFill\": true,\r\n         \"includeTime\": true\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建公式字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"gongshi\", jsonData.data.id);\r",
                      "pm.test(\"创建公式字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建公式字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"智能公式\",\r\n        \"type\": \"Formula\",\r\n        \"property\": {\r\n          \"expression\": \"'1 + 1 = 2'\"\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建自增字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"zizeng\", jsonData.data.id);\r",
                      "pm.test(\"创建自增字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建自增字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"自增\",\r\n        \"type\": \"AutoNumber\"\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建创建时间字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"chuangjianshijian\", jsonData.data.id);\r",
                      "pm.test(\"创建创建时间字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建创建时间字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"创建时间\",\r\n        \"type\": \"CreatedTime\",\r\n        \"property\": {\r\n         \"dateFormat\": \"YYYY/MM/DD\",\r\n         \"timeFormat\": \"HH:mm\",\r\n         \"includeTime\": true\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建修改时间字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"xiugaishijian\", jsonData.data.id);\r",
                      "pm.test(\"创建修改时间字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建修改时间字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"修改时间\",\r\n        \"type\": \"LastModifiedTime\",\r\n        \"property\": {\r\n         \"dateFormat\": \"YYYY/MM/DD\",\r\n         \"timeFormat\": \"HH:mm\",\r\n         \"includeTime\": true\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建创建人字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"chaungjianren\", jsonData.data.id);\r",
                      "pm.test(\"创建创建人字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建创建人字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"创建人\",\r\n        \"type\": \"CreatedBy\",\r\n        \"property\": null\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建修改人字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"xiugairen\", jsonData.data.id);\r",
                      "pm.test(\"创建修改人字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建修改人字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"修改人\",\r\n        \"type\": \"LastModifiedBy\",\r\n        \"property\":{}\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建附件字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"fujian\", jsonData.data.id);\r",
                      "pm.test(\"创建附件字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建附件字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"附件\",\r\n        \"type\": \"Attachment\",\r\n        \"property\": null\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建成员字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"chengyuan\", jsonData.data.id);\r",
                      "pm.test(\"创建成员字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建成员字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"成员\",\r\n        \"type\": \"Member\",\r\n        \"property\": {\r\n         \"isMulti\": true,\r\n         \"shouldSendMsg\": false\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建多选字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"duoxuan\", jsonData.data.id);\r",
                      "pm.test(\"创建多选字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建多选字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"多选\",\r\n        \"type\": \"MultiSelect\",\r\n        \"property\": {\r\n         \"defaultValue\": [],\r\n         \"options\": [\r\n             {\r\n             \"name\": \"选项1\"\r\n             },\r\n             {\r\n             \"name\": \"选项2\",\r\n             \"color\": \"red_1\"\r\n             }\r\n         ]\r\n     }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建评分字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"pingfen\", jsonData.data.id);\r",
                      "pm.test(\"创建评分字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建评分字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"评分\",\r\n        \"type\": \"Rating\",\r\n        \"property\": {\r\n          \"icon\": \"boxing_glove\",\r\n          \"max\": 8\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建勾选字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"gouxuan\", jsonData.data.id);\r",
                      "pm.test(\"创建勾选字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建勾选字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"勾选\",\r\n        \"type\": \"Checkbox\",\r\n        \"property\": {\r\n         \"icon\": \"art\"\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建神奇关联字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"shenqiguanlian\", jsonData.data.id);\r",
                      "pm.test(\"创建神奇关联字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建神奇关联字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n        \"name\": \"神奇关联\",\r\n        \"type\": \"MagicLink\",\r\n        \"property\": {\r\n         \"foreignDatasheetId\": \"dstqwWjU8EnUydPp2Z\",\r\n         \"limitSingleRecord\": true\r\n    }\r\n    }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建神奇引用字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"shenqiyinyong\", jsonData.data.id);\r",
                      "pm.test(\"创建神奇关联字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"创建神奇关联字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"神奇引用\",\r\n    \"type\": \"MagicLookUp\",\r\n    \"property\": {\r\n        \"relatedLinkFieldId\": \"{{shenqiguanlian}}\",\r\n        \"targetFieldId\": \"fldda7lf0revx\"\r\n    }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建单选字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"danxuan\", jsonData.data.id);\r",
                      "pm.test(\"创建单选字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"创建单选字段\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"单选\",\r\n    \"type\": \"SingleSelect\",\r\n    \"property\": {\r\n      \"options\": [\r\n        {\r\n          \"name\": \"选项1\"\r\n        },\r\n        {\r\n          \"name\": \"选项2\",\r\n          \"color\": \"red_1\"\r\n        }\r\n      ]\r\n    }\r\n  }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取字段\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.fields[1].type).to.eql(\"Text\");",
                      "    pm.expect(jsonData.data.fields[2].type).to.eql(\"Number\");",
                      "    pm.expect(jsonData.data.fields[3].type).to.eql(\"URL\");",
                      "    pm.expect(jsonData.data.fields[4].type).to.eql(\"Email\");",
                      "    pm.expect(jsonData.data.fields[5].type).to.eql(\"Phone\");",
                      "    pm.expect(jsonData.data.fields[6].type).to.eql(\"SingleText\");",
                      "    pm.expect(jsonData.data.fields[7].type).to.eql(\"Currency\");",
                      "    pm.expect(jsonData.data.fields[8].type).to.eql(\"Percent\");",
                      "    pm.expect(jsonData.data.fields[9].type).to.eql(\"DateTime\");",
                      "    pm.expect(jsonData.data.fields[10].type).to.eql(\"Formula\");",
                      "    pm.expect(jsonData.data.fields[11].type).to.eql(\"AutoNumber\");",
                      "    pm.expect(jsonData.data.fields[12].type).to.eql(\"CreatedTime\");",
                      "    pm.expect(jsonData.data.fields[13].type).to.eql(\"LastModifiedTime\");",
                      "    pm.expect(jsonData.data.fields[14].type).to.eql(\"CreatedBy\");",
                      "    pm.expect(jsonData.data.fields[15].type).to.eql(\"LastModifiedBy\");",
                      "    pm.expect(jsonData.data.fields[16].type).to.eql(\"Attachment\");",
                      "    pm.expect(jsonData.data.fields[17].type).to.eql(\"Member\");",
                      "    pm.expect(jsonData.data.fields[18].type).to.eql(\"MultiSelect\");",
                      "    pm.expect(jsonData.data.fields[19].type).to.eql(\"Rating\");",
                      "    pm.expect(jsonData.data.fields[20].type).to.eql(\"Checkbox\");",
                      "    pm.expect(jsonData.data.fields[21].type).to.eql(\"MagicLink\");",
                      "    pm.expect(jsonData.data.fields[22].type).to.eql(\"MagicLookUp\");",
                      "    pm.expect(jsonData.data.fields[23].type).to.eql(\"SingleSelect\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{dstId}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "datasheets", "{{dstId}}", "fields"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.collectionVariables.set(\"dstId\", \"dstPTbuJtS3Cq5sz2W\");",
                  "pm.collectionVariables.set(\"spaceId\", \"spc8AXuhrHcVt\");"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "fusionAPI删除字段",
          "item": [
            {
              "name": "删除多行",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除多行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{duohang}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{duohang}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除数字",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除数字\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{shuzi}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{shuzi}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除网址",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除网址\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{wangzhi}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{wangzhi}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除邮箱",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除邮箱\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{youxiang}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{youxiang}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除电话",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除电话\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{dianhua}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{dianhua}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除单行",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除单行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{danhang}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{danhang}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除货币",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除货币\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{huobi}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{huobi}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除百分比",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除百分比\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{baifenbi}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{baifenbi}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除日期",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除日期\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{riqi}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{riqi}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除公式",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除公式\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{gongshi}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{gongshi}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除自增",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除自增\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{zizeng}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{zizeng}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除创建时间",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除创建时间\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{chuangjianshijian}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{chuangjianshijian}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除修改时间",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除修改时间\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{xiugaishijian}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{xiugaishijian}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除创建人",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除创建人\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{chaungjianren}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{chaungjianren}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除修改人",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除修改人\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"Your test name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{xiugairen}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{xiugairen}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除附件",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除附件\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{fujian}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{fujian}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除成员\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{chengyuan}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{chengyuan}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除多选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除多选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{duoxuan}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{duoxuan}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除评分",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除评分\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{pingfen}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{pingfen}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除勾选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除勾选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{gouxuan}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{gouxuan}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除神奇关联",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除神奇关联\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{shenqiguanlian}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{shenqiguanlian}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除首列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除首列\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"首列不允许删除\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/fldFzln0Hgr0u",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "fldFzln0Hgr0u"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除神奇引用",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除神奇引用\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{shenqiyinyong}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{shenqiyinyong}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除单选",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除单选\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/{{dstId}}/fields/{{danxuan}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{dstId}}",
                    "fields",
                    "{{danxuan}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取字段\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "    pm.collectionVariables.set(\"deleteFields\", jsonData.data.fields[1].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstqwWjU8EnUydPp2Z/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstqwWjU8EnUydPp2Z",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除神奇关联转换的多行",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除神奇关联转换的多行\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk4o8VVWA1K9Z4WacV8Bqx",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://integration.vika.ltd/fusion/v1/spaces/{{spaceId}}/datasheets/dstqwWjU8EnUydPp2Z/fields/{{deleteFields}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "dstqwWjU8EnUydPp2Z",
                    "fields",
                    "{{deleteFields}}"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "获取视图",
          "item": [
            {
              "name": "获取视图",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取视图\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "    pm.expect(jsonData.data.views[0].id).to.eql(\"viwjocChGCK1S\");\r",
                      "    pm.expect(jsonData.data.views[0].name).to.eql(\"维格视图\");\r",
                      "    pm.expect(jsonData.data.views[0].type).to.eql(\"Grid\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstbV7RDHRvMk8JnXz/views",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstbV7RDHRvMk8JnXz",
                    "views"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "获取空间站列表",
          "item": [
            {
              "name": "获取空间站列表",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取空间站列表\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "    pm.expect(jsonData.data.spaces[0].id).to.eql(\"spcrMy6a6xuqZ\");\r",
                      "    pm.expect(jsonData.data.spaces[0].name).to.eql(\"API测试空间表勿动\");\r",
                      "    pm.expect(jsonData.data.spaces[0].isAdmin).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v1", "spaces"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "One-way Link",
          "item": [
            {
              "name": "创建文件夹",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建文件夹\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.collectionVariables.set(\"folder_nodeId\",jsonData.data.nodeId);",
                      "    });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"parentId\": \"fodj4v6FFpQlZ\",\n    \"type\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "create"]
                }
              },
              "response": []
            },
            {
              "name": "创建关联原表",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建关联原表\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.collectionVariables.set(\"foreignDatasheetId\", jsonData.data.id);",
                      "    pm.collectionVariables.set(\"targetFieldId\", jsonData.data.fields[0].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"创建关联原表\",\n    \"folderId\": \"{{folder_nodeId}}\",\n    \"fields\": [\n        {\n            \"type\": \"Text\",\n            \"name\": \"标题\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建表-双向关联》支持MagicLink和TwoWayLink",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建表-双向关联》支持MagicLink和TwoWayLink\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.fields[1].name).to.eql(\"创建表-双向关联MagicLink\");",
                      "    pm.expect(jsonData.data.fields[2].name).to.eql(\"创建表-双向关联TwoWaylink\");",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"创建表-双向关联》支持MagicLink和TwoWayLink\",\n    \"folderId\": \"{{folder_nodeId}}\",\n    \"fields\": [\n        {\n            \"type\": \"Text\",\n            \"name\": \"标题\"\n        },\n        {\n            \"type\": \"MagicLink\",\n            \"name\": \"创建表-双向关联MagicLink\",\n            \"property\": {\n                \"foreignDatasheetId\": \"{{foreignDatasheetId}}\"\n            }\n        },\n        {\n            \"type\": \"TwoWayLink\",\n            \"name\": \"创建表-双向关联TwoWaylink\",\n            \"property\": {\n                \"foreignDatasheetId\": \"{{foreignDatasheetId}}\"\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建表-单向关联",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建表-单向关联\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.fields[1].name).to.eql(\"创建表-单向关联\");",
                      "",
                      "        pm.collectionVariables.set(\"datasheets\", jsonData.data.id);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"创建表-单向关联\",\n    \"description\": \"这是一段描述\",\n    \"folderId\": \"{{folder_nodeId}}\",\n    \"fields\": [\n        {\n            \"type\": \"Text\",\n            \"name\": \"标题\"\n        },\n        {\n            \"type\": \"OneWayLink\",\n            \"name\": \"创建表-单向关联\",\n            \"property\": {\n                \"foreignDatasheetId\": \"{{foreignDatasheetId}}\"\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-单向关联",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-单向关联\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-单向关联\");",
                      "    pm.collectionVariables.set(\"del_field_link_3\", jsonData.data.id);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"OneWayLink\",\n    \"name\": \"创建列-单向关联\",\n    \"property\": {\n        \"foreignDatasheetId\": \"{{foreignDatasheetId}}\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-双向关联MagicLink",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-双向关联MagicLink\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-双向关联MagicLink\");",
                      "    pm.collectionVariables.set(\"del_field_link_1\", jsonData.data.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"MagicLink\",\n    \"name\": \"创建列-双向关联MagicLink\",\n    \"property\": {\n        \"foreignDatasheetId\": \"{{foreignDatasheetId}}\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-双向关联TwoWayLink",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-双向关联TwoWayLink\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-双向关联TwoWaylink\");",
                      "    pm.collectionVariables.set(\"del_field_link_2\", jsonData.data.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"TwoWayLink\",\n    \"name\": \"创建列-双向关联TwoWaylink\",\n    \"property\": {\n        \"foreignDatasheetId\": \"{{foreignDatasheetId}}\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-引用",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-引用\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-引用\");",
                      "    pm.collectionVariables.set(\"del_field_lookup\", jsonData.data.id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"MagicLookUp\",\n    \"name\": \"创建列-引用\",\n    \"property\": {\n        \"relatedLinkFieldId\": \"{{del_field_link_3}}\",\n        \"targetFieldId\": \"{{targetFieldId}}\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询记录ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询记录ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.collectionVariables.set(\"records_ID\",jsonData.data.records[0].recordId);  ",
                      "    pm.collectionVariables.set(\"records_ID2\",jsonData.data.records[1].recordId);});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{foreignDatasheetId}}/records?fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{foreignDatasheetId}}",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.collectionVariables.set(\"update_recordId\",jsonData.data.records[0].recordId);",
                      "",
                      "});",
                      "    records_ID = pm.collectionVariables.get(\"records_ID\");",
                      "",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(records_ID);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"records\": [\n  {\n    \"fields\": {\n      \"创建列-双向关联MagicLink\": [\"{{records_ID}}\"],\n      \"创建列-双向关联TwoWaylink\": [\"{{records_ID}}\"],      \n      \"创建表-单向关联\": [\"{{records_ID}}\"]\n\n    }\n  }\n],\n  \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{datasheets}}/records",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{datasheets}}",
                    "records"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "修改记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"修改记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "});",
                      "    records_ID2 = pm.collectionVariables.get(\"records_ID2\");",
                      "",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(records_ID2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"records\": [\n        {\n            \"recordId\": \"{{update_recordId}}\",\n            \"fields\": {\n                \"创建表-单向关联\": [\n                    \"{{records_ID2}}\"\n                ],\"创建表-双向关联MagicLink\": [\n                    \"{{records_ID2}}\"\n                ],\"创建表-TwoWaylink\": [\n                    \"{{records_ID2}}\"\n                ]\n            }\n        }\n    ],\n    \"fieldKey\": \"name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{datasheets}}/records?",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{datasheets}}",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "});",
                      "",
                      "    records_ID2 = pm.collectionVariables.get(\"records_ID2\");",
                      "",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(records_ID2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{datasheets}}/records?fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{datasheets}}",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询列\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.fields[2].name).to.eql(\"创建列-单向关联\");",
                      "    pm.expect(jsonData.data.fields[3].name).to.eql(\"创建列-双向关联MagicLink\");",
                      "    pm.expect(jsonData.data.fields[4].name).to.eql(\"创建列-双向关联TwoWaylink\");",
                      "    pm.expect(jsonData.data.fields[5].name).to.eql(\"创建列-引用\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{datasheets}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{datasheets}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除列-单向关联",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除列-单向关联\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields/{{del_field_link_3}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields",
                    "{{del_field_link_3}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除列-双向关联",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除列-双向关联\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields/{{del_field_link_1}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields",
                    "{{del_field_link_1}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除列-引用",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除列-引用\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets}}/fields/{{del_field_lookup}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets}}",
                    "fields",
                    "{{del_field_lookup}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除文件夹",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除文件夹\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/{{folder_nodeId}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "{{folder_nodeId}}"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.collectionVariables.set(\"folderId\", \"fodj4v6FFpQlZ\");",
                  "pm.collectionVariables.set(\"spaceId\", \"spcJUmH65y9FE\");"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Button",
          "item": [
            {
              "name": "创建表-创建按钮列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建表-创建按钮列\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.fields[1].name).to.eql(\"创建表-创建按钮列\");",
                      "",
                      "    pm.collectionVariables.set(\"datasheets_ID\", jsonData.data.id)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"创建表-创建按钮列\",\n    \"folderId\": \"{{folder_nodeId}}\",\n    \"fields\": [\n        {\n            \"type\": \"Text\",\n            \"name\": \"标题\"\n        },\n        {\n            \"type\": \"Button\",\n            \"name\": \"创建表-创建按钮列\",\n            \"property\": {\n                \"action\": {\n                    \"type\": \"OpenLink\"\n                }\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建表-首列不支持创建按钮列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建表-首列不支持创建按钮列\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.eql(\"首列类型不允许为Button\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"创建表-单向关联\",\n    \"description\": \"这是一段描述\",\n    \"folderId\": \"{{folder_nodeId}}\",\n    \"fields\": [\n        {\n            \"type\": \"Button\",\n            \"name\": \"创建表-首列不支持创建按钮列\",\n            \"property\": {\n                \"action\": {\n                    \"type\": \"OpenLink\"                }\n            }\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-创建按钮列button-Url",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-创建按钮列button-Url\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-创建按钮列button-Url\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"Button\",\n    \"name\": \"创建列-创建按钮列button-Url\",\n    \"property\": {\n        \"action\": {\n            \"type\": \"OpenLink\",\n            \"openLink\": {\n                \"type\": \"Url\",\n                \"expression\": \"https://www.baidu.com\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-创建按钮列button-Expression",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-创建按钮列button-Expression\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-创建按钮列button-Expression\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"Button\",\n    \"name\": \"创建列-创建按钮列button-Expression\",\n    \"property\": {\n        \"action\": {\n            \"type\": \"OpenLink\",\n            \"openLink\": {\n                \"type\": \"Expression\",\n                \"expression\": \"{创建表-创建按钮列}\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-创建按钮列action非open link",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-创建按钮列action非open link\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(400);",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.message).to.contains(\"must be [OpenLink]\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"Button\",\n    \"name\": \"创建列-创建按钮列action非open link\",\n    \"property\": {\n        \"action\": {\n            \"type\": \"TriggerAutomation\"\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-创建按钮列-支持填写style",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-创建按钮列-支持填写style\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-创建按钮列-支持填写style\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"Button\",\n    \"name\": \"创建列-创建按钮列-支持填写style\",\n    \"property\": {\n        \"action\": {\n            \"type\": \"OpenLink\"\n        },\n        \"style\": {\n            \"type\": \"Background\",\n            \"color\": {\n                \"name\": \"red_4\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-创建按钮列- style type为纯文本",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-创建按钮列- style type为纯文本\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-创建按钮列- style type为纯文本\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"Button\",\n    \"name\": \"创建列-创建按钮列- style type为纯文本\",\n    \"property\": {\n        \"action\": {\n            \"type\": \"OpenLink\"\n        },\n        \"style\": {\n            \"type\": \"OnlyText\",\n            \"color\": {\n                \"name\": \"red_2\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "创建列-创建按钮列-支持填写文案",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建列-创建按钮列-支持填写文案\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"创建列-创建按钮列-支持填写文案\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"Button\",\n    \"name\": \"创建列-创建按钮列-支持填写文案\",\n    \"property\": {\n        \"action\": {\n            \"type\": \"OpenLink\"\n        },\n        \"text\": \"非默认文案\",\n        \"style\": {\n            \"type\": \"OnlyText\",\n            \"color\": {\n                \"name\": \"red_2\"\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spaceId}}/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spaceId}}",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询列",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询列\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.fields[1].type).to.eql(\"Button\");",
                      "    pm.expect(jsonData.data.fields[1].property.text).to.eql(\"点击开始\");",
                      "    pm.expect(jsonData.data.fields[1].property.style.color.value).to.eql(\"#B0A4F5\");    ",
                      "    pm.expect(jsonData.data.fields[1].property.style.type).to.eql(\"Background\");",
                      "    pm.expect(jsonData.data.fields[1].property.action.openLink.type).to.eql(\"Expression\");",
                      "",
                      "    pm.expect(jsonData.data.fields[2].type).to.eql(\"Button\");",
                      "    pm.expect(jsonData.data.fields[2].property.text).to.eql(\"点击开始\");",
                      "    pm.expect(jsonData.data.fields[2].property.style.type).to.eql(\"Background\");",
                      "    pm.expect(jsonData.data.fields[2].property.action.openLink.type).to.eql(\"Url\");",
                      "    pm.expect(jsonData.data.fields[2].property.action.openLink.expression).to.eql(\"https://www.baidu.com\");",
                      "",
                      "    pm.expect(jsonData.data.fields[3].type).to.eql(\"Button\");",
                      "    pm.expect(jsonData.data.fields[3].property.text).to.eql(\"点击开始\");",
                      "    pm.expect(jsonData.data.fields[3].property.style.type).to.eql(\"Background\");",
                      "    pm.expect(jsonData.data.fields[3].property.action.openLink.type).to.eql(\"Expression\");",
                      "    pm.expect(jsonData.data.fields[3].property.action.openLink.expression).to.eql(\"{创建表-创建按钮列}\");",
                      "",
                      "    pm.expect(jsonData.data.fields[4].type).to.eql(\"Button\");",
                      "    pm.expect(jsonData.data.fields[4].property.text).to.eql(\"点击开始\");",
                      "    pm.expect(jsonData.data.fields[4].property.style.color.name).to.eql(\"red_4\");",
                      "    pm.expect(jsonData.data.fields[4].property.action.openLink.type).to.eql(\"Expression\");",
                      "",
                      "    pm.expect(jsonData.data.fields[5].type).to.eql(\"Button\");",
                      "    pm.expect(jsonData.data.fields[5].property.text).to.eql(\"点击开始\");",
                      "    pm.expect(jsonData.data.fields[5].property.style.type).to.eql(\"OnlyText\");",
                      "    pm.expect(jsonData.data.fields[5].property.action.openLink.type).to.eql(\"Expression\");",
                      "",
                      "    pm.expect(jsonData.data.fields[6].type).to.eql(\"Button\");",
                      "    pm.expect(jsonData.data.fields[6].property.text).to.eql(\"非默认文案\");",
                      "    pm.expect(jsonData.data.fields[6].property.style.type).to.eql(\"OnlyText\");",
                      "    pm.expect(jsonData.data.fields[6].property.action.openLink.type).to.eql(\"Expression\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{datasheets_ID}}/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询记录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询记录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.records[0].fields).to.eql({});",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/{{datasheets_ID}}/records?fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "{{datasheets_ID}}",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除表",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除表\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/{{datasheets_ID}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "{{datasheets_ID}}"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.collectionVariables.set(\"folder_nodeId\", \"fodasJYwNjHsS\");",
                  "pm.collectionVariables.set(\"spaceId\", \"spcJUmH65y9FE\");",
                  "pm.collectionVariables.set(\"automationId\", \"autLnHQBW842JlSE6s\");",
                  "pm.collectionVariables.set(\"triggerId\", \"\");"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Automation Node",
          "item": [
            {
              "name": "获取文件节点详情",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取文件节点详情\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.name).to.eql(\"新建自动化\");",
                      "    pm.expect(jsonData.data.type).to.eql(\"Automation\");",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/{{spacesId}}/nodes/{{automation_nodeId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "{{spacesId}}",
                    "nodes",
                    "{{automation_nodeId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "搜索文件节点",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"搜索文件节点\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.nodes[0].name).to.eql(\"新建自动化\");",
                      "    pm.expect(jsonData.data.nodes[0].type).to.eql(\"Automation\");",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v2/spaces/{{spacesId}}/nodes?type=Automation",
                  "host": ["{{baseURL}}"],
                  "path": ["fusion", "v2", "spaces", "{{spacesId}}", "nodes"],
                  "query": [
                    {
                      "key": "type",
                      "value": "Automation"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.collectionVariables.set(\"spacesId\", \"spcX8aQFF6obE\");",
                  "pm.collectionVariables.set(\"automation_nodeId\", \"autRSGoPAg8N5PKxvg\");"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "workdocapi",
          "item": [
            {
              "name": "创建workdoc字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); \r",
                      "//获取接口返回json参数值存储在jsondata变量中\r",
                      "pm.test(\"http状态码201判断\", function () { //http状态码等于200判断\r",
                      "     pm.response.to.have.status(201);\r",
                      "     pm.expect(jsonData.success).to.eql(true); \r",
                      "     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "\r",
                      " pm.test(\"判断接口返回数据中字段名称等于轻文档\", function () {\r",
                      "     pm.expect(jsonData.data.name).to.eql(\"轻文档\");\r",
                      " });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n \"type\": \"WorkDoc\",\r\n \"name\": \"轻文档\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/datasheets/dstckSsS4MBeUzUF3l/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "datasheets",
                    "dstckSsS4MBeUzUF3l",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取workdoc字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "const jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"workdoc\", jsonData.data.fields[1].id);\r",
                      "pm.test(\"http状态码201判断\", function () { //http状态码等于200判断\r",
                      "     pm.response.to.have.status(200);\r",
                      "     pm.expect(jsonData.success).to.eql(true); \r",
                      "     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "\r",
                      " pm.test(\"判断接口返回数据中字段名称等于轻文档\", function () {\r",
                      "     pm.expect(jsonData.data.fields[1].name).to.eql(\"轻文档\");\r",
                      "      pm.expect(jsonData.data.fields[1].type).to.eql(\"WorkDoc\");\r",
                      " });\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dstckSsS4MBeUzUF3l/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dstckSsS4MBeUzUF3l",
                    "fields"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除workdoc字段",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); \r",
                      "//获取接口返回json参数值存储在jsondata变量中\r",
                      " pm.test(\"判断接口返回数据中字段名称等于轻文档\", function () {\r",
                      "     pm.expect(jsonData.success).to.eql(true);\r",
                      "     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      " });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {你的 API Token}"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/spaces/spcrMy6a6xuqZ/datasheets/dstckSsS4MBeUzUF3l/fields/{{workdoc}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "spaces",
                    "spcrMy6a6xuqZ",
                    "datasheets",
                    "dstckSsS4MBeUzUF3l",
                    "fields",
                    "{{workdoc}}"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Cascader",
          "item": [
            {
              "name": "查询记录-多级联动",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询记录-多级联动\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.records[0].fields.多级联动12345).to.eql(\"张三/\\b法外狂徒 不换行/法外狂徒/A, C/18\");",
                      "    pm.expect(jsonData.data.records[0].fields.多级联动6781011).to.eql(\"¥100.00/10%/2021/01/01/易可可Coco/1\");",
                      "    pm.expect(jsonData.data.records[0].fields.多级联动1213141517).to.eql(\"5/https://vika.cn/1/+86-123-0000-0001/zhangsan@vikadata.com/路人\");",
                      "    pm.expect(jsonData.data.records[0].fields.多级联动不显示完整层级).to.eql(\"易可可Coco\");",
                      "",
                      "    pm.expect(jsonData.data.records[1].fields.多级联动12345).to.eql(\"李四/法外狂徒  换行了/路人/A, B/19\");",
                      "    pm.expect(jsonData.data.records[1].fields.多级联动6781011).to.eql(\"¥200.00/20%/2021/02/28/钟梓烨\");",
                      "    pm.expect(jsonData.data.records[1].fields.多级联动1213141517).to.eql(\"10/https://vika.cn/3/+86-123-0000-0003/lihua@vikadata.com/法外狂徒\");",
                      "    pm.expect(jsonData.data.records[1].fields.多级联动不显示完整层级).to.eql(\"钟梓烨\");",
                      "",
                      "    pm.expect(jsonData.data.records[2].fields.多级联动12345).to.eql(\"李华/法外狂徒  换行了/笔友/A, C/20\");",
                      "    pm.expect(jsonData.data.records[2].fields.多级联动6781011).to.eql(\"¥300.00/30%/2021/12/31/zx-钉钉/1\");",
                      "    pm.expect(jsonData.data.records[2].fields.多级联动1213141517).to.eql();",
                      "    pm.expect(jsonData.data.records[2].fields.多级联动不显示完整层级).to.eql(\"zx-钉钉\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst0anVMEEM8b002Eq/records?viewId=viwJaGWTLt36A&fieldKey=name",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst0anVMEEM8b002Eq",
                    "records"
                  ],
                  "query": [
                    {
                      "key": "viewId",
                      "value": "viwJaGWTLt36A"
                    },
                    {
                      "key": "fieldKey",
                      "value": "name"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询列-多级联动",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询列-多级联动\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "",
                      "    pm.expect(jsonData.data.fields[1].type).to.eql(\"Cascader\");",
                      "    pm.expect(jsonData.data.fields[1].name).to.eql(\"多级联动12345\");",
                      "    pm.expect(jsonData.data.fields[1].property.showAll).to.eql(true);",
                      "    pm.expect(jsonData.data.fields[1].property.linkedDatasheetId).to.eql(\"dstjw2kcS2Tp3LJYGx\");",
                      "    pm.expect(jsonData.data.fields[1].property.linkedViewId).to.eql(\"viwaK7mLQ6guA\");",
                      "    pm.expect(jsonData.data.fields[1].property.linkedFields).to.eql([",
                      "    {",
                      "        \"id\": \"fldoS2hXJEP1J\",",
                      "        \"name\": \"1单行文本\",",
                      "        \"type\": 19",
                      "    },",
                      "    {",
                      "        \"id\": \"fldzGQlWbpStw\",",
                      "        \"name\": \"2多行文本\",",
                      "        \"type\": 1",
                      "    },",
                      "    {",
                      "        \"id\": \"fldt2HL7lgmZs\",",
                      "        \"name\": \"3单选\",",
                      "        \"type\": 3",
                      "    },",
                      "    {",
                      "        \"id\": \"fldNyyvdLCdHV\",",
                      "        \"name\": \"4多选\",",
                      "        \"type\": 4",
                      "    },",
                      "    {",
                      "        \"id\": \"fldjubuQBFzXM\",",
                      "        \"name\": \"5数字\",",
                      "        \"type\": 2",
                      "    }",
                      "]);",
                      "",
                      "    pm.expect(jsonData.data.fields[2].type).to.eql(\"Cascader\");",
                      "    pm.expect(jsonData.data.fields[2].name).to.eql(\"多级联动6781011\");",
                      "    pm.expect(jsonData.data.fields[1].property.showAll).to.eql(true);",
                      "    pm.expect(jsonData.data.fields[2].property.linkedDatasheetId).to.eql(\"dstjw2kcS2Tp3LJYGx\");",
                      "    pm.expect(jsonData.data.fields[2].property.linkedViewId).to.eql(\"viwaK7mLQ6guA\");",
                      "    pm.expect(jsonData.data.fields[2].property.linkedFields).to.eql([",
                      "    {",
                      "        \"id\": \"flddYrBwSSpCe\",",
                      "        \"name\": \"6货币\",",
                      "        \"type\": 17",
                      "    },",
                      "    {",
                      "        \"id\": \"fldqEJq79xELT\",",
                      "        \"name\": \"7百分比\",",
                      "        \"type\": 18",
                      "    },",
                      "    {",
                      "        \"id\": \"fldmPUwWwu9kB\",",
                      "        \"name\": \"8日期\",",
                      "        \"type\": 5",
                      "    },",
                      "    {",
                      "        \"id\": \"fldvB1HNqnaqR\",",
                      "        \"name\": \"10成员\",",
                      "        \"type\": 13",
                      "    },",
                      "    {",
                      "        \"id\": \"fldvBy2x1qZHc\",",
                      "        \"name\": \"11勾选\",",
                      "        \"type\": 11",
                      "    }",
                      "]);",
                      "",
                      "    pm.expect(jsonData.data.fields[3].type).to.eql(\"Cascader\");",
                      "    pm.expect(jsonData.data.fields[3].name).to.eql(\"多级联动1213141517\");",
                      "    pm.expect(jsonData.data.fields[1].property.showAll).to.eql(true);",
                      "    pm.expect(jsonData.data.fields[3].property.linkedDatasheetId).to.eql(\"dstjw2kcS2Tp3LJYGx\");",
                      "    pm.expect(jsonData.data.fields[3].property.linkedViewId).to.eql(\"viwaK7mLQ6guA\");",
                      "    pm.expect(jsonData.data.fields[3].property.linkedFields).to.eql([",
                      "    {",
                      "        \"id\": \"fldXCuPxnufWe\",",
                      "        \"name\": \"12评分\",",
                      "        \"type\": 12",
                      "    },",
                      "    {",
                      "        \"id\": \"fld88OxNH9zi2\",",
                      "        \"name\": \"13网址\",",
                      "        \"type\": 8",
                      "    },",
                      "    {",
                      "        \"id\": \"fldupFf8XUXLB\",",
                      "        \"name\": \"14电话\",",
                      "        \"type\": 10",
                      "    },",
                      "    {",
                      "        \"id\": \"fldJyI3RxEYwZ\",",
                      "        \"name\": \"15邮箱\",",
                      "        \"type\": 9",
                      "    },",
                      "    {",
                      "        \"id\": \"fldyNk5bJxEil\",",
                      "        \"name\": \"17神奇引用\",",
                      "        \"type\": 1",
                      "    }",
                      "]);",
                      "",
                      "    pm.expect(jsonData.data.fields[4].type).to.eql(\"Cascader\");",
                      "    pm.expect(jsonData.data.fields[4].name).to.eql(\"多级联动不显示完整层级\");",
                      "    pm.expect(jsonData.data.fields[1].property.showAll).to.eql(false);",
                      "    pm.expect(jsonData.data.fields[4].property.linkedDatasheetId).to.eql(\"dstjw2kcS2Tp3LJYGx\");",
                      "    pm.expect(jsonData.data.fields[4].property.linkedViewId).to.eql(\"viwaK7mLQ6guA\");",
                      "    pm.expect(jsonData.data.fields[4].property.linkedFields).to.eql([",
                      "    {",
                      "        \"id\": \"fldzGQlWbpStw\",",
                      "        \"name\": \"2多行文本\",",
                      "        \"type\": 1",
                      "    },",
                      "    {",
                      "        \"id\": \"fldoS2hXJEP1J\",",
                      "        \"name\": \"1单行文本\",",
                      "        \"type\": 19",
                      "    },",
                      "    {",
                      "        \"id\": \"fldvB1HNqnaqR\",",
                      "        \"name\": \"10成员\",",
                      "        \"type\": 13",
                      "    }",
                      "]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/fusion/v1/datasheets/dst0anVMEEM8b002Eq/fields",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "fusion",
                    "v1",
                    "datasheets",
                    "dst0anVMEEM8b002Eq",
                    "fields"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "javaapitest",
      "item": [
        {
          "name": "附件资源相关接口",
          "item": [
            {
              "name": "获取资源信息》token值正确",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                      " pm.expect(jsonData.code).to.eql(200);//返回状态判断\r",
                      "    pm.expect(jsonData.success).to.eql(true); //返回结果判断\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "pm.test(\"判断返回的token值是否与传入的token值一致\", function () {\r",
                      "    pm.expect(jsonData.data.token).to.eql(\"space/2022/10/07/a12fe9dd15c245878bcd219b71c1ffeb\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/asset/get?token=space/2022/10/07/a12fe9dd15c245878bcd219b71c1ffeb",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "asset", "get"],
                  "query": [
                    {
                      "key": "token",
                      "value": "space/2022/10/07/a12fe9dd15c245878bcd219b71c1ffeb"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取资源信息》token值错误或为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                      "pm.test(\"token值错误\", function () {\r",
                      "   pm.expect(jsonData.success).to.eql(false);\r",
                      "   pm.expect(jsonData.code).to.eql(500);\r",
                      "   pm.expect(jsonData.message).to.eql(\"resource don't exist\")\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/asset/get?token=space/2022/10/07/a12fe9dd15c245878bcd219b71c1ffeb1",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "asset", "get"],
                  "query": [
                    {
                      "key": "token",
                      "value": "space/2022/10/07/a12fe9dd15c245878bcd219b71c1ffeb1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取上传预签名URL》nodeid和count专值正确",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                      "pm.test(\"nodeID值正确\", function () {\r",
                      "   pm.expect(jsonData.success).to.eql(true);\r",
                      "   pm.expect(jsonData.code).to.eql(200);\r",
                      "   pm.expect(jsonData.message).to.eql(\"SUCCESS\")\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/asset/upload/preSignedUrl?nodeId=dstrJqfuicTNE2sEys&count=1",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "asset",
                    "upload",
                    "preSignedUrl"
                  ],
                  "query": [
                    {
                      "key": "nodeId",
                      "value": "dstrJqfuicTNE2sEys"
                    },
                    {
                      "key": "count",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取上传预签名URL》count为空",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/asset/upload/preSignedUrl?nodeId=dstrJqfuicTNE2sEys",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "asset",
                    "upload",
                    "preSignedUrl"
                  ],
                  "query": [
                    {
                      "key": "nodeId",
                      "value": "dstrJqfuicTNE2sEys"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "商店模块相关接口",
          "item": [
            {
              "name": "商店模块相关接口》获取产品的价目表",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json(); //获取所有返回参数存储在jsondata变量中\r",
                      "pm.test(\"白银级商品\", function () {\r",
                      "   pm.expect(jsonData.success).to.eql(true);\r",
                      "   pm.expect(jsonData.code).to.eql(200);\r",
                      "   pm.expect(jsonData.message).to.eql(\"SUCCESS\")\r",
                      "});\r",
                      "pm.test(\"产品等于白银级\", function () {\r",
                      "    pm.expect(jsonData.data[0].product).to.eql(\"SILVER\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/shop/prices?product=SILVER",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "shop", "prices"],
                  "query": [
                    {
                      "key": "product",
                      "value": "SILVER"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "附件上传Token接口",
          "item": [
            {
              "name": "附件上传Token接口》获取上传预签名URL",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
                    "key": "Authorization",
                    "value": "Bearer usk2Kl1RHN6ueEqb4sMZ2MB",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"count\":1,\r\n  \"data\":\"FutureIsComing\",\r\n  \"nodeId\":\"fodfTtDRCgQSo\",\r\n  \"type\":2\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/asset/upload/preSignedUrl",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "asset", "upload", "preSignedUrl"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "内部服务-企微接口",
          "item": [
            {
              "name": "批量处理待处理的接口许可延时信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/social/wecom/permitDelay/batchProcess",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "social",
                    "wecom",
                    "permitDelay",
                    "batchProcess"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "内部服务-字段服务接口",
          "item": [
            {
              "name": "获取带title的URL相关信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回title为百度一下，你就知道\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.contents['https://www.baidu.com'].title).to.eql(\"百度一下，你就知道\");\r",
                      "});\r",
                      "pm.test(\"返回isAware为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.contents['https://www.baidu.com'].isAware).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"urls\": [\"https://www.baidu.com\"]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/field/url/awareContents",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "field",
                    "url",
                    "awareContents"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取不带title的URL相关信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回title为null\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.contents['https://vikadata.feishu.cn/docs/doccnGFApTZI2iGlz5SjqZcMk8Z'].title).to.eql(null);\r",
                      "});\r",
                      "pm.test(\"返回isAware为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.contents['https://vikadata.feishu.cn/docs/doccnGFApTZI2iGlz5SjqZcMk8Z'].isAware).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"urls\": [\"https://vikadata.feishu.cn/docs/doccnGFApTZI2iGlz5SjqZcMk8Z\"]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/field/url/awareContents",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "field",
                    "url",
                    "awareContents"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取错误的网址URL相关信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回title为null\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.contents['https://www.baidubaidu.com'].title).to.eql(null);\r",
                      "});\r",
                      "pm.test(\"返回isAware为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.contents['https://www.baidubaidu.com'].isAware).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"urls\": [\"https://www.baidubaidu.com\"]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/field/url/awareContents",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "field",
                    "url",
                    "awareContents"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "内部服务-空间接口",
          "item": [
            {
              "name": "内部服务-数表字段权限接口",
              "item": [
                {
                  "name": "关闭多个字段权限",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回data为null\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data).to.eql(null);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "dstId",
                          "value": "dstja9s0lSk9azMZKg",
                          "type": "text"
                        },
                        {
                          "key": "fieldIds",
                          "value": "fldDBhH237rLr",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/internal/datasheet/{dstId}/field/permission/disable",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "internal",
                        "datasheet",
                        "{dstId}",
                        "field",
                        "permission",
                        "disable"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取多个节点的字段权限集",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回nodeId、datasheetId显示正确\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                          "    pm.expect(jsonData.data[0].datasheetId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                          "});\r",
                          "pm.test(\"返回fieldId显示正确\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data[0].fieldPermissionMap[\"fldDBhH237rLr\"].fieldId).to.eql(\"fldDBhH237rLr\");\r",
                          "    pm.expect(jsonData.data[1].fieldPermissionMap[\"fldDBhH237rLr\"].fieldId).to.eql(\"fldDBhH237rLr\");\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeIds\": [\"fomxr4MQcf11dvyAUk\",\"dstja9s0lSk9azMZKg\"],\r\n  \"shareId\": \"shrmXk7mQMiXGAE7vxlrB\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/internal/node/field/permission",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "internal",
                        "node",
                        "field",
                        "permission"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取字段权限",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"返回message为SUCCESS\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "});\r",
                          "pm.test(\"返回success为true\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "});\r",
                          "pm.test(\"返回nodeId、datasheetId显示正确\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.nodeId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                          "    pm.expect(jsonData.data.datasheetId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                          "});\r",
                          "pm.test(\"返回fieldId显示正确\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.data.fieldPermissionMap[\"fldDBhH237rLr\"].fieldId).to.eql(\"fldDBhH237rLr\");\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk6zWnpR8ReurmO10qdr51",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": []
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/internal/node/dstja9s0lSk9azMZKg/field/permission?shareId=shrmXk7mQMiXGAE7vxlrB",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "internal",
                        "node",
                        "dstja9s0lSk9azMZKg",
                        "field",
                        "permission"
                      ],
                      "query": [
                        {
                          "key": "shareId",
                          "value": "shrmXk7mQMiXGAE7vxlrB"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "获取指定空间的API用量信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"返回状态为成功\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.success).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回isAllowOverLimit为true\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.isAllowOverLimit).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回api使用上限为10000\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.maxApiUsageCount).to.eql(10000);\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/space/spcyrxsnS0983/apiUsages",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "space",
                    "spcyrxsnS0983",
                    "apiUsages"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取空间的附件容量信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回isAllowOverLimit为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.isAllowOverLimit).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回附件使用上限为1G\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.currentBundleCapacity).to.eql(1073741824);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/space/spcyrxsnS0983/capacity",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "space",
                    "spcyrxsnS0983",
                    "capacity"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取空间的订阅信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回单个表最大行数为5000\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.maxRowsPerSheet).to.eql(5000);\r",
                      "});\r",
                      "pm.test(\"返回空间站最大行数为20000\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.maxRowsInSpace).to.eql(20000);\r",
                      "});\r",
                      "pm.test(\"返回最大日历视图数量为5\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.maxCalendarViewsInSpace).to.eql(5);\r",
                      "});\r",
                      "pm.test(\"返回最大甘特视图数量为10\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.maxGanttViewsInSpace).to.eql(10);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/space/spcyrxsnS0983/subscription",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "space",
                    "spcyrxsnS0983",
                    "subscription"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取空间的用量信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回空间所有表总行数为127\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.recordNums).to.eql(130);\r",
                      "});\r",
                      "pm.test(\"返回日历视图总数为1\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.calendarViewNums).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"返回甘特视图总数为0\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.ganttViewNums).to.eql(0);\r",
                      "});\r",
                      "pm.test(\"返回相册视图总数为1\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.galleryViewNums).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"返回看板视图总数为1\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.kanbanViewNums).to.eql(1);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/space/spcyrxsnS0983/usages",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "space",
                    "spcyrxsnS0983",
                    "usages"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "内部服务-节点权限接口",
          "item": [
            {
              "name": "获取多个节点的权限集",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回nodeId、datasheetId显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                      "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fomxr4MQcf11dvyAUk\");\r",
                      "    pm.expect(jsonData.data[0].datasheetId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                      "});\r",
                      "pm.test(\"返回可设置节点允许他人编辑状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].allowEditConfigurable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可设置节点允许他人保存状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].allowSaveConfigurable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑单元格状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].cellEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可以创建子节点状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].childCreatable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑列统计状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].columnCountEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回隐藏列状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].columnHideable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回排序列状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].columnSortable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑列宽状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].columnWidthEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可复制节点状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].copyable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可节点描述编辑状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].descriptionEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可编辑的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].editable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可导出的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].exportable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回新增字段状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldCreatable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回分组状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldGroupable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回是否可以管理列权限状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldPermissionManageable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑字段属性状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldPropertyEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回删除字段状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldRemovable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回重命名字段状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldRenamable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑列顺序状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].fieldSortable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回是否拥有权限状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].hasRole).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可编辑图标的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].iconEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可导入的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].importable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回是否是幽灵节点状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].isGhostNode).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回可管理的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].manageable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可移动节点状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].movable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回节点是否是星标\t状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].nodeFavorite).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回可查看的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].readable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可删除节点状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].removable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可重命名的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].renamable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回角色的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].role).to.eql(\"manager\");\r",
                      "});\r",
                      "pm.test(\"返回新增行的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].rowCreatable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑行高的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].rowHighEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回删除行的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].rowRemovable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回行排序的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].rowSortable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可允许分享节点的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].sharable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回可创建为模板的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].templateCreatable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑视图颜色选项的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewColorOptionEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回新增视图的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewCreatable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回导出视图的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewExportable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回筛选列的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewFilterable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑视图关键字段的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewKeyFieldEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑视图布局的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewLayoutEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回视图锁定可管理的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewLockManageable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回视图手动保存可管理的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewManualSaveManageable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回移动视图的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewMovable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回视图选项保存可编辑的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewOptionSaveEditable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回删除视图的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewRemovable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回重命名视图的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewRenamable).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回编辑视图样式的状态显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].viewStyleEditable).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"nodeIds\": [\"fomxr4MQcf11dvyAUk\",\"dstja9s0lSk9azMZKg\"],\r\n  \"shareId\": \"shrmXk7mQMiXGAE7vxlrB\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/node/permission",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "node", "permission"]
                }
              },
              "response": []
            },
            {
              "name": "获取节点的权限",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// pm.test(\"Status code is 200\", function () {\r",
                      "//     pm.response.to.have.status(200);\r",
                      "// });\r",
                      "// pm.test(\"返回message为SUCCESS\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "// });\r",
                      "// pm.test(\"返回nodeId、datasheetId显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.nodeId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                      "//     pm.expect(jsonData.data.datasheetId).to.eql(\"dstja9s0lSk9azMZKg\");\r",
                      "// });\r",
                      "// pm.test(\"返回可设置节点允许他人编辑状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.allowEditConfigurable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可设置节点允许他人保存状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.allowSaveConfigurable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑单元格状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.cellEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可以创建子节点状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.childCreatable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑列统计状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.columnCountEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回隐藏列状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.columnHideable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回排序列状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.columnSortable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑列宽状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.columnWidthEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可复制节点状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.copyable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可节点描述编辑状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.descriptionEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可编辑的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.editable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可导出的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.exportable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回新增字段状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldCreatable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回分组状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldGroupable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回是否可以管理列权限状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldPermissionManageable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑字段属性状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldPropertyEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回删除字段状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldRemovable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回重命名字段状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldRenamable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑列顺序状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.fieldSortable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回是否拥有权限状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.hasRole).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可编辑图标的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.iconEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可导入的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.importable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回是否是幽灵节点状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.isGhostNode).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回可管理的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.manageable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可移动节点状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.movable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回节点是否是星标\t状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.nodeFavorite).to.eql(false);\r",
                      "// });\r",
                      "// pm.test(\"返回可查看的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.readable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可删除节点状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.removable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可重命名的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.renamable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回角色的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.role).to.eql(\"manager\");\r",
                      "// });\r",
                      "// pm.test(\"返回新增行的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.rowCreatable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑行高的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.rowHighEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回删除行的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.rowRemovable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回行排序的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.rowSortable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可允许分享节点的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.sharable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回可创建为模板的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.templateCreatable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑视图颜色选项的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewColorOptionEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回新增视图的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewCreatable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回导出视图的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewExportable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回筛选列的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewFilterable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑视图关键字段的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewKeyFieldEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑视图布局的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewLayoutEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回视图锁定可管理的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewLockManageable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回视图手动保存可管理的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewManualSaveManageable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回移动视图的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewMovable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回视图选项保存可编辑的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewOptionSaveEditable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回删除视图的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewRemovable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回重命名视图的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewRenamable).to.eql(true);\r",
                      "// });\r",
                      "// pm.test(\"返回编辑视图样式的状态显示正确\", function () {\r",
                      "//     var jsonData = pm.response.json();\r",
                      "//     pm.expect(jsonData.data.viewStyleEditable).to.eql(true);\r",
                      "// });"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/node/dstja9s0lSk9azMZKg/permission",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "node",
                    "dstja9s0lSk9azMZKg",
                    "permission"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "工作台模块_节点管理接口",
          "item": [
            {
              "name": "记录活跃节点",
              "item": [
                {
                  "name": "记录活跃的节点》nodeId为文件夹",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId为文件夹\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "{{X-Space-Id}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"fodnDu0RgYP24\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》nodeId为表格",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId为表格\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"dstnr7dUqAvmKzLaZZ\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》nodeId为表单",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId为表单\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"fom7AUYl2XB0dVryeL\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》nodeId为镜像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId为镜像\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"mirayB5JtB8uJFw10n\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》nodeId为仪表盘",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId为仪表盘\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"dsbt8kgrJVCMHLRPKr\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》body为空",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》body为空\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》nodeId为空",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId为空\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);    ",
                          "    pm.expect(jsonData.code).to.eql(600);",
                          "    // pm.expect(jsonData.message).to.eql(\"node does not exist\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》nodeId不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》nodeId不存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);    ",
                          "    pm.expect(jsonData.code).to.eql(600);",
                          "    // pm.expect(jsonData.message).to.eql(\"node does not exist\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"dstxxxxxxxxx\",\n  \"viewId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》viewId不为空",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》viewId不为空\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"dstnr7dUqAvmKzLaZZ\",\n  \"viewId\": \"viwADpgkPEID6\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "记录活跃的节点》viewId不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"记录活跃的节点》viewId不存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);    ",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "{{X-Space-Id}}",
                        "value": "",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"nodeId\": \"dstnr7dUqAvmKzLaZZ\",\n  \"viewId\": \"viwxxxxxxxx\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/active",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "active"]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.collectionVariables.set(\"X-Space-Id\", \"spcJUmH65y9FE\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "查询子节点",
              "item": [
                {
                  "name": "查询子节点》文件夹下没有子节点",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》文件夹下没有子节点\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "    pm.expect(jsonData.data).to.be.eql([]);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodWwtM71PeZ0&nodeType=",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodWwtM71PeZ0"
                        },
                        {
                          "key": "nodeType",
                          "value": ""
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》文件夹下有子节点",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》文件夹下有子节点\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fodWwtM71PeZ0\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"文件夹\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(1);\r",
                          "    pm.expect(jsonData.data[0].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"dstnr7dUqAvmKzLaZZ\");\r",
                          "    pm.expect(jsonData.data[1].nodeName).to.eql(\"表格\");\r",
                          "    pm.expect(jsonData.data[1].type).to.eql(2);\r",
                          "    pm.expect(jsonData.data[1].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[1].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[2].nodeId).to.eql(\"mirayB5JtB8uJFw10n\");\r",
                          "    pm.expect(jsonData.data[2].nodeName).to.eql(\"镜像\");\r",
                          "    pm.expect(jsonData.data[2].type).to.eql(5);\r",
                          "    pm.expect(jsonData.data[2].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[2].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[3].nodeId).to.eql(\"fom7AUYl2XB0dVryeL\");\r",
                          "    pm.expect(jsonData.data[3].nodeName).to.eql(\"表单\");\r",
                          "    pm.expect(jsonData.data[3].type).to.eql(3);\r",
                          "    pm.expect(jsonData.data[3].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[3].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[4].nodeId).to.eql(\"dsbt8kgrJVCMHLRPKr\");\r",
                          "    pm.expect(jsonData.data[4].nodeName).to.eql(\"仪表盘\");\r",
                          "    pm.expect(jsonData.data[4].type).to.eql(4);\r",
                          "    pm.expect(jsonData.data[4].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[4].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodnDu0RgYP24&nodeType=",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodnDu0RgYP24"
                        },
                        {
                          "key": "nodeType",
                          "value": ""
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》nodeId为空或不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》nodeId为空或不存在\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(false);\r",
                          "    pm.expect(jsonData.code).to.eql(600);\r",
                          "    // pm.expect(jsonData.message).to.eql(\"node does not exist\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=&nodeType=",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": ""
                        },
                        {
                          "key": "nodeType",
                          "value": ""
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》nodeType为folder",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》nodeType为folder\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fodWwtM71PeZ0\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"文件夹\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(1);\r",
                          "    pm.expect(jsonData.data[0].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodnDu0RgYP24&nodeType=1",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodnDu0RgYP24"
                        },
                        {
                          "key": "nodeType",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》nodeType为datasheet",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》nodeType为datasheet\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dstnr7dUqAvmKzLaZZ\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"表格\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(2);\r",
                          "    pm.expect(jsonData.data[0].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodnDu0RgYP24&nodeType=2",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodnDu0RgYP24"
                        },
                        {
                          "key": "nodeType",
                          "value": "2"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》nodeType为form",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》nodeType为form\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fom7AUYl2XB0dVryeL\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"表单\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(3);\r",
                          "    pm.expect(jsonData.data[0].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodnDu0RgYP24&nodeType=3",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodnDu0RgYP24"
                        },
                        {
                          "key": "nodeType",
                          "value": "3"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》nodeType为dash-board",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》nodeType为dash-board\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dsbt8kgrJVCMHLRPKr\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"仪表盘\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(4);\r",
                          "    pm.expect(jsonData.data[0].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodnDu0RgYP24&nodeType=4",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodnDu0RgYP24"
                        },
                        {
                          "key": "nodeType",
                          "value": "4"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询子节点》nodeType为mirror",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询子节点》nodeType为mirror\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"mirayB5JtB8uJFw10n\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"镜像\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(5);\r",
                          "    pm.expect(jsonData.data[0].spaceId).to.eql(\"spcJUmH65y9FE\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodnDu0RgYP24\");\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/children?nodeId=fodnDu0RgYP24&nodeType=5",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "children"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodnDu0RgYP24"
                        },
                        {
                          "key": "nodeType",
                          "value": "5"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "复制节点",
              "item": [
                {
                  "name": "复制节点》data为true",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"复制节点》data为true\", function () {\r",
                          "    var nodeId;\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"新建维格表\");\r",
                          "    pm.expect(jsonData.data.type).to.eql(2);\r",
                          "    console.log(jsonData.data.nodeId)\r",
                          "\r",
                          "    nodeId = jsonData.data.nodeId;\r",
                          "\r",
                          "    // 删除所复制的文件，以免影响下次回归的断言结果\r",
                          "    var environmentURL =pm.environment.get(\"baseURL\"); \r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/delete/' + nodeId,\r",
                          "        method: 'POST',\r",
                          "        header: \r",
                          "            ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],\r",
                          "        body: {\r",
                          "            mode: 'none'\r",
                          "        }\r",
                          "    };\r",
                          "\r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "        console.log(response.json());\r",
                          "    });\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"data\": true,\r\n  \"nodeId\": \"dstR7Poc1kZbu7UE5d\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/copy?X-Socket-Id=spcJUmH65y9FE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "copy"],
                      "query": [
                        {
                          "key": "X-Socket-Id",
                          "value": "spcJUmH65y9FE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "复制节点》data为false",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"复制节点》data为false\", function () {\r",
                          "    var nodeId;\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"新建维格表\");\r",
                          "    pm.expect(jsonData.data.type).to.eql(2);\r",
                          "    console.log(jsonData.data.nodeId)\r",
                          "\r",
                          "    nodeId = jsonData.data.nodeId;\r",
                          "\r",
                          "    // 删除所复制的文件，以免影响下次回归的断言结果\r",
                          "    var environmentURL =pm.environment.get(\"baseURL\"); \r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/delete/' + nodeId,\r",
                          "        method: 'POST',\r",
                          "        header: \r",
                          "            ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],\r",
                          "        body: {\r",
                          "            mode: 'none'\r",
                          "        }\r",
                          "    };\r",
                          "\r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "        console.log(response.json());\r",
                          "    });\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"data\": false,\r\n  \"nodeId\": \"dstR7Poc1kZbu7UE5d\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/copy?X-Socket-Id=spcJUmH65y9FE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "copy"],
                      "query": [
                        {
                          "key": "X-Socket-Id",
                          "value": "spcJUmH65y9FE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "复制节点》nodeId为表单",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"复制节点》nodeId为表单\", function () {\r",
                          "    var nodeId;\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"神奇表单\");\r",
                          "    pm.expect(jsonData.data.type).to.eql(3);\r",
                          "    console.log(jsonData.data.nodeId)\r",
                          "\r",
                          "    nodeId = jsonData.data.nodeId;\r",
                          "\r",
                          "    // 删除所复制的文件，以免影响下次回归的断言结果\r",
                          "    var environmentURL =pm.environment.get(\"baseURL\"); \r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/delete/' + nodeId,\r",
                          "        method: 'POST',\r",
                          "        header: \r",
                          "            ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],\r",
                          "        body: {\r",
                          "            mode: 'none'\r",
                          "        }\r",
                          "    };\r",
                          "\r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "        console.log(response.json());\r",
                          "    });\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"data\": false,\r\n  \"nodeId\": \"fomG2Bag3adqE4L3wv\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/copy?X-Socket-Id=spcJUmH65y9FE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "copy"],
                      "query": [
                        {
                          "key": "X-Socket-Id",
                          "value": "spcJUmH65y9FE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "复制节点》nodeId为仪表盘",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"复制节点》nodeId为仪表盘\", function () {\r",
                          "    var nodeId;\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"新建仪表盘\");\r",
                          "    pm.expect(jsonData.data.type).to.eql(4);\r",
                          "    console.log(jsonData.data.nodeId)\r",
                          "\r",
                          "    nodeId = jsonData.data.nodeId;\r",
                          "\r",
                          "    // 删除所复制的文件，以免影响下次回归的断言结果\r",
                          "    var environmentURL =pm.environment.get(\"baseURL\"); \r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/delete/' + nodeId,\r",
                          "        method: 'POST',\r",
                          "        header: \r",
                          "            ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],\r",
                          "        body: {\r",
                          "            mode: 'none'\r",
                          "        }\r",
                          "    };\r",
                          "\r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "        console.log(response.json());\r",
                          "    });\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"data\": false,\r\n  \"nodeId\": \"dsbFS2D0QcAz6Vv1FT\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/copy?X-Socket-Id=spcJUmH65y9FE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "copy"],
                      "query": [
                        {
                          "key": "X-Socket-Id",
                          "value": "spcJUmH65y9FE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "复制节点》nodeId为镜像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"复制节点》nodeId为镜像\", function () {\r",
                          "    var nodeId;\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"镜像\");\r",
                          "    pm.expect(jsonData.data.type).to.eql(5);\r",
                          "    console.log(jsonData.data.nodeId)\r",
                          "\r",
                          "    nodeId = jsonData.data.nodeId;\r",
                          "\r",
                          "    // 删除所复制的文件，以免影响下次回归的断言结果\r",
                          "    var environmentURL =pm.environment.get(\"baseURL\"); \r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/delete/' + nodeId,\r",
                          "        method: 'POST',\r",
                          "        header: \r",
                          "            ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],\r",
                          "        body: {\r",
                          "            mode: 'none'\r",
                          "        }\r",
                          "    };\r",
                          "\r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "        console.log(response.json());\r",
                          "    });\r",
                          "\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"data\": false,\r\n  \"nodeId\": \"mirPft96LNnpJ3wvNN\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/copy?X-Socket-Id=spcJUmH65y9FE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "copy"],
                      "query": [
                        {
                          "key": "X-Socket-Id",
                          "value": "spcJUmH65y9FE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "复制节点》nodeId为文件夹",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"复制节点》nodeId为文件夹\", function () {\r",
                          "    var nodeId;\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(false);\r",
                          "    pm.expect(jsonData.code).to.eql(418);\r",
                          "    // pm.expect(jsonData.message).to.eql(\"Can't copy folder\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"data\": false,\r\n  \"nodeId\": \"fodNg3n74fyCy\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/copy?X-Socket-Id=spcJUmH65y9FE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "copy"],
                      "query": [
                        {
                          "key": "X-Socket-Id",
                          "value": "spcJUmH65y9FE"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "查询节点信息",
              "item": [
                {
                  "name": "查询节点信息》节点为文件夹",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// pm.test(\"查询节点信息》节点为文件夹\", function () {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.success).to.eql(true);",
                          "//     pm.expect(jsonData.code).to.eql(200);",
                          "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "//     pm.expect(jsonData.data[0].nodeId).to.eql(\"fodWwtM71PeZ0\");",
                          "//     pm.expect(jsonData.data[0].nodeName).to.eql(\"文件夹\");",
                          "//     pm.expect(jsonData.data[0].type).to.eql(1);",
                          "",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/get?nodeIds=fodWwtM71PeZ0",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "get"],
                      "query": [
                        {
                          "key": "nodeIds",
                          "value": "fodWwtM71PeZ0"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询节点信息》节点为表格",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询节点信息》节点为表格\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dstnr7dUqAvmKzLaZZ\");",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"表格\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(2);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/get?nodeIds=dstnr7dUqAvmKzLaZZ",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "get"],
                      "query": [
                        {
                          "key": "nodeIds",
                          "value": "dstnr7dUqAvmKzLaZZ"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询节点信息》节点为表单",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询节点信息》节点为表单\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fom7AUYl2XB0dVryeL\");",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"表单\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(3);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/get?nodeIds=fom7AUYl2XB0dVryeL",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "get"],
                      "query": [
                        {
                          "key": "nodeIds",
                          "value": "fom7AUYl2XB0dVryeL"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询节点信息》节点为仪表盘",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询节点信息》节点为表单\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dsbt8kgrJVCMHLRPKr\");",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"仪表盘\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(4);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/get?nodeIds=dsbt8kgrJVCMHLRPKr",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "get"],
                      "query": [
                        {
                          "key": "nodeIds",
                          "value": "dsbt8kgrJVCMHLRPKr"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询节点信息》节点为镜像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询节点信息》节点为表单\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"mirayB5JtB8uJFw10n\");",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"镜像\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(5);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/get?nodeIds=mirayB5JtB8uJFw10n",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "get"],
                      "query": [
                        {
                          "key": "nodeIds",
                          "value": "mirayB5JtB8uJFw10n"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "获取指定类型的节点列表",
              "item": [
                {
                  "name": "获取指定节点类型列表》type为文件夹",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取指定节点类型列表》type为文件夹\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fodgEwuFUhkLv\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"新建文件夹\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(1);\r",
                          "\r",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fodx13lXdGApB\");\r",
                          "    pm.expect(jsonData.data[1].nodeName).to.eql(\"新建文件夹\");\r",
                          "    pm.expect(jsonData.data[1].type).to.eql(1);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=1",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取指定节点类型列表》type为表格",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取指定节点类型列表》type为表格\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dst8lQiaTXj5GgycEB\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"新建维格表2\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(2);\r",
                          "\r",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"dst8UBtW2WXc4BouZS\");\r",
                          "    pm.expect(jsonData.data[1].nodeName).to.eql(\"新建维格表\");\r",
                          "    pm.expect(jsonData.data[1].type).to.eql(2);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=2",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "2"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取指定节点类型列表》type为表单",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取指定节点类型列表》type为表单\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fom8ETZHgLYlydc5Wq\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"维格视图的神奇表单\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(3);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=3",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "3"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取指定节点类型列表》type为镜像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取指定节点类型列表》type为镜像\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"mirMmcYoNtWcYSbZaa\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"维格视图的镜像\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(5);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=5",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "5"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取指定节点类型列表》type为仪表盘",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取指定节点类型列表》type为仪表盘\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"dsb1E8aPSkPDTXR7Pq\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"新建仪表盘\");\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(4);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=4",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "4"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取指定节点类型列表》type为根节点",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取指定节点类型列表》type为根节点\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"fodnJEE9mTJAe\");\r",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(null);\r",
                          "    pm.expect(jsonData.data[0].type).to.eql(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=0",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "移动节点",
              "item": [
                {
                  "name": "移动节点》移动表格",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"移动节点》移动表格\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fod2tfyaPCnn9\");\r",
                          "\r",
                          "    //还原节点位置\r",
                          "    var environmentURL = pm.environment.get(\"baseURL\");\r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/move',\r",
                          "        method: 'POST',\r",
                          "        header:\r",
                          "            ['Content-Type: application/json', 'Authorization: Bearer usky0IDpvjlyUNKNPjqgghP', 'X-Space-Id: spcJUmH65y9FE'],\r",
                          "        body: {\r",
                          "            mode: 'raw',\r",
                          "            raw: JSON.stringify(\r",
                          "                {\r",
                          "                    \"nodeId\": jsonData.data[0].nodeId,\r",
                          "                    \"parentId\": \"fod5ThM9ycjsR\",\r",
                          "                    \"preNodeId\": \"\"\r",
                          "                }\r",
                          "            )\r",
                          "        }\r",
                          "        }; \r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "    console.log(response.json());\r",
                          "    });\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeId\": \"dst31cMZwjdiSqZTs7\",\r\n  \"parentId\": \"fod2tfyaPCnn9\",\r\n  \"preNodeId\": \"\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/move",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "move"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "移动节点》移动表单",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"移动节点》移动表单\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fod2tfyaPCnn9\");\r",
                          "\r",
                          "    //还原节点位置\r",
                          "    var environmentURL = pm.environment.get(\"baseURL\");\r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/move',\r",
                          "        method: 'POST',\r",
                          "        header:\r",
                          "            ['Content-Type: application/json', 'Authorization: Bearer usky0IDpvjlyUNKNPjqgghP', 'X-Space-Id: spcJUmH65y9FE'],\r",
                          "        body: {\r",
                          "            mode: 'raw',\r",
                          "            raw: JSON.stringify(\r",
                          "                {\r",
                          "                    \"nodeId\": jsonData.data[0].nodeId,\r",
                          "                    \"parentId\": \"fod5ThM9ycjsR\",\r",
                          "                    \"preNodeId\": \"\"\r",
                          "                }\r",
                          "            )\r",
                          "        }\r",
                          "        }; \r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "    console.log(response.json());\r",
                          "    });\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeId\": \"fomswUWeyyLH3AVwa3\",\r\n  \"parentId\": \"fod2tfyaPCnn9\",\r\n  \"preNodeId\": \"\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/move",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "move"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "移动节点》移动镜像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"移动节点》移动镜像\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fod2tfyaPCnn9\");\r",
                          "\r",
                          "    //还原节点位置\r",
                          "    var environmentURL = pm.environment.get(\"baseURL\");\r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/move',\r",
                          "        method: 'POST',\r",
                          "        header:\r",
                          "            ['Content-Type: application/json', 'Authorization: Bearer usky0IDpvjlyUNKNPjqgghP', 'X-Space-Id: spcJUmH65y9FE'],\r",
                          "        body: {\r",
                          "            mode: 'raw',\r",
                          "            raw: JSON.stringify(\r",
                          "                {\r",
                          "                    \"nodeId\": jsonData.data[0].nodeId,\r",
                          "                    \"parentId\": \"fod5ThM9ycjsR\",\r",
                          "                    \"preNodeId\": \"\"\r",
                          "                }\r",
                          "            )\r",
                          "        }\r",
                          "        }; \r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "    console.log(response.json());\r",
                          "    });\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeId\": \"mirjECE9z4davNUxwq\",\r\n  \"parentId\": \"fod2tfyaPCnn9\",\r\n  \"preNodeId\": \"\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/move",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "move"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "移动节点》移动仪表盘",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"移动节点》移动仪表盘\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fod2tfyaPCnn9\");\r",
                          "\r",
                          "    //还原节点位置\r",
                          "    var environmentURL = pm.environment.get(\"baseURL\");\r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/move',\r",
                          "        method: 'POST',\r",
                          "        header:\r",
                          "            ['Content-Type: application/json', 'Authorization: Bearer usky0IDpvjlyUNKNPjqgghP', 'X-Space-Id: spcJUmH65y9FE'],\r",
                          "        body: {\r",
                          "            mode: 'raw',\r",
                          "            raw: JSON.stringify(\r",
                          "                {\r",
                          "                    \"nodeId\": jsonData.data[0].nodeId,\r",
                          "                    \"parentId\": \"fod5ThM9ycjsR\",\r",
                          "                    \"preNodeId\": \"\"\r",
                          "                }\r",
                          "            )\r",
                          "        }\r",
                          "        }; \r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "    console.log(response.json());\r",
                          "    });\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeId\": \"dsbcmN5MLcrU9P8ENP\",\r\n  \"parentId\": \"fod2tfyaPCnn9\",\r\n  \"preNodeId\": \"\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/move",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "move"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "移动节点》移动文件夹",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"移动节点》移动仪表盘\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodHF5g0Ut9fW\");\r",
                          "\r",
                          "    //还原节点位置\r",
                          "    var environmentURL = pm.environment.get(\"baseURL\");\r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/move',\r",
                          "        method: 'POST',\r",
                          "        header:\r",
                          "            ['Content-Type: application/json', 'Authorization: Bearer usky0IDpvjlyUNKNPjqgghP', 'X-Space-Id: spcJUmH65y9FE'],\r",
                          "        body: {\r",
                          "            mode: 'raw',\r",
                          "            raw: JSON.stringify(\r",
                          "                {\r",
                          "                    \"nodeId\": jsonData.data[0].nodeId,\r",
                          "                    \"parentId\": \"fod5ThM9ycjsR\",\r",
                          "                    \"preNodeId\": \"\"\r",
                          "                }\r",
                          "            )\r",
                          "        }\r",
                          "        }; \r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "    console.log(response.json());\r",
                          "    });\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeId\": \"fod2tfyaPCnn9\",\r\n  \"parentId\": \"fodHF5g0Ut9fW\",\r\n  \"preNodeId\": \"\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/move",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "move"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "移动节点》parentId不为空",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"移动节点》parentId不为空\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.success).to.eql(true);\r",
                          "    pm.expect(jsonData.code).to.eql(200);\r",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                          "\r",
                          "    pm.expect(jsonData.data[0].preNodeId).to.eql(\"dste1m0etUAZafWggi\");\r",
                          "    pm.expect(jsonData.data[0].parentId).to.eql(\"fodHF5g0Ut9fW\");\r",
                          "\r",
                          "    //还原节点位置\r",
                          "    var environmentURL = pm.environment.get(\"baseURL\");\r",
                          "    const createRequest = {\r",
                          "        url: environmentURL + '/api/v1/node/move',\r",
                          "        method: 'POST',\r",
                          "        header:\r",
                          "            ['Content-Type: application/json', 'Authorization: Bearer usky0IDpvjlyUNKNPjqgghP', 'X-Space-Id: spcJUmH65y9FE'],\r",
                          "        body: {\r",
                          "            mode: 'raw',\r",
                          "            raw: JSON.stringify(\r",
                          "                {\r",
                          "                    \"nodeId\": jsonData.data[0].nodeId,\r",
                          "                    \"parentId\": \"fod5ThM9ycjsR\",\r",
                          "                    \"preNodeId\": \"\"\r",
                          "                }\r",
                          "            )\r",
                          "        }\r",
                          "        }; \r",
                          "    pm.sendRequest(createRequest, function (err, response) {\r",
                          "    console.log(response.json());\r",
                          "    });\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcJUmH65y9FE",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"nodeId\": \"dstvKYpslNPReQwte8\",\r\n  \"parentId\": \"fodHF5g0Ut9fW\",\r\n  \"preNodeId\": \"dste1m0etUAZafWggi\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/move",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "move"]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": ["", "", "", "", "", ""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "查询父节点",
              "item": [
                {
                  "name": "查询父节点》节点文件为表格",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询父节点》节点文件为表格\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"foduS3v7SFXur\");",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fodlkQL5TV2VM\");",
                          "    pm.expect(jsonData.data[2].nodeId).to.eql(\"fodLTZHUEk9eb\");",
                          "    pm.expect(jsonData.data[3].nodeId).to.eql(\"fodnDu0RgYP24\");",
                          "    pm.expect(jsonData.data[4].nodeId).to.eql(\"dstnr7dUqAvmKzLaZZ\");",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/parents?nodeId=dstnr7dUqAvmKzLaZZ",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "parents"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "dstnr7dUqAvmKzLaZZ"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询父节点》节点文件为镜像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询父节点》节点文件为镜像\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"foduS3v7SFXur\");",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fodlkQL5TV2VM\");",
                          "    pm.expect(jsonData.data[2].nodeId).to.eql(\"fodLTZHUEk9eb\");",
                          "    pm.expect(jsonData.data[3].nodeId).to.eql(\"fodnDu0RgYP24\");",
                          "    pm.expect(jsonData.data[4].nodeId).to.eql(\"mirayB5JtB8uJFw10n\");",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/parents?nodeId=mirayB5JtB8uJFw10n",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "parents"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "mirayB5JtB8uJFw10n"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询父节点》节点文件为表单",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询父节点》节点文件为表单\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"foduS3v7SFXur\");",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fodlkQL5TV2VM\");",
                          "    pm.expect(jsonData.data[2].nodeId).to.eql(\"fodLTZHUEk9eb\");",
                          "    pm.expect(jsonData.data[3].nodeId).to.eql(\"fodnDu0RgYP24\");",
                          "    pm.expect(jsonData.data[4].nodeId).to.eql(\"fom7AUYl2XB0dVryeL\");",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/parents?nodeId=fom7AUYl2XB0dVryeL",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "parents"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fom7AUYl2XB0dVryeL"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询父节点》节点文件为仪表盘",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询父节点》节点文件为仪表盘\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"foduS3v7SFXur\");",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fodlkQL5TV2VM\");",
                          "    pm.expect(jsonData.data[2].nodeId).to.eql(\"fodLTZHUEk9eb\");",
                          "    pm.expect(jsonData.data[3].nodeId).to.eql(\"fodnDu0RgYP24\");",
                          "    pm.expect(jsonData.data[4].nodeId).to.eql(\"dsbt8kgrJVCMHLRPKr\");",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/parents?nodeId=dsbt8kgrJVCMHLRPKr",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "parents"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "dsbt8kgrJVCMHLRPKr"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询父节点》节点文件为文件夹",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询父节点》节点文件为文件夹\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data[0].nodeId).to.eql(\"foduS3v7SFXur\");",
                          "    pm.expect(jsonData.data[1].nodeId).to.eql(\"fodlkQL5TV2VM\");",
                          "    pm.expect(jsonData.data[2].nodeId).to.eql(\"fodLTZHUEk9eb\");",
                          "    pm.expect(jsonData.data[3].nodeId).to.eql(\"fodnDu0RgYP24\");",
                          "    pm.expect(jsonData.data[4].nodeId).to.eql(\"fodWwtM71PeZ0\");",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/parents?nodeId=fodWwtM71PeZ0",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "parents"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodWwtM71PeZ0"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "定位节点",
              "item": [
                {
                  "name": "定位节点》节点存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"定位节点》节点存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data.nodeId).to.eql(\"foduS3v7SFXur\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/position/dstnr7dUqAvmKzLaZZ",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "position",
                        "dstnr7dUqAvmKzLaZZ"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "定位节点》节点被删除",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"定位节点》节点存在空间站\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.expect(jsonData.data.nodeId).to.eql(\"foduS3v7SFXur\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/position/dstnr7dUqAvmKzLaZZ",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "position",
                        "dstnr7dUqAvmKzLaZZ"
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "workbench - node api - 01",
              "item": [
                {
                  "name": "check for associated nodes>mirror",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"check for associated nodes>mirror\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"checkRelNode镜像\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/checkRelNode?nodeId=dstPfmfY3XiKQp0f44&type=5&viewId=viweaxjhdhqaV",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "checkRelNode"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "dstPfmfY3XiKQp0f44"
                        },
                        {
                          "key": "type",
                          "value": "5"
                        },
                        {
                          "key": "viewId",
                          "value": "viweaxjhdhqaV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "check for associated nodes>form",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"check for associated nodes>form\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].nodeName).to.eql(\"checkNelNode神奇表单\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/checkRelNode?nodeId=dstPfmfY3XiKQp0f44&type=3&viewId=viweaxjhdhqaV",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "checkRelNode"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "dstPfmfY3XiKQp0f44"
                        },
                        {
                          "key": "type",
                          "value": "3"
                        },
                        {
                          "key": "viewId",
                          "value": "viweaxjhdhqaV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create child node>create folder",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Create child node>create folder\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"create_node\");",
                          "    pm.expect(jsonData.data.type).to.eql(1)",
                          "    ",
                          "    pm.globals.set(\"create_node_id\", jsonData.data.nodeId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"extra\": {\n    \"datasheetId\": \"\",\n    \"viewId\": \"\"\n  },\n  \"nodeName\": \"create_node\",\n  \"parentId\": \"fodqm6wVmay1V\",\n  \"preNodeId\": \"\",\n  \"type\": 1\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/create",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "create"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/delete/{{create_node_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "delete",
                        "{{create_node_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create child node>create dataSheet",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Create child node>create dataSheet\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"create_node\");",
                          "    pm.expect(jsonData.data.type).to.eql(2)",
                          "    ",
                          "    pm.globals.set(\"create_node_id\", jsonData.data.nodeId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"extra\": {\n    \"datasheetId\": \"\",\n    \"viewId\": \"\"\n  },\n  \"nodeName\": \"create_node\",\n  \"parentId\": \"fodqm6wVmay1V\",\n  \"preNodeId\": \"\",\n  \"type\": 2\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/create",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "create"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/delete/{{create_node_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "delete",
                        "{{create_node_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create child node>create form",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Create child node>create form\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"create_node\");",
                          "    pm.expect(jsonData.data.type).to.eql(3)",
                          "    ",
                          "    pm.globals.set(\"create_node_id\", jsonData.data.nodeId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"extra\": {\n    \"datasheetId\": \"dstrQgucZzZHZeGjmm\",\n    \"viewId\": \"viw9Vy3q5xvZA\"\n  },\n  \"nodeName\": \"create_node\",\n  \"parentId\": \"fodqm6wVmay1V\",\n  \"preNodeId\": \"\",\n  \"type\": 3\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/create",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "create"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/delete/{{create_node_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "delete",
                        "{{create_node_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create child node>create dashboard",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Create child node>create dashboard\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"create_node\");",
                          "    pm.expect(jsonData.data.type).to.eql(4)",
                          "    ",
                          "    pm.globals.set(\"create_node_id\", jsonData.data.nodeId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"extra\": {\n    \"datasheetId\": \"\",\n    \"viewId\": \"\"\n  },\n  \"nodeName\": \"create_node\",\n  \"parentId\": \"fodqm6wVmay1V\",\n  \"preNodeId\": \"\",\n  \"type\": 4\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/create",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "create"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/delete/{{create_node_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "delete",
                        "{{create_node_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create child node>create mirror",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Create child node>create dataSheet\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeName).to.contain(\"create_node\");",
                          "    pm.expect(jsonData.data.type).to.eql(5)",
                          "    ",
                          "    pm.globals.set(\"create_node_id\", jsonData.data.nodeId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"extra\": {\n    \"datasheetId\": \"dstrQgucZzZHZeGjmm\",\n    \"viewId\": \"viw9Vy3q5xvZA\"\n  },\n  \"nodeName\": \"create_node\",\n  \"parentId\": \"fodqm6wVmay1V\",\n  \"preNodeId\": \"\",\n  \"type\": 5\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/create",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "create"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/delete/{{create_node_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "delete",
                        "{{create_node_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Query tree node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Query tree node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeName).to.eql(\"API-获取指定类型的节点列表\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/tree?depth=2",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "tree"],
                      "query": [
                        {
                          "key": "depth",
                          "value": "2"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Edit node>folder",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Edit node>folder\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.icon).to.eql(\"sweat_smile\")",
                          "    pm.expect(jsonData.data.nodeName).to.eql(\"update/Update_description\")",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"cover\": \"space/2021/12/29/ebd570b6ee3b429f8c2e51e1b1df6657\",\n  \"icon\": \"sweat_smile\",\n  \"nodeName\": \"update/Update_description\",\n  \"showRecordHistory\": 1\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/update/fodFxpo3DXf3R",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "update", "fodFxpo3DXf3R"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Edit node>datasheet",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Edit node>datasheet\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.icon).to.eql(\"sweat_smile\")",
                          "    pm.expect(jsonData.data.nodeName).to.eql(\"update/Update_description\")",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"cover\": \"space/2021/12/29/ebd570b6ee3b429f8c2e51e1b1df6657\",\n  \"icon\": \"sweat_smile\",\n  \"nodeName\": \"update/Update_description\",\n  \"showRecordHistory\": 1\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/update/dstumB7o7FN7k5d1Ru",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "update",
                        "dstumB7o7FN7k5d1Ru"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update node description>folder",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Update node description>folder\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"description\": \"{\\\"text\\\":\\\"this is a description\\\",\\\"slateData\\\":{\\\"document\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{\\\"align\\\":\\\"alignLeft\\\"},\\\"object\\\":\\\"block\\\",\\\"children\\\":[{\\\"text\\\":\\\"this is a description\\\"}],\\\"_id\\\":\\\"edtr0c3XPNTLT\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{\\\"align\\\":\\\"alignLeft\\\"},\\\"object\\\":\\\"block\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"_id\\\":\\\"edtBlpAj3LpJk\\\"}],\\\"meta\\\":{\\\"imageSize\\\":0}},\\\"data\\\":\\\"<p class=\\\\\\\"ve_align_alignLeft\\\\\\\">this is a description</p><p class=\\\\\\\"ve_align_alignLeft\\\\\\\"></p>\\\"}\",\n    \"nodeId\": \"fodFxpo3DXf3R\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/updateDesc",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "updateDesc"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update node description>datasheet",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Update node description>datasheet\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"description\": \"{\\\"type\\\":\\\"slate\\\",\\\"data\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{\\\"align\\\":\\\"alignLeft\\\"},\\\"object\\\":\\\"block\\\",\\\"children\\\":[{\\\"text\\\":\\\"this is a description\\\"}],\\\"_id\\\":\\\"edtoI45pAgKPI\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"data\\\":{\\\"align\\\":\\\"alignLeft\\\"},\\\"object\\\":\\\"block\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"_id\\\":\\\"edt8S5lkWkOka\\\"}],\\\"render\\\":\\\"<p class=\\\\\\\"ve_align_alignLeft\\\\\\\">this is a description</p><p class=\\\\\\\"ve_align_alignLeft\\\\\\\"></p>\\\"}\",\n    \"nodeId\": \"dstumB7o7FN7k5d1Ru\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/updateDesc",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "updateDesc"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Node info window",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Node info window\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeId).to.eql(\"fodFxpo3DXf3R\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/window?nodeId=fodFxpo3DXf3R",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "window"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fodFxpo3DXf3R"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usky0IDpvjlyUNKNPjqgghP",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "workbench - node api - 02",
              "item": [
                {
                  "name": "Get associated node>form",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get associated node>form\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(3);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/getRelNode?nodeId=dstPfmfY3XiKQp0f44&type=3&viewId=viweaxjhdhqaV",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "getRelNode"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "dstPfmfY3XiKQp0f44"
                        },
                        {
                          "key": "type",
                          "value": "3"
                        },
                        {
                          "key": "viewId",
                          "value": "viweaxjhdhqaV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get associated node>mirror",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get associated node>mirror\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(5);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/getRelNode?nodeId=dstPfmfY3XiKQp0f44&type=5&viewId=viweaxjhdhqaV",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "getRelNode"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "dstPfmfY3XiKQp0f44"
                        },
                        {
                          "key": "type",
                          "value": "5"
                        },
                        {
                          "key": "viewId",
                          "value": "viweaxjhdhqaV"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get nodes of the specified type>folder",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get nodes of the specified type>folder\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(1);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=1",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get nodes of the specified type>datasheet",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get nodes of the specified type>datasheet\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(2);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=2",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "2"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get nodes of the specified type>form",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get nodes of the specified type>form\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(3);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=3",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "3"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get nodes of the specified type>mirror",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get nodes of the specified type>mirror\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(5);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=5",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "5"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get nodes of the specified type>dashboard",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get nodes of the specified type>dashboard\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data[0].type).to.eql(4);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/list?type=4",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "list"],
                      "query": [
                        {
                          "key": "type",
                          "value": "4"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "member recent open node list",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// pm.test(\"member recent open node list\", function () {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.success).to.eql(true);",
                          "//     pm.expect(jsonData.code).to.eql(200);",
                          "//     pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "//     pm.expect(jsonData.data[0].nodeName).to.eql(\"recent\");",
                          "",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk8oiriC92FrEmFmahpZ6U",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/recentList?X-Space-Id",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "recentList"],
                      "query": [
                        {
                          "key": "X-Space-Id",
                          "value": null
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Gets no permission member before remind",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Gets no permission member before remind\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data).not.be.null;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"nodeId\": \"dstFoszJvPa27owK4A\",\n    \"unitIds\": [\n        \"1633045226001575937\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/remind/units/noPermission",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "remind",
                        "units",
                        "noPermission"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Fuzzy search node",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Fuzzy search node\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data[0].nodeName).to.contain('仪表盘');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spc3XjdbKkfVP",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/search?keyword=%E4%BB%AA%E8%A1%A8%E7%9B%98",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "search"],
                      "query": [
                        {
                          "key": "keyword",
                          "value": "%E4%BB%AA%E8%A1%A8%E7%9B%98"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Login\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Folder preview>share id is null",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Folder preview\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data.nodeName).to.eql('showcase');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/showcase?nodeId=fod4dDEtCuNhq&shareId",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "showcase"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fod4dDEtCuNhq"
                        },
                        {
                          "key": "shareId",
                          "value": null
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Folder preview>share id is not null",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Folder preview\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data.nodeName).to.eql('showcase');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/showcase?nodeId=fod4dDEtCuNhq&shareId=shrczAxMUnxEbnJb5jmUE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "showcase"],
                      "query": [
                        {
                          "key": "nodeId",
                          "value": "fod4dDEtCuNhq"
                        },
                        {
                          "key": "shareId",
                          "value": "shrczAxMUnxEbnJb5jmUE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "sign out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Sign out\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Login\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_recent_nodelist@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Remind notification",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Remind notification\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk8oiriC92FrEmFmahpZ6U",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"isNotify\": true,\n    \"nodeId\": \"dsteaJjzc9Jq31Mler\",\n    \"viewId\": \"viwa5xRaNUL3k\",\n    \"unitRecs\": [\n        {\n            \"recordIds\": [\n                \"recQ5E3x2WimK\"\n            ],\n            \"unitIds\": [\n                \"1633040349502902273\"\n            ],\n            \"recordTitle\": \"test_remind\",\n            \"fieldName\": \"成员\"\n        }\n    ],\n    \"linkId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/remind",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "remind"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "sign out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Sign out\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usky0IDpvjlyUNKNPjqgghP",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "内部服务-用户接口",
          "item": [
            {
              "name": "创建数表节点",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"nodeId\", jsonData.data.nodeId);\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"success返回为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"extra\": {\r\n    \"datasheetId\": \"dsttKj9EgqPlJsx0GC\",\r\n    \"viewId\": \"viwRFGXGZrjk2\"\r\n  }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/spaces/spcyrxsnS0983/datasheets",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "spaces",
                    "spcyrxsnS0983",
                    "datasheets"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除节点",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回code为200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"success返回为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/spaces/spcyrxsnS0983/nodes/{{nodeId}}/delete",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "spaces",
                    "spcyrxsnS0983",
                    "nodes",
                    "{{nodeId}}",
                    "delete"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "获取自己必要信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"success返回为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回userId显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.userId).to.eql(\"1424575748503691265\");\r",
                      "});\r",
                      "pm.test(\"返回uuid显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.uuid).to.eql(\"2dc7f9021ee54e6e87d4b05051eeac93\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/user/get/me",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "user", "get", "me"]
                }
              },
              "response": []
            },
            {
              "name": "登入",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回登录状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"areaCode\": \"+86\",\r\n  \"credential\": \"qwer1234\",\r\n  \"data\": \"FutureIsComing\",\r\n  \"spaceId\": \"spcaq8UwsxjAc\",\r\n  \"token\": \"this_is_token\",\r\n  \"type\": \"password\",\r\n  \"username\": \"13400001456\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "查询已登录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"success返回为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回data为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/user/session",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "user", "session"]
                }
              },
              "response": []
            },
            {
              "name": "登出",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回needRedirect为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.needRedirect).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            },
            {
              "name": "查询未登录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"success返回为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回data为false\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/user/session",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "user", "session"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "联系人角色",
          "item": [
            {
              "name": "查询角色",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回第一个角色的信息、ID、人数正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[0].roleId).to.eql(\"1583368807430815746\");\r",
                      "    pm.expect(jsonData.data[0].roleName).to.eql(\"财务\");\r",
                      "    pm.expect(jsonData.data[0].memberCount).to.eql(1);\r",
                      "});\r",
                      "pm.test(\"返回第二个角色的信息、ID、人数正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[1].roleId).to.eql(\"1583368807435010050\");\r",
                      "    pm.expect(jsonData.data[1].roleName).to.eql(\"市场\");\r",
                      "    pm.expect(jsonData.data[1].memberCount).to.eql(0);\r",
                      "});\r",
                      "pm.test(\"返回第三个角色的信息、ID、人数正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[2].roleId).to.eql(\"1583368807435010051\");\r",
                      "    pm.expect(jsonData.data[2].roleName).to.eql(\"IT\");\r",
                      "    pm.expect(jsonData.data[2].memberCount).to.eql(0);\r",
                      "});\r",
                      "pm.test(\"返回第四个角色的信息、ID、人数正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[3].roleId).to.eql(\"1583368807435010052\");\r",
                      "    pm.expect(jsonData.data[3].roleName).to.eql(\"人事\");\r",
                      "    pm.expect(jsonData.data[3].memberCount).to.eql(0);\r",
                      "});\r",
                      "pm.test(\"返回第五个角色的信息、ID、人数正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data[4].roleId).to.eql(\"1583368807435010053\");\r",
                      "    pm.expect(jsonData.data[4].roleName).to.eql(\"法务\");\r",
                      "    pm.expect(jsonData.data[4].memberCount).to.eql(0);\r",
                      "});\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId6\", jsonData.data[2].roleId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles"]
                }
              },
              "response": []
            },
            {
              "name": "创建新的角色成功",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"roleName\": \"Finance\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles"]
                }
              },
              "response": []
            },
            {
              "name": "创建的角色名重复失败",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为失败\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回message显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"该角色名称已存在\");\r",
                      "});\r",
                      "pm.test(\"返回data为null\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data).to.eql(null);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"roleName\": \"Finance\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles"]
                }
              },
              "response": []
            },
            {
              "name": "获取新建的角色id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId0\", jsonData.data[5].roleId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles"]
                }
              },
              "response": []
            },
            {
              "name": "更新角色信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"roleName\": \"finance1\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId0}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId0}}"]
                }
              },
              "response": []
            },
            {
              "name": "删除新建的角色成功",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除新建的角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId0}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId0}}"]
                }
              },
              "response": []
            },
            {
              "name": "创建初始化角色成功",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"初始化创建角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/init",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "init"]
                }
              },
              "response": []
            },
            {
              "name": "已有角色初始化创建失败",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"初始化创建角色失败\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"失败原因为已有角色\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"空间站已存在该角色\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/init",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "init"]
                }
              },
              "response": []
            },
            {
              "name": "获取初始化的5个角色id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"message返回为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId1\", jsonData.data[0].roleId);\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId2\", jsonData.data[1].roleId);\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId3\", jsonData.data[2].roleId);\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId4\", jsonData.data[3].roleId);\r",
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"roleId5\", jsonData.data[4].roleId);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles"]
                }
              },
              "response": []
            },
            {
              "name": "删除初始化创建的第一个角色",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除初始化创建的第一个角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId1}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId1}}"]
                }
              },
              "response": []
            },
            {
              "name": "删除初始化创建的第二个角色",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除初始化创建的第二个角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId2}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId2}}"]
                }
              },
              "response": []
            },
            {
              "name": "删除初始化创建的第三个角色",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除初始化创建的第三个角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId3}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId3}}"]
                }
              },
              "response": []
            },
            {
              "name": "删除初始化创建的第四个角色",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除初始化创建的第四个角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId4}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId4}}"]
                }
              },
              "response": []
            },
            {
              "name": "删除初始化创建的第五个角色",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"删除初始化创建的第五个角色成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc4XYPfyAUuq",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId5}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "roles", "{{roleId5}}"]
                }
              },
              "response": []
            },
            {
              "name": "查询角色成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回数据为第一页\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.firstPage).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回数据为最后一页\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.lastPage).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回数据没有下一页\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.hasNextPage).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回数据没有前一页\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.hasPreviousPage).to.eql(false);\r",
                      "});\r",
                      "pm.test(\"返回空间站名称显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.records[0].teams).to.eql(\"第一小组\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/1583368807430815746/members",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "api",
                    "v1",
                    "org",
                    "roles",
                    "1583368807430815746",
                    "members"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "角色内添加成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"unitList\": [\r\n    {\r\n      \"id\": \"1436314821867966465\",\r\n      \"type\": 3\r\n    }\r\n  ]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId6}}/members",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "api",
                    "v1",
                    "org",
                    "roles",
                    "{{roleId6}}",
                    "members"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除角色内成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除结果返回为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcyrxsnS0983",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"unitIds\": [1436314821867966465]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/roles/{{roleId6}}/members",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "api",
                    "v1",
                    "org",
                    "roles",
                    "{{roleId6}}",
                    "members"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "成员与小组",
          "item": [
            {
              "name": "创建小组",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"创建小组\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回message为SUCCESS\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"name\": \"第一小组\",\r\n  \"superId\": \"0\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/team/create",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "team", "create"]
                }
              },
              "response": []
            },
            {
              "name": "查询小组",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询小组\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});",
                      "pm.test(\"返回success为true\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});",
                      "pm.test(\"返回message为SUCCESS\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.globals.set(\"teamName1\",jsonData.data[0].children[0].teamId);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-space-id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/team/tree",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "team", "tree"]
                }
              },
              "response": []
            },
            {
              "name": "更新小组信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"superId\": \"0\",\r\n  \"teamId\": \"{{teamName1}}\",\r\n  \"teamName\": \"第一小组\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/team/update",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "team", "update"]
                }
              },
              "response": []
            },
            {
              "name": "查询团队的成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/team/members?teamId={{teamName1}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "team", "members"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "{{teamName1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询团队信息",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      "pm.test(\"返回小组信息显示正确\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data.teamName).to.eql(\"第一小组\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/team/read?teamId={{teamName1}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "team", "read"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "{{teamName1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询直属子部门",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/team/subTeams?teamId={{teamName1}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": ["api", "v1", "org", "team", "subTeams"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "{{teamName1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "删除小组",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除小组》返回状态为成功\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});\r",
                      "pm.test(\"删除小组》返回success为true\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://integration.vika.ltd/api/v1/org/team/delete/{{teamName1}}",
                  "protocol": "https",
                  "host": ["integration", "vika", "ltd"],
                  "path": [
                    "api",
                    "v1",
                    "org",
                    "team",
                    "delete",
                    "{{teamName1}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "联系人组织",
          "item": [
            {
              "name": "登录",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"登录\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》spaceId为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》spaceId为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(500);",
                      "    pm.expect(jsonData.message).to.eql('workspace does not exist');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》teamId/linkId为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》teamId为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.teams[0].teamName).to.eql('API-联系人组织');",
                      "    pm.expect(jsonData.data.teams[0].memberCount).to.eql(4);",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId&linkId",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》teamId为正确的小组ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》teamId为正确的小组ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].email).to.eql('zhongxiao@vikadata.com');",
                      "    pm.expect(jsonData.data.members[1].email).to.eql('test_contactOrganization003@vikadata.com');",
                      "    pm.expect(jsonData.data.members[2].email).to.eql('test_contactOrganization002@vikadata.com');",
                      "    pm.expect(jsonData.data.members[3].email).to.eql('test_contactOrganization001@vikadata.com');",
                      "",
                      "    pm.expect(jsonData.data.teams[0].teamName).to.eql('小组A');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=1611252719296811009",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1611252719296811009"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》teamID为错误的小组ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》teamId为错误的小组ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members).to.eql([]);",
                      "    pm.expect(jsonData.data.teams).to.eql([]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=123456789123456789",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "123456789123456789"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》teamID为0",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》teamID为0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members).to.eql([]);",
                      "    pm.expect(jsonData.data.teams[0].teamName).to.eql(\"API-联系人组织\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=0",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "0"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》linkID为正确的分享文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》linkID为正确的分享文件ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].email).to.eql('zhongxiao@vikadata.com');",
                      "    pm.expect(jsonData.data.members[1].email).to.eql('test_contactOrganization003@vikadata.com');",
                      "    pm.expect(jsonData.data.members[2].email).to.eql('test_contactOrganization002@vikadata.com');",
                      "    pm.expect(jsonData.data.members[3].email).to.eql('test_contactOrganization001@vikadata.com');",
                      "",
                      "    pm.expect(jsonData.data.teams[0].teamName).to.eql('小组A');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcJUmH65y9FE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=1611252719296811009&linkId=shrvmvRmNAGPWWpnt4lLN",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1611252719296811009"
                    },
                    {
                      "key": "linkId",
                      "value": "shrvmvRmNAGPWWpnt4lLN"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》linkID为错误的分享文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》linkID为错误的分享文件ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(414);",
                      "    pm.expect(jsonData.message).to.eql('分享链接失效');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcJUmH65y9FE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=1611252719296811009&linkId=shrvxxxxxxxxxxxx",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1611252719296811009"
                    },
                    {
                      "key": "linkId",
                      "value": "shrvxxxxxxxxxxxx"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》linkID为正确的模板文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》linkID为正确的模板文件ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].email).to.eql('zhongxiao@vikadata.com');",
                      "    pm.expect(jsonData.data.members[1].email).to.eql('test_contactOrganization003@vikadata.com');",
                      "    pm.expect(jsonData.data.members[2].email).to.eql('test_contactOrganization002@vikadata.com');",
                      "    pm.expect(jsonData.data.members[3].email).to.eql('test_contactOrganization001@vikadata.com');",
                      "",
                      "    pm.expect(jsonData.data.teams[0].teamName).to.eql('小组A');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcJUmH65y9FE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=1611252719296811009&linkId=tplTjH43iLKzx",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1611252719296811009"
                    },
                    {
                      "key": "linkId",
                      "value": "tplTjH43iLKzx"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查询子部门和部门成员》linkID为错误的模板文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查询子部门和部门成员》linkID为错误的模板文件ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(431);",
                      "    pm.expect(jsonData.message).to.eql('模板信息错误');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcJUmH65y9FE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/getSubUnitList?teamId=1611252719296811009&linkId=tplxxxxxxxxxx",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "getSubUnitList"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1611252719296811009"
                    },
                    {
                      "key": "linkId",
                      "value": "tplxxxxxxxxxx"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》spaceId为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》spaceId为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(500);",
                      "    pm.expect(jsonData.message).to.eql('space does not exist');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all&filterIds&keyword&linkId&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": ""
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》all为true",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》all为true\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].email).to.eql('zhongxiao@vikadata.com');",
                      "    pm.expect(jsonData.data[1].name).to.eql('API-联系人组织');",
                      "    pm.expect(jsonData.data[2].name).to.eql('test_contactOrganization003');",
                      "    pm.expect(jsonData.data[3].name).to.eql('test_contactOrganization002');",
                      "    pm.expect(jsonData.data[4].name).to.eql('test_contactOrganization001');",
                      "    pm.expect(jsonData.data[5].name).to.eql('小组A');",
                      "    pm.expect(jsonData.data[6].name).to.eql('角色A');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=true&filterIds&keyword&linkId&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": "true"
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》all为false",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》all为false\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].email).to.eql('zhongxiao@vikadata.com');",
                      "    pm.expect(jsonData.data[1].name).to.eql('test_contactOrganization003');",
                      "    pm.expect(jsonData.data[2].name).to.eql('test_contactOrganization002');",
                      "    pm.expect(jsonData.data[3].name).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=false&filterIds&keyword&linkId&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": "false"
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》keyword搜索出正确成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》keyword搜索出正确成员\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].name).to.eql('test_contactOrganization003');",
                      "    pm.expect(jsonData.data[1].name).to.eql('test_contactOrganization002');",
                      "    pm.expect(jsonData.data[2].name).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=&filterIds=&keyword=test&linkId&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": ""
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": "test"
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》keyword搜索出不存在成员",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》keyword搜索出不存在成员\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data).to.eql([]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=&filterIds=&keyword=不存在&linkId&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": ""
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": "不存在"
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》linkID为分享文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》linkID为分享文件ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].email).to.eql('zhongxiao@vikadata.com');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=&filterIds=&keyword=&linkId=shrvmvRmNAGPWWpnt4lLN&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": ""
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": "shrvmvRmNAGPWWpnt4lLN"
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》linkID为模板ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》linkID为模板ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].email).to.eql('zhongxiao@vikadata.com');",
                      "    pm.expect(jsonData.data[1].name).to.eql('test_contactOrganization003');",
                      "    pm.expect(jsonData.data[2].name).to.eql('test_contactOrganization002');",
                      "    pm.expect(jsonData.data[3].name).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=false&filterIds=&keyword=&linkId=tplTjH43iLKzx&searchEmail&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": "false"
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": "tplTjH43iLKzx"
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》searchEmail为true",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》searchEmail为true\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].name).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=false&filterIds=&keyword=001@vikadata.com&linkId=&searchEmail=true&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": "false"
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": "001@vikadata.com"
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": "true"
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》searchEmail为false",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》searchEmail为false\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data).to.eql([]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=false&filterIds=&keyword=001@vikadata.com&linkId=&searchEmail=false&unitIds",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": "false"
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": "001@vikadata.com"
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": "false"
                    },
                    {
                      "key": "unitIds",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "加载或搜索部门和成员》unitIds正常",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"加载或搜索部门和成员》searchEmail为false\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].name).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/loadOrSearch?all=false&filterIds=&keyword=&linkId=&searchEmail=&unitIds=1611253131150286851",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "loadOrSearch"],
                  "query": [
                    {
                      "key": "all",
                      "value": "false"
                    },
                    {
                      "key": "filterIds",
                      "value": ""
                    },
                    {
                      "key": "keyword",
                      "value": ""
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    },
                    {
                      "key": "searchEmail",
                      "value": ""
                    },
                    {
                      "key": "unitIds",
                      "value": "1611253131150286851"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "全局搜索》正常搜索",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"全局搜索》正常搜索\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].originName).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/search?keyword=001&className=highLight",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "search"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "001"
                    },
                    {
                      "key": "className",
                      "value": "highLight"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "全局搜索》keyword为空",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"全局搜索》keyword为空\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.teams[0].originName).to.eql('小组A');",
                      "    pm.expect(jsonData.data.members.length).to.eql(4);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/search?keyword=",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "search"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "全局搜索》不传keyword",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"全局搜索》不传keyword\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(500);",
                      "    pm.expect(jsonData.message).to.eql('SERVER_ERROR');",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/search",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "search"]
                }
              },
              "response": []
            },
            {
              "name": "查找组织资源》正常搜索",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查找组织资源》正常搜索\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].originName).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnit?keyword=001&className=hightLight&linkId",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnit"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "001"
                    },
                    {
                      "key": "className",
                      "value": "hightLight"
                    },
                    {
                      "key": "linkId",
                      "value": ""
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查找组织资源》linkId为分享文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查找组织资源》linkId为分享文件ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].originName).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnit?keyword=001&className=hightLight&linkId=shrvmvRmNAGPWWpnt4lLN",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnit"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "001"
                    },
                    {
                      "key": "className",
                      "value": "hightLight"
                    },
                    {
                      "key": "linkId",
                      "value": "shrvmvRmNAGPWWpnt4lLN"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "查找组织资源》linkId为模板ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"查找组织资源》linkId为模板ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.members[0].originName).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnit?keyword=001&className=hightLight&linkId=tplTjH43iLKzx",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnit"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "001"
                    },
                    {
                      "key": "className",
                      "value": "hightLight"
                    },
                    {
                      "key": "linkId",
                      "value": "tplTjH43iLKzx"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "准确查询部门与成员》传入完整成员名",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"准确查询部门与成员》传入完整成员名\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].name).to.eql('test_contactOrganization001');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"linkId\": \"\",\n  \"names\": \"test_contactOrganization001\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnitInfoVo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnitInfoVo"]
                }
              },
              "response": []
            },
            {
              "name": "准确查询部门与成员》传入不完整成员名",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"准确查询部门与成员》传入不完整成员名\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data).to.eql([]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"linkId\": \"\",\n  \"names\": \"001\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnitInfoVo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnitInfoVo"]
                }
              },
              "response": []
            },
            {
              "name": "准确查询部门与成员》linkId为分享文件ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"准确查询部门与成员》linkId为模板ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data).to.eql([]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"linkId\": \"shrvmvRmNAGPWWpnt4lLN\",\n  \"names\": \"001\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnitInfoVo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnitInfoVo"]
                }
              },
              "response": []
            },
            {
              "name": "准确查询部门与成员》linkId为模板ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"准确查询部门与成员》linkId为模板ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data).to.eql([]);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"linkId\": \"tplTjH43iLKzx\",\n  \"names\": \"001\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/searchUnitInfoVo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "searchUnitInfoVo"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Internal Service - Node Permission Interface",
          "item": [
            {
              "name": "Get permission set for multiple nodes > NodeIds supports all types of files",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get permission set for multiple nodes > NodeIds supports all types of files\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data[0].nodeId).to.eql('dsbYSydXkAuTUuMeP5');",
                      "    pm.expect(jsonData.data[1].nodeId).to.eql('dstv42RDXTCgQz2VaA');",
                      "    pm.expect(jsonData.data[2].nodeId).to.eql('foddHliTyTCXM');",
                      "    pm.expect(jsonData.data[3].nodeId).to.eql('fomASM2KEVZGom9quN');",
                      "    pm.expect(jsonData.data[4].nodeId).to.eql('mirwjwBcJltQEXhv4J');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeIds\": [\"foddHliTyTCXM\",\"mirwjwBcJltQEXhv4J\", \"dsbYSydXkAuTUuMeP5\", \"fomASM2KEVZGom9quN\", \"dstv42RDXTCgQz2VaA\"],\n  \"shareId\": \"\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/node/permission",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "node", "permission"]
                }
              },
              "response": []
            },
            {
              "name": "Get permission set for multiple nodes > shareId not null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get permission set for multiple nodes > shareId not null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data[0].nodeId).to.eql('dsbYSydXkAuTUuMeP5');",
                      "    pm.expect(jsonData.data[1].nodeId).to.eql('dstv42RDXTCgQz2VaA');",
                      "    pm.expect(jsonData.data[2].nodeId).to.eql('foddHliTyTCXM');",
                      "    pm.expect(jsonData.data[3].nodeId).to.eql('fomASM2KEVZGom9quN');",
                      "    pm.expect(jsonData.data[4].nodeId).to.eql('mirwjwBcJltQEXhv4J');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeIds\": [\"foddHliTyTCXM\",\"mirwjwBcJltQEXhv4J\", \"dsbYSydXkAuTUuMeP5\", \"fomASM2KEVZGom9quN\", \"dstv42RDXTCgQz2VaA\"],\n  \"shareId\": \"shrUgK6i81M1qFxJsa2DY\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/node/permission",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "node", "permission"]
                }
              },
              "response": []
            },
            {
              "name": "Get Node permission",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get Node permission\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodeId).to.eql('fodD32Up0NQ0K');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/node/fodD32Up0NQ0K/permission",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "node",
                    "fodD32Up0NQ0K",
                    "permission"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Node permission > shareId not null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get Node permission > shareId not null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.nodeId).to.eql('fodD32Up0NQ0K');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/node/fodD32Up0NQ0K/permission?shareId=shrUgK6i81M1qFxJsa2DY",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "internal",
                    "node",
                    "fodD32Up0NQ0K",
                    "permission"
                  ],
                  "query": [
                    {
                      "key": "shareId",
                      "value": "shrUgK6i81M1qFxJsa2DY"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Basic module - verify action module interface",
          "item": [
            {
              "name": "Send email verification code",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"发送邮箱验证码接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"email\":\"test111@vikadata.com\",\r\n\"type\":\"1\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/mail/code",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "base", "action", "mail", "code"]
                }
              },
              "response": []
            },
            {
              "name": "Send SMS verification code",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"发送短信验证码接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(250);\r",
                      "    pm.expect(jsonData.message).to.eql('人机验证失败');\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"areaCode\": \"+86\",\r\n  \"phone\": \"13400008921\",\r\n  \"type\": 1\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/sms/code",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "base", "action", "sms", "code"]
                }
              },
              "response": []
            },
            {
              "name": "Mobile verification code verification",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"验证码错误\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(231);\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"areaCode\":  \"+86\" ,\r\n   \"phone\":  \"13400008921\" ,\r\n   \"type\": 9 ,\r\n   \"code\":\"687321\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/sms/code/validate",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "base",
                    "action",
                    "sms",
                    "code",
                    "validate"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "账户中心模块_用户管理界面",
          "item": [
            {
              "name": "查询账户积分信息",
              "item": [
                {
                  "name": "查询账户积分信息",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// pm.test(\"查询账户积分信息\", function () {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.success).to.eql(true);",
                          "//     pm.expect(jsonData.code).to.eql(200);",
                          "//     pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "",
                          "//     //pm.expect(jsonData.data.totalIntegral).to.eql(\"98200\");",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/integral",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "integral"]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "uskx1HPvoUXjF07tGXw2a5g",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "逐页查询积分收支明细",
              "item": [
                {
                  "name": "逐页查询积分收支明细》查询全部数据",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// pm.test(\"逐页查询积分收支明细》查询全部数据\", function () {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.success).to.eql(true);",
                          "//     pm.expect(jsonData.code).to.eql(200);",
                          "//     pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "",
                          "//     // pm.expect(jsonData.data.total).to.eql(99);",
                          "//     pm.expect(jsonData.data.pageNum).to.eql(1);",
                          "//     pm.expect(jsonData.data.pageSize).to.eq(20);",
                          "//     // pm.expect(jsonData.data.size).to.eql(99);",
                          "//     // pm.expect(jsonData.data.records[0].alterValue).to.eql(\"200\");",
                          "//     // pm.expect(jsonData.data.records[1].alterValue).to.eql(\"200\");",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/integral/records",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "integral", "records"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "逐页查询积分收支明细》查询单页数据",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "// pm.test(\"逐页查询积分收支明细》查询单页数据\", function () {",
                          "//     var jsonData = pm.response.json();",
                          "//     pm.expect(jsonData.success).to.eql(true);",
                          "//     pm.expect(jsonData.code).to.eql(200);",
                          "//     pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "",
                          "//     // pm.expect(jsonData.data.total).to.eql(2);",
                          "//     pm.expect(jsonData.data.pageNum).to.eql(1);",
                          "//     // pm.expect(jsonData.data.size).to.eql(2);",
                          "//     // pm.expect(jsonData.data.records[0].alterValue).to.eql(\"200\");",
                          "//     // pm.expect(jsonData.data.records[1].alterValue).to.eql(\"200\");",
                          "// });"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/integral/records?pageObjectParams=%7B%22pageSize%22%3A4%2C%22order%22%3A%22createdAt%22%2C%22sort%22%3A%22desc%22%2C%22pageNo%22%3A1%7D",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "integral", "records"],
                      "query": [
                        {
                          "key": "pageObjectParams",
                          "value": "%7B%22pageSize%22%3A4%2C%22order%22%3A%22createdAt%22%2C%22sort%22%3A%22desc%22%2C%22pageNo%22%3A1%7D"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "uskx1HPvoUXjF07tGXw2a5g",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "填写邀请码奖励",
              "item": [
                {
                  "name": "注册",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 生成随机邮箱",
                          "function getRandomString(length = 32) {",
                          "　　const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'",
                          "　　const maxLength = chars.length",
                          "　　let str = ''",
                          "　　for (let i = 0; i < length; i++) {",
                          "　　　　str = str + chars.charAt(Math.floor(Math.random() * maxLength))",
                          "　　}",
                          "　　return str",
                          "}",
                          "",
                          "const username = 'test_inviteCode_' + getRandomString(5) + '@vikadata.com';",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + username,",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置邮箱与验证码",
                          "    pm.globals.set(\"user_email\", username);",
                          "    pm.globals.set(\"email_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"注册\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"{{user_email}}\",\n    \"type\": \"email_code\",\n    \"credential\": \"{{email_code}}\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "填写邀请码奖励",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"填写邀请码奖励\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Cookie",
                        "value": "SESSION=ODg2NjYyMzktYzdkMS00ZGQ0LWFkNGMtN2Y1NDExZjkwNzQ3; Path=/; Domain=vika.ltd; HttpOnly; Expires=Sun, 08 Jan 2023 09:31:43 GMT;",
                        "type": "text",
                        "disabled": true
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"inviteCode\": \"78208333\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/invite/reward",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "invite", "reward"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "退登",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "注册",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 生成随机邮箱",
                          "function getRandomString(length = 32) {",
                          "　　const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'",
                          "　　const maxLength = chars.length",
                          "　　let str = ''",
                          "　　for (let i = 0; i < length; i++) {",
                          "　　　　str = str + chars.charAt(Math.floor(Math.random() * maxLength))",
                          "　　}",
                          "　　return str",
                          "}",
                          "",
                          "const username = 'test_inviteCode_' + getRandomString(5) + '@vikadata.com';",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + username,",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置邮箱与验证码",
                          "    pm.globals.set(\"user_email\", username);",
                          "    pm.globals.set(\"email_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"注册\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"{{user_email}}\",\n    \"type\": \"email_code\",\n    \"credential\": \"{{email_code}}\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "填写邀请码奖励》邀请码不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"填写邀请码奖励》邀请码不存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(805);",
                          "    pm.expect(jsonData.message).to.eql('邀请码无效');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Cookie",
                        "value": "SESSION=ODg2NjYyMzktYzdkMS00ZGQ0LWFkNGMtN2Y1NDExZjkwNzQ3; Path=/; Domain=vika.ltd; HttpOnly; Expires=Sun, 08 Jan 2023 09:31:43 GMT;",
                        "type": "text",
                        "disabled": true
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"inviteCode\": \"10000000\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/invite/reward",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "invite", "reward"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "退登",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "获取已启用的实验函数",
              "item": [
                {
                  "name": "获取已启用的实验函数》查看实验性功能",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取已启用的实验函数》查看所有实验性功能\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "",
                          "    pm.expect(jsonData.data.keys[0]).to.eql(\"robot\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": []
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features?spaceId=spcX8aQFF6obE",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"],
                      "query": [
                        {
                          "key": "spaceId",
                          "value": "spcX8aQFF6obE"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取已启用的实验函数》空间站被删除or不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取已启用的实验函数》空间站被删除or不存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "",
                          "    pm.expect(jsonData.data.keys[0]).to.eql(\"robot\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": []
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features?spaceId=spcxxxxxxxx",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"],
                      "query": [
                        {
                          "key": "spaceId",
                          "value": "spcxxxxxxxx"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "获取已启用的实验函数》spaceId为空",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"获取已启用的实验函数》spaceId为空\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "",
                          "    pm.expect(jsonData.data.keys[0]).to.eql(\"robot\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": []
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features?spaceId=",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"],
                      "query": [
                        {
                          "key": "spaceId",
                          "value": ""
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "更新实验室功能的使用状态",
              "item": [
                {
                  "name": "更新实验室功能的使用状态》开启视图配置不协同",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更新实验室功能的使用状态》开启视图配置不协同\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isEnabled\": true,\n  \"key\": \"view_manual_save\",\n  \"spaceId\": \"spc3XjdbKkfVP\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更新实验室功能的使用状态》关闭视图配置不协同",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更新实验室功能的使用状态》关闭视图配置不协同\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isEnabled\": false,\n  \"key\": \"view_manual_save\",\n  \"spaceId\": \"spc3XjdbKkfVP\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更新实验室功能的使用状态》实验室功能类型为空or不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更新实验室功能的使用状态》实验室功能类型为空or不存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(955);",
                          "    pm.expect(jsonData.message).to.eql('feature type does not exist');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isEnabled\": true,\n  \"key\": \"not_exist\",\n  \"spaceId\": \"spc3XjdbKkfVP\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更新实验室功能的使用状态》空间站被删除or不存在",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更新实验室功能的使用状态》空间站被删除or不存在\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(403);",
                          "    pm.expect(jsonData.message).to.eql('抱歉,您已被移出此空间,不允许操作');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isEnabled\": true,\n  \"key\": \"view_manual_save\",\n  \"spaceId\": \"spcxxxxxxxxx\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更新实验室功能的使用状态》space id为空",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更新实验室功能的使用状态》space id为空\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(952);",
                          "    pm.expect(jsonData.message).to.eql('space id must not be empty');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isEnabled\": true,\n  \"key\": \"view_manual_save\",\n  \"spaceId\": \"\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/labs/features",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "labs", "features"]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "编辑用户信息",
              "item": [
                {
                  "name": "登陆",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"登陆\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"test_update_userInfo@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "编辑用户信息》修改nick name",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"编辑用户信息》修改nick name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"init\": false,\n  \"nickName\": \"test_update_userInfo\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/update",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "update"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "编辑用户信息》修改默认头像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"编辑用户信息》修改nick name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"init\": false,\n  \"avatarColor\": 8,\n  \"avatar\": null\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/update",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "update"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "编辑用户信息》修改自定义头像",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"编辑用户信息》修改nick name\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"init\": false,\n  \"avatarColor\": null,\n  \"avatar\": \"https://s1.vika.cn/space/2023/02/09/0aa8aab3917541238922e22bdf7ca13a\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/update",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "update"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "退登",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usk2GVIL9j01AwvaUGM5p9O",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "查询用户是否与指定邮件一致",
              "item": [
                {
                  "name": "查询用户是否与指定邮件一致》一致",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询用户是否与指定邮件一致》一致\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data).to.eql(true);",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"zhongxiao@vikadata.com\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/validate/email",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "validate", "email"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "查询用户是否与指定邮件一致》不一致",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"查询用户是否与指定邮件一致》不一致\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data).to.eql(false);",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"pengjin@vikadata.com\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/validate/email",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "validate", "email"]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "找回密码",
              "item": [
                {
                  "name": "找回密码》验证码不正确",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"找回密码》验证码不正确\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(231);",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"areaCode\": \"\",\n  \"code\": \"000000\",\n  \"password\": \"vika1234\",\n  \"type\": \"email_code\",\n  \"username\": \"test_retrievePwd@vikadata.com\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/retrievePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "retrievePwd"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "找回密码》密码长度不足",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"13400006201\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"etrievePwd_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"找回密码》密码长度不足\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(305);",
                          "    pm.expect(jsonData.message).to.eql('密码长度需为8-24位');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"areaCode\": \"+86\",\n  \"code\": \"{{etrievePwd_code}}\",\n  \"password\": \"vika\",\n  \"type\": \"sms_code\",\n  \"phone\": \"13400006201\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/retrievePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "retrievePwd"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "找回密码》密码长度超限",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"13400006201\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"etrievePwd_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"找回密码》密码长度超限\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.code).to.eql(305);",
                          "    pm.expect(jsonData.message).to.eql('密码长度需为8-24位');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"areaCode\": \"+86\",\n  \"code\": \"{{etrievePwd_code}}\",\n  \"password\": \"vika_12345678901234567890\",\n  \"type\": \"sms_code\",\n  \"phone\": \"13400006201\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/retrievePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "retrievePwd"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "找回密码》邮箱找回密码成功",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_retrievePwd@vikadata.com\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"etrievePwd_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"找回密码》邮箱找回密码成功\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"areaCode\": \"\",\n  \"code\": \"{{etrievePwd_code}}\",\n  \"password\": \"vika1234\",\n  \"type\": \"email_code\",\n  \"username\": \"test_retrievePwd@vikadata.com\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/retrievePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "retrievePwd"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "找回密码》手机找回密码成功",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"13400002679\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"etrievePwd_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"找回密码》手机找回密码成功\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"areaCode\": \"+86\",\n  \"code\": \"{{etrievePwd_code}}\",\n  \"password\": \"vika1234\",\n  \"type\": \"sms_code\",\n  \"phone\": \"13400002679\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/retrievePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "retrievePwd"]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "更改密码",
              "item": [
                {
                  "name": "gm发送验证码",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"gm发送验证码\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口_邮箱",
                          "const createRequestMail = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_retrievePwd@vikadata.com\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestMail, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"updatePwd_email\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          "// 调用马甲号生成接口_手机",
                          "const createRequestPhone = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"13400002679\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestPhone, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"updatePwd_phone\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "登陆",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"登陆\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口",
                          "const createRequest = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_retrievePwd@vikadata.com\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequest, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"updatePwd\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"test_retrievePwd@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更改密码》邮箱",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更改密码》邮箱\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"{{updatePwd_email}}\",\n  \"password\": \"vika1234\",\n  \"type\": \"email_code\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/updatePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "updatePwd"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "更改密码》手机",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"更改密码》手机\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"{{updatePwd_phone}}\",\n  \"password\": \"vika1234\",\n  \"type\": \"sms_code\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/updatePwd",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "updatePwd"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "退登",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "uskr2r2xGcwWihYk5nxhcQF",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Billing Event Api",
          "item": [
            {
              "name": "fetch event list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取计费列表接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/events/active",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "events", "active"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Account Center Module_User Management Interface",
          "item": [
            {
              "name": "Account Center Module_User Management Interface-02.4",
              "item": [
                {
                  "name": "login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"登陆\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Query whether have logged in",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Query whether have logged in\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usky0IDpvjlyUNKNPjqgghP",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/internal/user/session",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "internal", "user", "session"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "log out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Unbind the third-party account>Ding Talk",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Unbind the third-party account>Ding Talk\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2GVIL9j01AwvaUGM5p9O",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": 0\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/unbind",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "unbind"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Unbind the third-party account>WeChat",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Unbind the third-party account>WeChat\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2GVIL9j01AwvaUGM5p9O",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": 1\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/unbind",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "unbind"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Unbind the third-party account>QQ",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Unbind the third-party account>QQ\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk2GVIL9j01AwvaUGM5p9O",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": 2\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/unbind",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "unbind"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "gm code API",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"gm code API\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口_邮箱",
                          "const createRequestMail = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_unbind_mail_or_phone@vikadata.com\" + \"?type=3\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestMail, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"unbind_email\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "log out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Unbind mail",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Unbind mail\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usknSqDQUGOtMhsMkQK6sYA",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"{{unbind_email}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/unbindEmail",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "unbindEmail"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "gm code API",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"gm code API\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "// 调用马甲号生成接口_邮箱",
                          "const createRequestMail = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_unbind_mail_or_phone@vikadata.com\" + \"?type=1\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestMail, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"bind_email\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "log out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Bind mail",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Bind mail\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usknSqDQUGOtMhsMkQK6sYA",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"test_unbind_mail_or_phone@vikadata.com\",\n  \"code\": \"{{bind_email}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/bindEmail",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "bindEmail"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "gm code API",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"gm code API\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "",
                          "",
                          "// 调用马甲号生成接口_手机",
                          "const createRequestPhone = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"13400002681\" + \"?type=6\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestPhone, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"unbind_phone\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "log out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Unbind phone",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Unbind phone\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usknSqDQUGOtMhsMkQK6sYA",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"{{unbind_phone}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/unbindPhone",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "unbindPhone"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "gm code API",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"gm code API\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "var environmentURL = pm.environment.get(\"baseURL\"); ",
                          "",
                          "",
                          "// 调用马甲号生成接口_手机",
                          "const createRequestPhone = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"13400002681\" + \"?type=5\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestPhone, function (err, response) {",
                          "",
                          "    // 设置验证码",
                          "    pm.globals.set(\"bind_phone\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{   \n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "log out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "bind phone",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"bind phone\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usknSqDQUGOtMhsMkQK6sYA",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"areaCode\": \"+86\",\n    \"phone\": \"13400002681\",\n    \"code\": \"{{bind_phone}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/user/bindPhone",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "user", "bindPhone"]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usky0IDpvjlyUNKNPjqgghP",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "Apply for cancellation of user account",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"已经注销的账号再次注销\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(500);\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskM08iBSQcbjCrNzRLtjza",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "c",
                    "value": "",
                    "type": "text",
                    "disabled": true
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/applyForClosing",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "applyForClosing"]
                }
              },
              "response": []
            },
            {
              "name": "Bind mail",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"验证码过期时接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(231);\r",
                      "    pm.expect(jsonData.message).to.eql('未获取验证码或已过期，请重新获取');\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskuu9xRlgXhxlnDlaMGiDP",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"code\": \"123456\",\r\n  \"email\": \"test9717@vikadata.com\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/bindEmail",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "bindEmail"]
                }
              },
              "response": []
            },
            {
              "name": "Bind a new phone",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"手机号码已注册\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(231);\r",
                      "    pm.expect(jsonData.message).to.eql('未获取验证码或已过期，请重新获取');\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskuu9xRlgXhxlnDlaMGiDP",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"code\": \"087305\",\r\n  \"areaCode\":\"+86\",\r\n  \"phone\":\"13400009718\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/bindPhone",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "bindPhone"]
                }
              },
              "response": []
            },
            {
              "name": "Verify whether the account can be cancelled",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"验证账号可以进行注销\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskuu9xRlgXhxlnDlaMGiDP",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/checkForClosing",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "checkForClosing"]
                }
              },
              "response": []
            },
            {
              "name": "Apply for account restoration",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"未进行申请注销\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(963);\r",
                      "    pm.expect(jsonData.message).to.eql('Cancellation cannot be cancelled if no cancellation application has been initiated');\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskuu9xRlgXhxlnDlaMGiDP",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/cancelClosing",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "cancelClosing"]
                }
              },
              "response": []
            },
            {
              "name": "Delete Active Space Cache",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"删除空间站\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk8vrRccNYZZ3XNp5zpCQK",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/delActiveSpaceCache",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "delActiveSpaceCache"]
                }
              },
              "response": []
            },
            {
              "name": "Query whether users bind mail",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"检查是否账号已经绑定邮箱\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk8vrRccNYZZ3XNp5zpCQK",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/email/bind",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "email", "bind"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Application management_Application management related service interface",
          "item": [
            {
              "name": "Query the application instance list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"服务查询接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true)\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/appInstances?spaceId",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "appInstances"],
                  "query": [
                    {
                      "key": "spaceId",
                      "value": null,
                      "description": "spcrMy6a6xuqZ"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "App Store_Relevant service interfaces of the application store",
          "item": [
            {
              "name": "Query application list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"应用服务相关接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    pm.expect(jsonData.success).to.eql(true)\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/appstores/apps",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "appstores", "apps"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Authorization related interface",
          "item": [
            {
              "name": "login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"登录接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(251);\r",
                      "    pm.expect(jsonData.message).to.eql('二次验证');\r",
                      "    pm.expect(jsonData.success).to.eql(false)\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"areaCode\":\"+86\",\r\n\"credential\":\"vika0809\",\r\n\"data\":\"%7B%22a%22%3A%22FFFF0N00000000008B7D%22%2C%22c%22%3A%22FFFF0N00000000008B7D%3Anvc_login%3A1678018112780%3A0.37920567155125284%22%2C%22d%22%3A%22nvc_login%22%2C%22j%22%3A%7B%22test%22%3A1%7D%2C%22h%22%3A%7B%22umidToken%22%3A%22G9DB20FEBAB03CC813EFB09FFFDC6BD93D0C4E083815CD51B70%22%7D%2C%22b%22%3A%22225!KuvELozWooiK1LH53pDodRBXi%2BljrI0qkMu8CMZv9VUZgrGHJr6doP9tILEiEluTt0efsZxZi%2FX8Q97q12GL4Un6zh75lTWykHDSMTK3K1o4vNNXUV2MtgtCbgw2WhdLoWKnoJiRDG%2F%2Bf460Qk0UDMzhfiN2TEVuqHfeSJ3wDGHzfeG5ui07h8dPfI5toG4KjcI4oL3jDGHzfeGdQEWdiQZu1I5Zb3SdjcfxejAvKam1QeiRuKcGK%2FJzMuBZHObrMAzSnquUKEZOP4W2p3VuD65nILdCbU4Kjcf4oLijDlH%2Bfei0QzKRtEjsDi%2BwUKSNwAf9VnGiHvs12eWOfWcYe%2FHOWKvX3ZpCAXJMHwaVbNNR2bCukTeY9y2YR12FdInmYHmg5AxDekH8BcjRWiUC4yHMfK%2FZ0tDGYXgnhxw%2B4d%2FOQxijGpTf4JPoq%2BdUU%2BhOwAZTgnRUbkyRQMlPCjDqbgPfuvrdFNlSA5m04hxzbvL1x4nPWupIggN8pdKaTObuBnXvhSi44FFO8nRvuuD142EP11XZTNpMMLH3bc3o%2FdEIsx6juWCdDrd4fizC2wuiPefaKL3jDGH%2BfTPjtaOMAi3DE2sNo9cLSOwZHI%2BpWcy19dj1UuMIRwdd8MTrhD3tOAx8SewirHM2zYxBmCIckhKfqwO0rclWfDCd2by0RiS0YVJPwxI408OPNmkFYps%2F6VgcxeG0R1U1SrJ8KileGpA6DIy3AMjZFJuAr1NqW8JfvCFHA%2FieTkNNhHoJIS3OHW1Q1rsfxLb3hhYv3gvb25x5fCev%2FmGAmsw15oA4DqDz1cJ3AqvYEBnK955VQRAfmh0z83qXhByy%2Fr%2FGogsnLvfB27NJXLQBQU4LuXKatj%2FnSKeuYc93OkxrJMmA%2BhfkYFtm8AwDtmJGdkEVgknGchUSCFEYGE1s9RZj%2F74a%2F0OrEyztMsftlP9oe1zpSPJiZOK1%2Fqg%2BvMj3IhysbpeWZusoen4075zEvNR%2BqF3%2BzARs%2F3BHj7Z2RL859bB0iO9HrnpAB7DUMjSsxp50idj%2FRtfSe9Zfx475kYLwOWkLWlc7rXa0lo2ORiOgXKMCduQmsdgOhhXgjRR74znIofdnYWHUmG6eNbXMujEBBLfszG2%2Ftyx3Kjqqp7a8D362yFR96xLx1tSMGL2LHFqzAdvXX7RrlzmQuV5bGA9maNGR5lwRhtZTrHhnbNX5AzaEui12WwfqGW9VwG9ZZC%2FMTduOAup0bH%2FQHnnnjU1sBlVNMHBkaUL9w1HjRD4VSnGlxMXO7YG34oBdA7fQGVeqxkp852d%2B7PA%2BoXHh%2B%2B%2BaiYRN61sOZcC7wxYcvSOphvFx6F2jWy3QA%2BSKgIECfP%2BnIrlG3XHMqBAdOQb1m99SHhfKkUqDwRJxs1dcsiGUfwBaGD%2BhItoEPAWsDbui%2FgPkknjBrvb4iWLuhw9vKqduaIeBB21iXw8q6PWGxYBKP7avYF2HbIvyuKR6krvo0nyFhwLP4wqsUogd0ZSITncSQV9vciiHgVx5IGuJ9Rq%2BDeJSL8h6NJg90H7pc2ucX09NtdUbFwp%2B4LtVNUeP39ufWa5vvk9E9XgK%2FUgrjM4xdIFNziPIekWz3j5TnJt2K2wIjzwwXa1V1CC6t1CPVeGZzi6o%2FGTIWV2W5T%2BzdgmZg%2FPrDKrTmfBtoRUWaN0jhM36W9ymFKMW6Ku%2F32yC7rgWyXSPSDvrzvyGXtOKh0Ga9%2BVEXmcPag3G9e60FQbiNR5dQ5QW93dEqNfFHpedkaM%2F4JtcJjUqfUXkDmXKSvqLNErx0E6Jy0KQ7BlJlKhqPl5R6YnzvkMWlClqGoQm3r%2Fl4tiHsxO2IcFHSXNnUAUQwLAnScAkhjK5GRFNH3sKOhhlo6jwavUGyBE1lZsCtXFXoDv8gazlCTSgHAUdWVndAi6DjjK%2FZpBgari%2FVc9b%2Fq6%2B3xupxSVUCVqovxeKOKFAjpnoCNBImQ6fXky23OCcWHylloGamDf2soaSNriJ7123YDvVFvCwEW4KwsIZ%2F9t2wlhpTLExWS5UEhg92ntxe2%2BWsCLR9j5tnq9q3ItkvaydJ3p0%2B2CzrzasLAD470oqrjT686NAHxz5qS6xlSZWEZ6G1i4Ug629%2FSeooQ55eaALxeH7NEBonkVFTbFq2gyKUmAl5RIwRUJVH1EbMZwWMFfVM7CYGHttLlTI6YfaIncNDs2ZB6kL%2BKH8Y3I25rll6KxCNvR7Z4KGT6Q8VTQME%2BmSpz2JNoXSPZEOh723iglCsoMgTgxIXzT0%2Bb2QmGG539NJANwZiFwoSLPQiohkl9LfIyTNndJNXp%2BeWaH9uLvpKOxHmpu3AaL1ecoutRHICyu1Mm10NJuKlj%3D%3D%22%2C%22e%22%3A%22ILSO1-3V-U3hrcLdLetcT4tWa-rFLDhZ0iBGfVT2xsc2ufvery5t6e1OxIGoUHpc7a0IbkE_0FA-F5WgiEpV7aeWlyQyxr1LL83v6PCoc3YbWdFNpRGiSow97HJFmhSolqL2iP8Yg3b6GvpNCl1IVNEKZVZx-S-ZWzBJ_IeEp5x7EtMkMSX59E6Lcd2EKOX8%22%7D\",\r\n\"type\": \"password\",\r\n  \"username\": \"13510498812\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"退出接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.success).to.eql(true)\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            },
            {
              "name": "get personal information",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"个人基本信息接口\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/user/me",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "user", "me"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Billing Order",
          "item": [
            {
              "name": "Create Order",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create Order\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.status).to.eql(\"unpaid\");",
                      "",
                      "    pm.globals.set(\"orderId\", jsonData.data.orderNo);",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"spaceId\": \"spckMxUfHg0UT\",\n    \"product\": \"SILVER\",\n    \"seat\": 2,\n    \"startDate\": \"2023-03-06\",\n    \"month\": 1,\n    \"remark\": \"APItest_new_buy\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders"]
                }
              },
              "response": []
            },
            {
              "name": "Test run order",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Test run order\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.spaceId).to.eql(\"spckMxUfHg0UT\");    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"action\": \"RENEW\",\n  \"month\": 1,\n  \"product\": \"SILVER\",\n  \"seat\": 2,\n  \"spaceId\": \"spckMxUfHg0UT\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders/dryRun/generate",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders", "dryRun", "generate"]
                }
              },
              "response": []
            },
            {
              "name": "Get Order Details",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get Order Details\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.status).to.eql(\"unpaid\");",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders/{{orderId}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders", "{{orderId}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get Order Payment Status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get Order Payment Status\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.status).to.eql(\"unpaid\");",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders/{{orderId}}/paid",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders", "{{orderId}}", "paid"]
                }
              },
              "response": []
            },
            {
              "name": "Check Order Payment Status>cancel",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Check Order Payment Status>cancel\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.status).to.eql(\"canceled\");",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders/{{orderId}}/paidCheck",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders", "{{orderId}}", "paidCheck"]
                }
              },
              "response": []
            },
            {
              "name": "Create Payment Order",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create Payment Order\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"orderNo\": \"SILVER\",\n  \"payChannel\": \"wx_pub_qr\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders/{{orderId}}/payment",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders", "{{orderId}}", "payment"]
                }
              },
              "response": []
            },
            {
              "name": "Check Order Payment Status>unpaid",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Check Order Payment Status>unpaid\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.status).to.eql(\"unpaid\");",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/orders/{{orderId}}/paidCheck",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "orders", "{{orderId}}", "paidCheck"]
                }
              },
              "response": []
            },
            {
              "name": "fetch event list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"fetch event list\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/events/active",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "events", "active"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Basics - Attachment upload token interface",
          "item": [
            {
              "name": "upload presigned URL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"count\":\"1\",\r\n\"nodeId\":\"dstTmXL1sDw6cEiJx2\",\r\n\"type\":\"2\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/asset/upload/preSignedUrl",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "asset", "upload", "preSignedUrl"]
                }
              },
              "response": []
            },
            {
              "name": "upload resource token assets",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"upload token for front-end direct upload\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.status).to.eql(500);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"prefixalScope\": 0,\r\n  \"spaceId\": \"spcrMy6a6xuqZ\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/asset/widgets/dstTmXL1sDw6cEiJx2/uploadToken",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "asset",
                    "widgets",
                    "dstTmXL1sDw6cEiJx2",
                    "uploadToken"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get upload presigned URL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskFhkQXvs7FcyKL7AICDOO",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"count\": 1,\r\n  \"nodeId\": \"dst509PrCNVy78AmYA\",\r\n  \"type\": 2\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/asset/upload/preSignedUrl",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "asset", "upload", "preSignedUrl"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Basic module - verify action module interface",
          "item": [
            {
              "name": "Email verification code verification",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"upload token for front-end direct upload\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(500);\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "    pm.expect(jsonData.message).to.eql(\"The verification code cannot be empty\");\r",
                      "    pm.expect(jsonData.data).to.eql(null);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"email\":\"pengjin@vikadata.com\",\r\n\"code\":\"\"\r\n\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/email/code/validate",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "base",
                    "action",
                    "email",
                    "code",
                    "validate"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Invitation temporary code verification",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Invitation temporary code verification\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(517);\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "    pm.expect(jsonData.message).to.eql(\"非法邀请链接\");\r",
                      "    pm.expect(jsonData.data).to.eql(null);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"nodeId\":\"dst509PrCNVy78AmYA\",\r\n\"token\":\"b10e5e36cd7249bdaeab3e424308deed\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/invite/valid",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "base", "action", "invite", "valid"]
                }
              },
              "response": []
            },
            {
              "name": "Send email verification code",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Send email verification code\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "    pm.expect(jsonData.data).to.eql(null);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"email\":\"test001@vikadata.com\",\r\n\"type\":3\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/mail/code",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "base", "action", "mail", "code"]
                }
              },
              "response": []
            },
            {
              "name": "Send SMS verification code",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Send SMS verification code\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.data).to.eql(null);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"areaCode\":\"+86\",\r\n \"phone\":\"18867234323\",\r\n \"type\":2,\r\n \"data\":\"BornForFuture\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/sms/code",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "base", "action", "sms", "code"]
                }
              },
              "response": []
            },
            {
              "name": "Mobile verification code verification",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Mobile verification code verification\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(500);\r",
                      "    pm.expect(jsonData.success).to.eql(false);\r",
                      "    pm.expect(jsonData.message).to.eql(\"The verification code cannot be empty\");\r",
                      "    pm.expect(jsonData.data).to.eql(null);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk6zWnpR8ReurmO10qdr51",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"areaCode\":\"+86\",\r\n \"phone\":\"18867234323\",\r\n \"code\":\"\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/base/action/sms/code/validate",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "base",
                    "action",
                    "sms",
                    "code",
                    "validate"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "workbench-node share API",
          "item": [
            {
              "name": "workbench-node share API",
              "item": [
                {
                  "name": "Update node share setting>can read",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Update node share setting>can read\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"props\": \"{\\\"onlyRead\\\":true}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/updateShare/dstCrvGwjpHzN8XGVd",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "updateShare",
                        "dstCrvGwjpHzN8XGVd"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update node share setting>can edit",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Update node share setting>can edit\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"props\": \"{\\\"canBeEdited\\\":true}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/updateShare/dstCrvGwjpHzN8XGVd",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "updateShare",
                        "dstCrvGwjpHzN8XGVd"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update node share setting>can be stored",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Update node share setting>can be stored\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.globals.set(\"share_id\", jsonData.data.shareId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"props\": \"{\\\"canBeStored\\\":true}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/updateShare/dstCrvGwjpHzN8XGVd",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "updateShare",
                        "dstCrvGwjpHzN8XGVd"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Sotre share data",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Sotre share data\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "",
                          "    pm.globals.set(\"store_node_id\", jsonData.data.nodeId);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"shareId\": \"shrq6refNxjCXwxQmntiY\",\n  \"spaceId\": \"spcJUmH65y9FE\"\n}\n",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/storeShareData",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "node", "storeShareData"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete sotre file",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete sotre file\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/delete/{{store_node_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "delete",
                        "{{store_node_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get share node info>share id is vaild",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get share node info>share id is vaild\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.shareNodeTree.nodeId).to.eql(\"dstCrvGwjpHzN8XGVd\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/readShareInfo/{{share_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "readShareInfo",
                        "{{share_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Disable node sharing",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Disable node sharing\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/disableShare/dstCrvGwjpHzN8XGVd",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "disableShare",
                        "dstCrvGwjpHzN8XGVd"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get share node info>share id is invaild",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get share node info>share id is invaild\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(414);",
                          "    pm.expect(jsonData.success).to.eql(false);",
                          "    pm.expect(jsonData.message).to.eql(\"分享链接失效\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/readShareInfo/{{share_id}}",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "readShareInfo",
                        "{{share_id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get node share info",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get node share info\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                          "    pm.expect(jsonData.data.nodeId).to.eql(\"dstCrvGwjpHzN8XGVd\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/node/shareSettings/dstCrvGwjpHzN8XGVd",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "node",
                        "shareSettings",
                        "dstCrvGwjpHzN8XGVd"
                      ]
                    }
                  },
                  "response": []
                }
              ]
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Client interface",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Get application version information",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get application version information\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.locale).to.eql(\"zh-CN\");",
                      "    pm.expect(jsonData.userInfo).to.contain(\"zhongxiao@vikadata.com\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/client/info",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "client", "info"]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Sign out\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Workbench - Node Role Api",
          "item": [
            {
              "name": "Disable role extend",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Disable role extend\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"includeExtend\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/disableRoleExtend?nodeId=dstFa4cAxZNWnTtV3C",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "disableRoleExtend"],
                  "query": [
                    {
                      "key": "nodeId",
                      "value": "dstFa4cAxZNWnTtV3C"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcJUmH65y9FE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n  \"unitId\": \"1470293994273968129\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/deleteRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "deleteRole"]
                }
              },
              "response": []
            },
            {
              "name": "Create node role>reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create node role>reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitIds\": [\n        \"1610212126939418625\"\n    ],\n    \"role\": \"reader\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/addRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "addRole"]
                }
              },
              "response": []
            },
            {
              "name": "Create node role>updater",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create node role>updater\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitIds\": [\n        \"1610213898869280769\"\n    ],\n    \"role\": \"updater\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/addRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "addRole"]
                }
              },
              "response": []
            },
            {
              "name": "Create node role>editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create node role>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitIds\": [\n        \"1610169224154710018\"\n    ],\n    \"role\": \"editor\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/addRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "addRole"]
                }
              },
              "response": []
            },
            {
              "name": "Create node role>manager",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create node role>manager\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitIds\": [\n        \"1481107937207201794\"\n    ],\n    \"role\": \"manager\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/addRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "addRole"]
                }
              },
              "response": []
            },
            {
              "name": "Get node roles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit node role>manager\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    ",
                      "    pm.expect(jsonData.data.roleUnits[0].unitId).to.eql(\"1481107937207201794\");",
                      "    pm.expect(jsonData.data.roleUnits[1].unitId).to.eql(\"1610169224154710018\");",
                      "    pm.expect(jsonData.data.roleUnits[2].unitId).to.eql(\"1610213898869280769\");",
                      "    pm.expect(jsonData.data.roleUnits[3].unitId).to.eql(\"1610212126939418625\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/listRole?nodeId=dstFa4cAxZNWnTtV3C",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "listRole"],
                  "query": [
                    {
                      "key": "nodeId",
                      "value": "dstFa4cAxZNWnTtV3C"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Batch edit role>reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch edit role>reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"role\": \"reader\",\n    \"unitIds\": [\n        \"1610212126939418625\",\n        \"1610213898869280769\",\n        \"1481107937207201794\",\n        \"1610169224154710018\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/batchEditRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "batchEditRole"]
                }
              },
              "response": []
            },
            {
              "name": "Batch edit role>editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch edit role>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"role\": \"editor\",\n    \"unitIds\": [\n        \"1610212126939418625\",\n        \"1610213898869280769\",\n        \"1481107937207201794\",\n        \"1610169224154710018\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/batchEditRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "batchEditRole"]
                }
              },
              "response": []
            },
            {
              "name": "Batch edit role> updater",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch edit role>updater\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"role\": \"updater\",\n    \"unitIds\": [\n        \"1610212126939418625\",\n        \"1610213898869280769\",\n        \"1481107937207201794\",\n        \"1610169224154710018\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/batchEditRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "batchEditRole"]
                }
              },
              "response": []
            },
            {
              "name": "Batch edit role> manager",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch edit role>manager\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"role\": \"manager\",\n    \"unitIds\": [\n        \"1610212126939418625\",\n        \"1610213898869280769\",\n        \"1481107937207201794\",\n        \"1610169224154710018\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/batchEditRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "batchEditRole"]
                }
              },
              "response": []
            },
            {
              "name": "Batch delete node role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch delete node role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitIds\": [\n        \"1610212126939418625\",\n        \"1610213898869280769\",\n        \"1481107937207201794\",\n        \"1610169224154710018\"\n    ]}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/batchDeleteRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "batchDeleteRole"]
                }
              },
              "response": []
            },
            {
              "name": "Edit node role>reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit node role>reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitId\": \"1470293994273968129\",\n    \"role\": \"reader\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/editRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "editRole"]
                }
              },
              "response": []
            },
            {
              "name": "Edit node role>editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit node role>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitId\": \"1470293994273968129\",\n    \"role\": \"editor\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/editRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "editRole"]
                }
              },
              "response": []
            },
            {
              "name": "Edit node role>updater",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit node role>updater\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitId\": \"1470293994273968129\",\n    \"role\": \"updater\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/editRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "editRole"]
                }
              },
              "response": []
            },
            {
              "name": "Edit node role>manager",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit node role>manager\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstFa4cAxZNWnTtV3C\",\n    \"unitId\": \"1470293994273968129\",\n    \"role\": \"manager\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/editRole",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "editRole"]
                }
              },
              "response": []
            },
            {
              "name": "Enable role extend",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Enable role extend\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"includeExtend\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/enableRoleExtend?nodeId=dstFa4cAxZNWnTtV3C",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "enableRoleExtend"],
                  "query": [
                    {
                      "key": "nodeId",
                      "value": "dstFa4cAxZNWnTtV3C"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Space -Admin Api",
          "item": [
            {
              "name": "Space - Sub Admin Api",
              "item": [
                {
                  "name": "Create space role",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Create space role\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"memberIds\": [\n        \"1645717236845965314\"\n    ],\n    \"resourceCodes\": [\n        \"MANAGE_WORKBENCH\",\n        \"MANAGE_TEAM\",\n        \"MANAGE_MEMBER\",\n        \"MANAGE_ROLE\",\n        \"MANAGE_SECURITY\",\n        \"MANAGE_TEMPLATE\",\n        \"MANAGE_WIDGET\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/addRole",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "addRole"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "query admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"query admin\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data.records[0].memberId).to.eql(\"1645717236845965314\");",
                          "",
                          "    pm.globals.set(\"sub_admin_id\", jsonData.data.records[0].id);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/listRole?pageObjectParams=%7B%22pageSize%22%3A12%2C%22order%22%3A%22createdAt%22%2C%22sort%22%3A%22asc%22%2C%22pageNo%22%3A1%7D",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "listRole"],
                      "query": [
                        {
                          "key": "pageObjectParams",
                          "value": "%7B%22pageSize%22%3A12%2C%22order%22%3A%22createdAt%22%2C%22sort%22%3A%22asc%22%2C%22pageNo%22%3A1%7D"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Edite space role",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Edite space role\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"{{sub_admin_id}}\",\n    \"memberId\": \"1645717236845965314\",\n    \"resourceCodes\": [\n        \"MANAGE_WORKBENCH\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/editRole",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "editRole"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "query admin detail",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"query admin detail\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data.resources[0]).to.eql('MANAGE_WORKBENCH');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/getRoleDetail?memberId=1645717236845965314",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "getRoleDetail"],
                      "query": [
                        {
                          "key": "memberId",
                          "value": "1645717236845965314"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "delete admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"delete admin\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/deleteRole/1645717236845965314",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "space",
                        "deleteRole",
                        "1645717236845965314"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "token",
                    "value": "usk8oiriC92FrEmFmahpZ6U",
                    "type": "string"
                  }
                ]
              },
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                }
              ]
            },
            {
              "name": "Space - Main Admin Api",
              "item": [
                {
                  "name": "Login",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Login\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});",
                          "",
                          "const environmentURL = pm.environment.get(\"baseURL\");",
                          "// change main admin",
                          "const createRequestMail = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_recent_nodelist@vikadata.com\" + \"?type=1\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestMail, function (err, response) {",
                          "",
                          "    pm.globals.set(\"vaildate_code\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});",
                          "// restore",
                          "const createRequestMail_restore = {",
                          "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_billing@vikadata.com\" + \"?type=1\",",
                          "    method: 'GET',",
                          "    header: ",
                          "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                          "    body: {",
                          "        mode: 'node'}",
                          "};",
                          "",
                          "pm.sendRequest(createRequestMail_restore, function (err, response) {",
                          "",
                          "    pm.globals.set(\"vaildate_code_restore\", (response.json().data));",
                          "    console.log((response.json().data));",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signIn",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signIn"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "vaildate",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"vaildate\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk8oiriC92FrEmFmahpZ6U",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"test_recent_nodelist@vikadata.com\",\n    \"code\": \"{{vaildate_code}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/base/action/email/code/validate",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "base",
                        "action",
                        "email",
                        "code",
                        "validate"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "sign out",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Sign out\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/signOut",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "signOut"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Change main admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Change main admin\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk8oiriC92FrEmFmahpZ6U",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"memberId\": 1633040349477736450\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/changeManager",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "changeManager"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get main admin info",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Get main admin info\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "    pm.expect(jsonData.data.name).to.eql('test_billing');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk8oiriC92FrEmFmahpZ6U",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/manager",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "manager"]
                    }
                  },
                  "response": []
                },
                {
                  "name": "vaildate_restore",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"vaildate_restore\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk0tH6ZmUip9UsygCY8Zk3",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "x-space-id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"email\": \"test_billing@vikadata.com\",\n    \"code\": \"{{vaildate_code_restore}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/base/action/email/code/validate",
                      "host": ["{{baseURL}}"],
                      "path": [
                        "api",
                        "v1",
                        "base",
                        "action",
                        "email",
                        "code",
                        "validate"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Change main admin_restore",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Change main admin_restore\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.success).to.eql(true);",
                          "    pm.expect(jsonData.code).to.eql(200);",
                          "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "usk0tH6ZmUip9UsygCY8Zk3",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "X-Space-Id",
                        "value": "spcRevAG3gW4p",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"memberId\": 1633021532915634177\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseURL}}/api/v1/space/changeManager",
                      "host": ["{{baseURL}}"],
                      "path": ["api", "v1", "space", "changeManager"]
                    }
                  },
                  "response": []
                }
              ]
            }
          ],
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Workbench - Field Role API",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_api_readonly@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Get multi datasheet field permission>reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get multi datasheet field permission>reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.role).to.eql('reader');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.manageable).to.eql(false);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.readable).to.eql(true);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.editable).to.eql(false);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/field/permission?dstIds=dstn5CbWUy3PG7E3t5",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "datasheet", "field", "permission"],
                  "query": [
                    {
                      "key": "dstIds",
                      "value": "dstn5CbWUy3PG7E3t5"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_api_editor@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"VIKA1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Get multi datasheet field permission>editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get multi datasheet field permission>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.role).to.eql('editor');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.manageable).to.eql(false);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.readable).to.eql(true);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.editable).to.eql(true);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/field/permission?dstIds=dstn5CbWUy3PG7E3t5",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "datasheet", "field", "permission"],
                  "query": [
                    {
                      "key": "dstIds",
                      "value": "dstn5CbWUy3PG7E3t5"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_recent_nodelist@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Get multi datasheet field permission>no premission",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get multi datasheet field permission>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.role).to.eql('');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.manageable).to.eql(false);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.readable).to.eql(false);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.editable).to.eql(false);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/field/permission?dstIds=dstn5CbWUy3PG7E3t5",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "datasheet", "field", "permission"],
                  "query": [
                    {
                      "key": "dstIds",
                      "value": "dstn5CbWUy3PG7E3t5"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Get multi datasheet field permission>manager",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get multi datasheet field permission>manager\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.role).to.eql('editor');",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.manageable).to.eql(true);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.readable).to.eql(true);",
                      "    pm.expect(jsonData.data[0].fieldPermissionMap.fldhro6kH4FRE.permission.editable).to.eql(true);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/field/permission?dstIds=dstn5CbWUy3PG7E3t5",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "datasheet", "field", "permission"],
                  "query": [
                    {
                      "key": "dstIds",
                      "value": "dstn5CbWUy3PG7E3t5"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Enable field role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Enable field role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"includeExtend\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/permission/enable",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "permission",
                    "enable"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete field role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete field role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"unitId\": \"1611252719317782529\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/deleteRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "deleteRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Add field role>reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Add field role>reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"reader\",\n    \"unitIds\": [\n        \"1611253131150286851\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/addRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "addRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Add field role>editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Add field role>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"editor\",\n    \"unitIds\": [\n        \"1611253131150286850\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/addRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "addRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Edit field role>editor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit field role>editor\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"editor\",\n    \"unitId\": \"1611253131150286851\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/editRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "editRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Edit field role>reader",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit field role>reader\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"reader\",\n    \"unitId\": \"1611253131150286850\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/editRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "editRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Gets the field role infos in datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Gets the field role infos in datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data.roles[1].unitId).to.eql('1611253131150286851');",
                      "    pm.expect(jsonData.data.roles[1].role).to.eql('editor');",
                      "    pm.expect(jsonData.data.roles[2].unitId).to.eql('1611253131150286850');",
                      "    pm.expect(jsonData.data.roles[2].role).to.eql('reader');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/listRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "listRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "disable field role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"disable field role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dste6QF4j8gisukmuE/field/fldBakfe3skDz/permission/disable",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dste6QF4j8gisukmuE",
                    "field",
                    "fldBakfe3skDz",
                    "permission",
                    "disable"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Batch add field role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch add field role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"editor\",\n    \"unitIds\": [\n        \"1610169224154710018\",\n        \"1610212126939418625\",\n        \"1610213898869280769\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dstn5CbWUy3PG7E3t5/field/fldhHlXnK2fgu/addRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dstn5CbWUy3PG7E3t5",
                    "field",
                    "fldhHlXnK2fgu",
                    "addRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Batch edit field role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch edit field role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"role\": \"reader\",\n    \"unitIds\": [\n        \"1610169224154710018\",\n        \"1610212126939418625\",\n        \"1610213898869280769\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dstn5CbWUy3PG7E3t5/field/fldhHlXnK2fgu/batchEditRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dstn5CbWUy3PG7E3t5",
                    "field",
                    "fldhHlXnK2fgu",
                    "batchEditRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Batch delete role",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Batch delete role\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"unitIds\": [\n        \"1610169224154710018\",\n        \"1610212126939418625\",\n        \"1610213898869280769\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/datasheet/dstn5CbWUy3PG7E3t5/field/fldhHlXnK2fgu/batchDeleteRole",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "datasheet",
                    "dstn5CbWUy3PG7E3t5",
                    "field",
                    "fldhHlXnK2fgu",
                    "batchDeleteRole"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Sign out\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Player System - Notification API",
          "item": [
            {
              "name": "Get Notification' Statistics",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取通知的统计信息\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/statistics",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "statistics"]
                }
              },
              "response": []
            },
            {
              "name": "Get Notification Page Info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取通知中心页面详细信息\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/page",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "page"]
                }
              },
              "response": []
            },
            {
              "name": "Get Notification Detail List",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"获取通知中心列表信息\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/list",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "list"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Workbench - Node Favorite Api",
          "item": [
            {
              "name": "Change favorite status>folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Change favorite status>folder\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/fodXTSpqchM5t",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "fodXTSpqchM5t"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Change favorite status>datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Change favorite status>datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/dsthEbKrPQ5d4o6Yxe",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "dsthEbKrPQ5d4o6Yxe"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Change favorite status>form",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Change favorite status>form\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/fomLU9X0P8rJBiJXrK",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "fomLU9X0P8rJBiJXrK"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Change favorite status>dashboard",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Change favorite status>dashboard\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/dsb1nsDU73te6tyES8",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "dsb1nsDU73te6tyES8"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Change favorite status>mirror",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Change favorite status>mirror\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/mirul05zBY4CXay8mg",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "mirul05zBY4CXay8mg"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get favorite nodes",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get favorite nodes\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data[0].nodeId).to.eql('mirul05zBY4CXay8mg');",
                      "    pm.expect(jsonData.data[1].nodeId).to.eql('dsb1nsDU73te6tyES8');",
                      "    pm.expect(jsonData.data[2].nodeId).to.eql('fomLU9X0P8rJBiJXrK');",
                      "    pm.expect(jsonData.data[3].nodeId).to.eql('dsthEbKrPQ5d4o6Yxe');",
                      "    pm.expect(jsonData.data[4].nodeId).to.eql('fodXTSpqchM5t');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/list",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "favorite", "list"]
                }
              },
              "response": []
            },
            {
              "name": "Move favorite node>mirror",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Move favorite node>mirror\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/mirul05zBY4CXay8mg",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "mirul05zBY4CXay8mg"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Move favorite node>dashborad",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Move favorite node>dashborad\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/dsb1nsDU73te6tyES8",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "dsb1nsDU73te6tyES8"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Move favorite node>datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Move favorite node>datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/dsthEbKrPQ5d4o6Yxe",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "dsthEbKrPQ5d4o6Yxe"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Move favorite node>form",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Move favorite node>form\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/fomLU9X0P8rJBiJXrK",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "fomLU9X0P8rJBiJXrK"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Move favorite node>folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Move favorite node>folder\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcX8aQFF6obE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"fodXTSpqchM5t\",\n  \"preNodeId\": \"\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/favorite/updateStatus/fodXTSpqchM5t",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "favorite",
                    "updateStatus",
                    "fodXTSpqchM5t"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Space - Space Api",
          "item": [
            {
              "name": "Create Space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create Space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.globals.set(\"space_id\", jsonData.data.spaceId);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"test station\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "create"]
                }
              },
              "response": []
            },
            {
              "name": "switch space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"switch space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/{{space_id}}/switch",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "{{space_id}}", "switch"]
                }
              },
              "response": []
            },
            {
              "name": "SendInvite",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"SendInvite\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"invite\": [\n        {\n            \"email\": \"test_config@vikadata.com\",\n            \"teamId\": \"0\"\n        }\n    ],\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/sendInvite",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "sendInvite"]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_config@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Quit space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Quit space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskBIjCcfaKI9BNPoXbOe1W",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/quit/{{space_id}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "quit", "{{space_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      "",
                      "const environmentURL = pm.environment.get(\"baseURL\");",
                      "// delete space",
                      "const createRequestMail = {",
                      "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_space@vikadata.com\" + \"?type=3\",",
                      "    method: 'GET',",
                      "    header: ",
                      "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                      "    body: {",
                      "        mode: 'node'}",
                      "};",
                      "",
                      "pm.sendRequest(createRequestMail, function (err, response) {",
                      "",
                      "    pm.globals.set(\"delete_sapce_code\", (response.json().data));",
                      "    console.log((response.json().data));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_space@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Update space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Update space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"space rename\",\n  \"logo\": \"https://s1.vika.cn/space/2023/02/09/0aa8aab3917541238922e22bdf7ca13a?attname=%E9%A3%9E%E4%B9%A620230209-113643.gif\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/update",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "update"]
                }
              },
              "response": []
            },
            {
              "name": "Get space info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get space info\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data.spaceName).to.eql('space rename');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{sapce_id}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"space rename\",\n  \"logo\": \"https://s1.vika.cn/space/2023/02/09/0aa8aab3917541238922e22bdf7ca13a?attname=%E9%A3%9E%E4%B9%A620230209-113643.gif\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/info/{{space_id}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "info", "{{space_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get space list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get space list\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    var spaceId = pm.globals.get(\"space_id\");",
                      "    pm.expect(jsonData.data[0].spaceId).to.eql(spaceId);",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{sapce_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/list?onlyManageable=true",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "list"],
                  "query": [
                    {
                      "key": "onlyManageable",
                      "value": "true"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Gets subscription information for the space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get space list\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data.product).to.eql('Bronze');",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/subscribe/{{space_id}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "subscribe", "{{space_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get space feature",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get space feature\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data).not.to.be.null;",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/features",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "features"]
                }
              },
              "response": []
            },
            {
              "name": "Get user space resource",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get user space resource\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data.spaceName).to.eql('space rename');",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/resource",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "resource"]
                }
              },
              "response": []
            },
            {
              "name": "Get space capacity info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get space capacity info\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data.currentBundleCapacity).to.eql(1073741824);",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/capacity",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "capacity"]
                }
              },
              "response": []
            },
            {
              "name": "Get space capacity detail info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get space capacity info\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data).not.to.be.null;",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/capacity/detail?pageObjectParams=%7B%22pageSize%22%3A12%2C%22order%22%3A%22createdAt%22%2C%22sort%22%3A%22desc%22%2C%22pageNo%22%3A1%7D&isExpire=false",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "capacity", "detail"],
                  "query": [
                    {
                      "key": "pageObjectParams",
                      "value": "%7B%22pageSize%22%3A12%2C%22order%22%3A%22createdAt%22%2C%22sort%22%3A%22desc%22%2C%22pageNo%22%3A1%7D"
                    },
                    {
                      "key": "isExpire",
                      "value": "false"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Debug Open Script Query space audit logs in pages",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Debug Open Script Query space audit logs in pages\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data).not.to.be.null;",
                      "",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/{{space_id}}/audit",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "{{space_id}}", "audit"]
                }
              },
              "response": []
            },
            {
              "name": "Delete space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "x-space-id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"{{delete_sapce_code}}\",\n    \"type\": \"email_code\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/delete/{{space_id}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "delete", "{{space_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "Undo delete space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Undo delete space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-space-id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/cancel/{{space_id}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "cancel", "{{space_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      "",
                      "const environmentURL = pm.environment.get(\"baseURL\");",
                      "// delete space",
                      "const createRequestMail = {",
                      "    url: environmentURL + '/api/v1/gm/getCaptcha/' + \"test_space@vikadata.com\" + \"?type=3\",",
                      "    method: 'GET',",
                      "    header: ",
                      "        ['Content-Type: application/json','Authorization: Bearer usky0IDpvjlyUNKNPjqgghP'],",
                      "    body: {",
                      "        mode: 'node'}",
                      "};",
                      "",
                      "pm.sendRequest(createRequestMail, function (err, response) {",
                      "",
                      "    pm.globals.set(\"delete_sapce_code\", (response.json().data));",
                      "    console.log((response.json().data));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_space@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Delete space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "x-space-id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"code\": \"{{delete_sapce_code}}\",\n    \"type\": \"email_code\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/delete/{{space_id}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "delete", "{{space_id}}"]
                }
              },
              "response": []
            },
            {
              "name": "Delete space immediately",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete space immediately\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "x-space-id",
                    "value": "{{space_id}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/del",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "del"]
                }
              },
              "response": []
            },
            {
              "name": "Update security setting>Open",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Update security setting>Open\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc2XQTWUvyf9",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"fileSharable\": false,\n  \"invitable\": false,\n  \"joinable\": false,\n  \"nodeExportable\": false,\n  \"allowDownloadAttachment\": false,\n  \"allowCopyDataToExternal\": false,\n  \"mobileShowable\": true,\n  \"watermarkEnable\": true,\n  \"exportLevel\": 1,\n  \"orgIsolated\": true,\n  \"rootManageable\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/updateSecuritySetting",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "updateSecuritySetting"]
                }
              },
              "response": []
            },
            {
              "name": "Update security setting>Close",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Update security setting>Close\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc2XQTWUvyf9",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"fileSharable\": true,\n  \"invitable\": true,\n  \"joinable\": true,\n  \"nodeExportable\": true,\n  \"allowDownloadAttachment\": true,\n  \"allowCopyDataToExternal\": true,\n  \"mobileShowable\": false,\n  \"watermarkEnable\": false,\n  \"exportLevel\": 0,\n  \"orgIsolated\": false,\n  \"rootManageable\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/updateSecuritySetting",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "updateSecuritySetting"]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Sign out\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "uskNtUAeYTSBZGu9EqCf7gr",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Space - Invite Link Api",
          "item": [
            {
              "name": "Generate or refresh link",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Generate or refresh link\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.collectionVariables.set(\"invite_link_token\", jsonData.data);",
                      "    ",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc8ZXYbumDHk",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"teamId\": \"0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/link/generate",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "link", "generate"]
                }
              },
              "response": []
            },
            {
              "name": "Generate or refresh link>group link",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Generate or refresh link>group link\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data).to.be.not.null;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc8ZXYbumDHk",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"teamId\": \"1664172032189513730\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/link/generate",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "link", "generate"]
                }
              },
              "response": []
            },
            {
              "name": "Get a list of links",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Generate or refresh link>group link\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data[0].teamId).to.eql(\"1664172032189513730\");",
                      "    pm.expect(jsonData.data[0].teamName).to.eql(\"group\");",
                      "    pm.expect(jsonData.data[1].teamId).to.eql(\"0\");",
                      "    pm.expect(jsonData.data[1].teamName).to.eql(\"test_invite_link station\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc8ZXYbumDHk",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/link/list",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "link", "list"]
                }
              },
              "response": []
            },
            {
              "name": "Delete link>group link",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete link>group link\", function() {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc8ZXYbumDHk",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"teamId\": \"1664172032189513730\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/link/delete",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "link", "delete"]
                }
              },
              "response": []
            },
            {
              "name": "Valid invite link token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Valid invite link token\", function() {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "    pm.expect(jsonData.data.memberName).to.eql('test_invite_link');",
                      "    pm.expect(jsonData.data.spaceName).to.eql('test_invite_link station');",
                      "    pm.expect(jsonData.data.spaceId).to.eql('spc8ZXYbumDHk');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskBIjCcfaKI9BNPoXbOe1W",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"{{invite_link_token}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/link/valid",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "link", "valid"]
                }
              },
              "response": []
            },
            {
              "name": "Join the space using the public link",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Valid invite link token\", function() {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskBIjCcfaKI9BNPoXbOe1W",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"{{invite_link_token}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/link/join",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "link", "join"]
                }
              },
              "response": []
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_config@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Quit space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Quit space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskBIjCcfaKI9BNPoXbOe1W",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/quit/spc8ZXYbumDHk",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "quit", "spc8ZXYbumDHk"]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Sign out\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "uskqDxmz5soIHDjGEzAVZyN",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Configuration related interfaces",
          "item": [
            {
              "name": "Get configuration information",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get configuration information\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    \r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text",
                    "disabled": true
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/config/get",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "config", "get"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Internal Service - Notification Interface",
          "item": [
            {
              "name": "send a message",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"send a message\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');\r",
                      "    \r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\r\n  {\r\n    \"toUserId\": [],\r\n    \"toMemberId\": [],\r\n    \"toUnitId\": [],\r\n    \"fromUserId\": \"1501006749047771137\",\r\n    \"nodeId\": \"dstGZRS5FlpqoaKQxj\",\r\n    \"spaceId\": \"spcrMy6a6xuqZ\",\r\n    \"templateId\": \"user_filed\",\r\n    \"body\": {\r\n      \"config\": {\r\n        \"order\": true,\r\n        \"ignoreError\": true,\r\n        \"ignoreCase\": true,\r\n        \"dateFormat\": \"\",\r\n        \"ignoreNullValue\": true,\r\n        \"transientSupport\": true,\r\n        \"ignoreTransient\": true\r\n      },\r\n      \"empty\": true\r\n    }\r\n  }\r\n]"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/internal/notification/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "internal", "notification", "create"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Contact Member Api",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"test_contact_member@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Add member",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Add member\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"unitList\": [\n        {\n            \"id\": \"1672912416221474819\",\n            \"type\": 2\n        }\n    ],\n    \"teamId\": \"1672912209429704705\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/addMember",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "addMember"]
                }
              },
              "response": []
            },
            {
              "name": "Add member>Add multiple members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Add member>Add multiple members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"unitList\": [\n        {\n            \"id\": \"1672912416221474817\",\n            \"type\": 2\n        },{\n            \"id\": \"1672912416221474818\",\n            \"type\": 2\n        }\n    ],\n    \"teamId\": \"1672912209429704705\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/addMember",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "addMember"]
                }
              },
              "response": []
            },
            {
              "name": "Query the team's members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Query the team's members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data[0].memberId).to.eql(\"1672912416221474819\")",
                      "    pm.expect(jsonData.data[0].memberName).to.eql(\"test_api_readonly\")",
                      "    pm.expect(jsonData.data[0].teamData[0].teamId).to.eql(\"1672912209429704705\")    ",
                      "    pm.expect(jsonData.data[1].memberId).to.eql(\"1672912416221474817\")",
                      "    pm.expect(jsonData.data[1].memberName).to.eql(\"test_api_onlyupdata\")",
                      "    pm.expect(jsonData.data[1].teamData[0].teamId).to.eql(\"1672912209429704705\")    ",
                      "    pm.expect(jsonData.data[2].memberId).to.eql(\"1672912416221474818\")",
                      "    pm.expect(jsonData.data[2].memberName).to.eql(\"test_api_editor\")",
                      "    pm.expect(jsonData.data[2].teamData[0].teamId).to.eql(\"1672912209429704705\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/list?teamId=1672912209429704705",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "list"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1672912209429704705"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Query the units which a user belongs in space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Query the units which a user belongs in space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data.unitIds[0]).to.eql(\"1672907141326352386\")",
                      "    pm.expect(jsonData.data.unitIds[1]).to.eql(\"1672907144551772161\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/units",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "units"]
                }
              },
              "response": []
            },
            {
              "name": "Query the team's members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Query the team's members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data[0].email).to.eql(\"test_api_readonly@vikadata.com\")",
                      "    pm.expect(jsonData.data[1].email).to.eql(\"test_api_onlyupdata@vikadata.com\")",
                      "    pm.expect(jsonData.data[2].email).to.eql(\"test_api_editor@vikadata.com\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/list?teamId=1672912209429704705",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "list"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "1672912209429704705"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fuzzy Search Members>className and filter are null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Fuzzy Search Members>className and filter are null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data[0].memberId).to.eql(\"1672912416221474819\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/search?keyword=read",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "search"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "read"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Fuzzy Search Members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Fuzzy Search Members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data[0].memberId).to.eql(\"1672912416221474819\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/search?keyword=read&filter=true&className=highLight",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "search"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "read"
                    },
                    {
                      "key": "filter",
                      "value": "true"
                    },
                    {
                      "key": "className",
                      "value": "highLight"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Query the units which a user belongs in space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Query the units which a user belongs in space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data.unitIds[0]).to.eql(\"1672907141326352386\")",
                      "    pm.expect(jsonData.data.unitIds[1]).to.eql(\"1672907144551772161\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": []
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/units",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "units"]
                }
              },
              "response": []
            },
            {
              "name": "Delete a Member",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete a Member\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1672912416221474819\",\n    \"teamId\": \"1672912209429704705\",\n    \"action\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/delete",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "delete"]
                }
              },
              "response": []
            },
            {
              "name": "Delete Members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete Members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": [\n        \"1672912416221474817\",\n        \"1672912416221474818\"\n    ],\n    \"teamId\": \"1672912209429704705\",\n    \"action\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/deleteBatch",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "deleteBatch"]
                }
              },
              "response": []
            },
            {
              "name": "Send an email to invite members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Send an email to invite members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"invite\": [\n    {\n      \"email\": \"test_sendInvite@vikadata.com\",\n      \"teamId\": 0\n    }\n  ],\n  \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/sendInvite",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "sendInvite"]
                }
              },
              "response": []
            },
            {
              "name": "Delete members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1674354056947269634\",\n    \"teamId\": \"0\",\n    \"action\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/deleteBatch",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "deleteBatch"]
                }
              },
              "response": []
            },
            {
              "name": "Get member's detail info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get member's detail info\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data.email).to.eql(\"test_api_readonly@vikadata.com\")",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/read?memberId=1672912416221474819",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "read"],
                  "query": [
                    {
                      "key": "memberId",
                      "value": "1672912416221474819"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get member's detail info>memberId is null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get member's detail info>memberId is null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(220);",
                      "    pm.expect(jsonData.success).to.eql(false)",
                      "    pm.expect(jsonData.message).to.eql(\"没有参数\")",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/read",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "read"]
                }
              },
              "response": []
            },
            {
              "name": "Query the units which a user belongs in space",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Query the units which a user belongs in space\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "",
                      "    pm.expect(jsonData.data.unitIds[0]).to.eql(\"1672907141326352386\")",
                      "    pm.expect(jsonData.data.unitIds[1]).to.eql(\"1672907144551772161\")",
                      "",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/units",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "units"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member info\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"memberName\": \"test_contact_member_rename\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/update",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "update"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member info>restore",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member info>restore\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"memberName\": \"test_contact_member\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/update",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "update"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member information>successfully",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member information>successfully\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1676062919232434177\",\n    \"memberName\": \"test_edit_member_info-rename\",\n    \"teamIds\": [\n        \"1672915336497246210\"\n    ],\n    \"roleIds\": [\n        \"1676078016398995457\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateInfo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateInfo"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member information>No teamIds and No roleIds",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member information>No teamIds and No roleIds\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1676062919232434177\",\n    \"memberName\": \"test_edit_member_info\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateInfo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateInfo"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member information>Multiple teamIds",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member information>Multiple teamIds\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1676062919232434177\",\n    \"teamIds\": [\n        \"1672915336497246210\",\"1672912209429704705\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateInfo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateInfo"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member information>Multiple roleIds",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member information>Multiple roleIds\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1676062919232434177\",\n    \"roleIds\": [\n        \"1676077069421621253\",\"1676077069421621252\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateInfo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateInfo"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member information>teamIds is null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member information>teamIds is null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1676062919232434177\",\n    \"teamIds\": []\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateInfo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateInfo"]
                }
              },
              "response": []
            },
            {
              "name": "Edit self member information>roleIds is null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Edit self member information>roleIds is null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"1676062919232434177\",\n    \"roleIds\": []\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateInfo",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateInfo"]
                }
              },
              "response": []
            },
            {
              "name": "Update team",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Update team\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberIds\": [\n        \"1672912416221474817\",\n        \"1672912416221474818\",\n        \"1672912416221474819\"\n    ],\n    \"newTeamIds\": [\n        \"1672915336497246210\",\n        \"1672912209429704705\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/updateMemberTeam",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "updateMemberTeam"]
                }
              },
              "response": []
            },
            {
              "name": "Delete members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": [\n        \"1672912416221474817\",\n        \"1672912416221474818\",\n        \"1672912416221474819\"\n    ],\n    \"teamId\": \"1672915336497246210\",\n    \"action\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/deleteBatch",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "deleteBatch"]
                }
              },
              "response": []
            },
            {
              "name": "Delete members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true)",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\")",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spc99RyG7PWKN",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": [\n        \"1672912416221474817\",\n        \"1672912416221474818\",\n        \"1672912416221474819\"\n    ],\n    \"teamId\": \"1672912209429704705\",\n    \"action\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/deleteBatch",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "deleteBatch"]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Sign out\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usk9YYtC30slAkuRbKJ8Bjz",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Workbench - Node Rubbish Api",
          "item": [
            {
              "name": "delete file>form",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file>form\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/fomLrlB8ityc0ulW56",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "fomLrlB8ityc0ulW56"]
                }
              },
              "response": []
            },
            {
              "name": "delete file>mirror",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file>mirror\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/mira4kfquo0aimqS6s",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "mira4kfquo0aimqS6s"]
                }
              },
              "response": []
            },
            {
              "name": "delete file>dashborad",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file>dashborad\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/dsbGGr7Hu9GVwRYzq9",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "dsbGGr7Hu9GVwRYzq9"]
                }
              },
              "response": []
            },
            {
              "name": "delete file>datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file>datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/dstvZ7UN0op8zRRy3p",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "dstvZ7UN0op8zRRy3p"]
                }
              },
              "response": []
            },
            {
              "name": "delete file>folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file>folder\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/fodM74AtU6WeK",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "fodM74AtU6WeK"]
                }
              },
              "response": []
            },
            {
              "name": "delete file>delete subfiles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file>delete subfiles\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/dstkigme8ComAnHGVW",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "dstkigme8ComAnHGVW"]
                }
              },
              "response": []
            },
            {
              "name": "Get node in rubbish",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get node in rubbish\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].nodeName).to.eql('文件夹内的文件');",
                      "    pm.expect(jsonData.data[0].delPath).to.contain('文件夹');",
                      "    pm.expect(jsonData.data[1].nodeName).to.eql('删除文件夹');",
                      "    pm.expect(jsonData.data[2].nodeName).to.eql('删除文件');",
                      "    pm.expect(jsonData.data[3].nodeName).to.eql('删除仪表盘');",
                      "    pm.expect(jsonData.data[4].nodeName).to.eql('删除镜像');",
                      "    pm.expect(jsonData.data[5].nodeName).to.eql('删除表单');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/list",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "list"],
                  "query": [
                    {
                      "key": "size",
                      "value": null,
                      "disabled": true
                    },
                    {
                      "key": "isOverLimit",
                      "value": null,
                      "disabled": true
                    },
                    {
                      "key": "isOverLimit",
                      "value": null,
                      "disabled": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get node in rubbish>size isn't null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get node in rubbish>size isn't null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].nodeName).to.eql('文件夹内的文件');",
                      "    pm.expect(jsonData.data[0].delPath).to.contain('文件夹');",
                      "    pm.expect(jsonData.data[1].nodeName).to.eql('删除文件夹');",
                      "",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/list?size=2",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "list"],
                  "query": [
                    {
                      "key": "size",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get node in rubbish>load more file",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get node in rubbish>size isn't null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data[0].nodeName).to.eql('删除文件');",
                      "    pm.expect(jsonData.data[1].nodeName).to.eql('删除仪表盘');",
                      "    pm.expect(jsonData.data[2].nodeName).to.eql('删除镜像');",
                      "",
                      "",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/list?size=3&lastNodeId=fodM74AtU6WeK",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "list"],
                  "query": [
                    {
                      "key": "size",
                      "value": "3"
                    },
                    {
                      "key": "lastNodeId",
                      "value": "fodM74AtU6WeK"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Recover node>form",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Recover node>form\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.nodeName).to.eql('删除表单');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"fomLrlB8ityc0ulW56\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/recover",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "recover"]
                }
              },
              "response": []
            },
            {
              "name": "Recover node>datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Recover node>datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.nodeName).to.eql('删除镜像');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"mira4kfquo0aimqS6s\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/recover",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "recover"]
                }
              },
              "response": []
            },
            {
              "name": "Recover node>datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Recover node>datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.nodeName).to.eql('删除仪表盘');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"dsbGGr7Hu9GVwRYzq9\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/recover",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "recover"]
                }
              },
              "response": []
            },
            {
              "name": "Recover node>datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Recover node>datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.nodeName).to.eql('删除文件');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"dstvZ7UN0op8zRRy3p\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/recover",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "recover"]
                }
              },
              "response": []
            },
            {
              "name": "Recover node>folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Recover node>folder\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.nodeName).to.eql('删除文件夹');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"fodM74AtU6WeK\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/recover",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "recover"]
                }
              },
              "response": []
            },
            {
              "name": "Recover node>parentId isn't null",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Recover node>parentId isn't null\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.expect(jsonData.data.nodeName).to.eql('文件夹内的文件');",
                      "    pm.expect(jsonData.data.parentId).to.eql('fodvjtAcMn00K');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"nodeId\": \"dstkigme8ComAnHGVW\",\n  \"parentId\": \"fodvjtAcMn00K\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/recover",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "rubbish", "recover"]
                }
              },
              "response": []
            },
            {
              "name": "create new file",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"create new file\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.collectionVariables.set(\"del_rubbish_nodeId\", jsonData.data.nodeId);",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"parentId\": \"fodM74AtU6WeK\",\n    \"type\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "create"]
                }
              },
              "response": []
            },
            {
              "name": "delete file",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"parentId\": \"fodM74AtU6WeK\",\n    \"type\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/{{del_rubbish_nodeId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "delete",
                    "{{del_rubbish_nodeId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete node in rubbish",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/delete/{{del_rubbish_nodeId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "rubbish",
                    "delete",
                    "{{del_rubbish_nodeId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete node in rubbish>non-existent node",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Delete node in rubbish>non-existent node\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(422);",
                      "    pm.expect(jsonData.message).to.eql('回收站不存在该节点');",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/delete/dstxxxxxxx",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "rubbish",
                    "delete",
                    "dstxxxxxxx"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "create new file",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"create new file\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    pm.collectionVariables.set(\"del_rubbish_nodeId\", jsonData.data.nodeId);",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"parentId\": \"fodM74AtU6WeK\",\n    \"type\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "create"]
                }
              },
              "response": []
            },
            {
              "name": "delete file",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete file\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "",
                      "    });",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"parentId\": \"fodM74AtU6WeK\",\n    \"type\": 2\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/{{del_rubbish_nodeId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "delete",
                    "{{del_rubbish_nodeId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete node in rubbish",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/rubbish/delete/{{del_rubbish_nodeId}}",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "rubbish",
                    "delete",
                    "{{del_rubbish_nodeId}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "uskP57mMVrFtkInsAGkmLCj",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Space - Apply Joining Space Api",
          "item": [
            {
              "name": "Applying to join the space>已加入空间站",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Applying to join the space>已加入空间站\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(452);",
                      "    pm.expect(jsonData.message).to.eql(\"您已在该空间中，申请无效\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"spaceId\": \"spcbsJyrNxmcG\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/join",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "join"]
                }
              },
              "response": []
            },
            {
              "name": "Applying to join the space>发送申请成功",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Applying to join the space>发送申请成功\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usksrjHCJcJtgeYpycP8G00",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"spaceId\": \"spcbsJyrNxmcG\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/join",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "join"]
                }
              },
              "response": []
            },
            {
              "name": "Applying to join the space>再次发送申请",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Applying to join the space>再次发送申请\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(454);",
                      "    pm.expect(jsonData.message).to.eql(\"您已提交过申请，待管理员审批\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usksrjHCJcJtgeYpycP8G00",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"spaceId\": \"spcbsJyrNxmcG\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/join",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "join"]
                }
              },
              "response": []
            },
            {
              "name": "get notifyId",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"get notifyId\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].notifyBody.title).to.eql(\"space_join_apply\");",
                      "",
                      "    pm.collectionVariables.set(\"notifyId\", jsonData.data[0].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/page?isRead=0&pageSize=10",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "page"],
                  "query": [
                    {
                      "key": "isRead",
                      "value": "0"
                    },
                    {
                      "key": "pageSize",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Process joining application>拒绝申请",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Process joining application>拒绝申请\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"notifyId\": \"{{notifyId}}\",\n  \"agree\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/process",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "process"]
                }
              },
              "response": []
            },
            {
              "name": "read notification",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"read notification\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": [\n        \"{{notifyId}}\"\n    ],\n    \"isAll\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/read",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "read"]
                }
              },
              "response": []
            },
            {
              "name": "Process joining application>申请消息已处理",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Process joining application>拒绝申请\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(451);",
                      "    pm.expect(jsonData.message).to.eql(\"申请已失效或已被处理\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"notifyId\": \"{{notifyId}}\",\n  \"agree\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/process",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "process"]
                }
              },
              "response": []
            },
            {
              "name": "Applying to join the space>发送申请成功",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Applying to join the space>发送申请成功\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usksrjHCJcJtgeYpycP8G00",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"spaceId\": \"spcbsJyrNxmcG\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/join",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "join"]
                }
              },
              "response": []
            },
            {
              "name": "get notifyId",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"get notifyId\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].notifyBody.title).to.eql(\"space_join_apply\");",
                      "",
                      "    pm.collectionVariables.set(\"notifyId\", jsonData.data[0].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/page?isRead=0&pageSize=10",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "page"],
                  "query": [
                    {
                      "key": "isRead",
                      "value": "0"
                    },
                    {
                      "key": "pageSize",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Process joining application>同意申请",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Process joining application>同意申请\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"notifyId\": \"{{notifyId}}\",\n  \"agree\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/apply/process",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "apply", "process"]
                }
              },
              "response": []
            },
            {
              "name": "read notification",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"read notification\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": [\n        \"{{notifyId}}\"\n    ],\n    \"isAll\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/read",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "read"]
                }
              },
              "response": []
            },
            {
              "name": "query members",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"query members\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "",
                      "",
                      "    pm.collectionVariables.set(\"memberId\", jsonData.data.records[1].memberId);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/page?teamId=0",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "page"],
                  "query": [
                    {
                      "key": "teamId",
                      "value": "0"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "delete member",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"delete member\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcbsJyrNxmcG",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"memberId\": \"{{memberId}}\",\n    \"teamId\": \"0\",\n    \"action\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/org/member/delete",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "org", "member", "delete"]
                }
              },
              "response": []
            },
            {
              "name": "get notifyId",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"get notifyId\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "",
                      "    pm.collectionVariables.set(\"notifyId\", jsonData.data[0].id);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/page?isRead=0&pageSize=10",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "page"],
                  "query": [
                    {
                      "key": "isRead",
                      "value": "0"
                    },
                    {
                      "key": "pageSize",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "read notification",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [""],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"read notification\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "uskP57mMVrFtkInsAGkmLCj",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": [\n        \"{{notifyId}}\"\n    ],\n    \"isAll\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/player/notification/read",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "player", "notification", "read"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Template Center - Template API",
          "item": [
            {
              "name": "GetSpaceTemplates",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetSpaceTemplates\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/spaces/spcrMy6a6xuqZ/templates",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "spaces", "spcrMy6a6xuqZ", "templates"]
                }
              },
              "response": []
            },
            {
              "name": "Get The Template Category Content",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetTheTemplateCategoryContent\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/categories/tpc5MG9tqm9aR",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "template",
                    "categories",
                    "tpc5MG9tqm9aR"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Template Category List",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetTemplateCategoryList\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/categoryList",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "categoryList"]
                }
              },
              "response": []
            },
            {
              "name": "Create Template",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"Template\", jsonData.data);\r",
                      "pm.test(\"CreateTemplate\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"data\":true,\r\n    \"name\":\"模板中心API\",\r\n    \"nodeId\":\"dstSP58l2AGSULgh1H\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "create"]
                }
              },
              "response": []
            },
            {
              "name": "Delete Template",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"DeleteTemplate\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/delete/{{Template}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "delete", "{{Template}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get Template Directory Info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetTemplateDirectoryInfo\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Cookie",
                    "value": "Hm_lvt_39ab4bbbb01e48bee90b6b17a067b9f1=1690119778; SESSION=ZTdmZWRlYWYtN2I3MC00YTAwLTlkNzEtNzYxZDNlMzIzNDM3; Hm_lpvt_39ab4bbbb01e48bee90b6b17a067b9f1=1690120035; _ga_KRDKMPC2NN=GS1.1.1690119776.1.1.1690120048.0.0.0; ph_phc_hJsHTJPfqdGvcmhGESHmnxBP1J5ZCRmpNZRAOto1K02_posthog=%7B%22distinct_id%22%3A%2218982fd27e616c9020-0dd879b39f2331-26031d51-146d15-18982fd27e616c97f0%22%2C%22%24device_id%22%3A%2218982fd27e616c9020-0dd879b39f2331-26031d51-146d15-18982fd27e616c97f0%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24autocapture_disabled_server_side%22%3Atrue%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%2C%22%24sesid%22%3A%5B1690120049500%2C%2218982ffb9f459c1b8e0-004a2a04b374f6-26031d51-146d15-18982ffb9f459c1bcc7%22%2C1690119944692%5D%7D",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/directory?templateId=tplUljnxiHVJA&isPrivate=true&categoryCode=tpcprivate",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "directory"],
                  "query": [
                    {
                      "key": "templateId",
                      "value": "tplUljnxiHVJA"
                    },
                    {
                      "key": "isPrivate",
                      "value": "true"
                    },
                    {
                      "key": "categoryCode",
                      "value": "tpcprivate"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Template Global Search",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"TemplateGlobalSearch\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/global/search?keyword=%E6%95%99%E8%82%B2",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "global", "search"],
                  "query": [
                    {
                      "key": "keyword",
                      "value": "%E6%95%99%E8%82%B2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Quote Template",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);\r",
                      "pm.globals.set(\"nodeid\", jsonData.data.nodeId);\r",
                      "pm.test(\"QuoteTemplate\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"templateId\":\"tplUljnxiHVJA\",\r\n    \"parentId\":\"fode1VKdC2cXA\",\r\n    \"data\":true\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/quote",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "quote"]
                }
              },
              "response": []
            },
            {
              "name": "New Request",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Deletenodeid\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/delete/{{nodeid}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "delete", "{{nodeid}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get Template Recommend Content",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetTemplateRecommendContent\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/recommend",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "recommend"]
                }
              },
              "response": []
            },
            {
              "name": "Check if the template name already exists",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Checkifthetemplatenamealreadyexists\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcrMy6a6xuqZ",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/validate?name=创建通知表",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "validate"],
                  "query": [
                    {
                      "key": "name",
                      "value": "创建通知表"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Template Center - Template Album API",
          "item": [
            {
              "name": "Get Recommended Template Albums",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetRecommendedTemplateAlbums\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/albums/albnc9hPAMPVU",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "albums", "albnc9hPAMPVU"]
                }
              },
              "response": []
            },
            {
              "name": "Get The Template Album Content",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetRecommendedTemplateAlbums\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/template/albums/recommend",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "template", "albums", "recommend"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Laboratory module_ Experimental function interface",
          "item": [
            {
              "name": "Get Lab Function List",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"GetLabFunctionList\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/labs/features",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "labs", "features"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Widget SDK - Widget Api",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Login\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"areaCode\": \"\",\n    \"username\": \"zhongxiao@vikadata.com\",\n    \"type\": \"password\",\n    \"credential\": \"vika1234\",\n    \"data\": \"FutureIsComing\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/signIn",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signIn"]
                }
              },
              "response": []
            },
            {
              "name": "Get widget store information",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get widget store information\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data[0].name).to.contain(\"Chart\");",
                      "    pm.expect(jsonData.data[1].name).to.contain(\"Summary\");",
                      "    pm.expect(jsonData.data[2].name).to.contain(\"Pivot Table\");",
                      "    pm.expect(jsonData.data[3].name).to.contain(\"Word文档生成器\");",
                      "    pm.expect(jsonData.data[4].name).to.contain(\"Excel追加导入\");",
                      "    pm.expect(jsonData.data[5].name).to.contain(\"URL Preview\");",
                      "    pm.expect(jsonData.data[6].name).to.contain(\"抽取幸运儿\");",
                      "    pm.expect(jsonData.data[7].name).to.contain(\"Script\");",
                      "    pm.expect(jsonData.data[8].name).to.contain(\"漏斗图\");",
                      "    pm.expect(jsonData.data[9].name).to.contain(\"地图\");",
                      "    pm.expect(jsonData.data[10].name).to.contain(\"Airtable 导入\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spcJUmH65y9FE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": 1,\n    \"filter\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/package/store/list",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "package", "store", "list"]
                }
              },
              "response": []
            },
            {
              "name": "Create widget>nodeId is dashboard",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create widget>nodeId is dashboard\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.widgetPackageName).to.contain(\"Chart\");",
                      "    pm.expect(jsonData.data.snapshot.widgetName).to.contain(\"Chart test\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dsb7gGCErvjqAw34Rs\",\n    \"widgetPackageId\": \"wpkCKtqGTjzM7\",\n    \"name\": \"Chart test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "create"]
                }
              },
              "response": []
            },
            {
              "name": "Create widget>nodeId is datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create widget>nodeId is datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.data.widgetPackageName).to.contain(\"Chart\");",
                      "    pm.expect(jsonData.data.snapshot.widgetName).to.contain(\"Chart test\");",
                      "",
                      "",
                      "    pm.collectionVariables.set(\"widgetPackageId\", jsonData.data.id);",
                      "    console.log(jsonData.data.id)",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstXnUz8jwrogDEVP8\",\n    \"widgetPackageId\": \"wpkCKtqGTjzM7\",\n    \"name\": \"Chart test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "create"]
                }
              },
              "response": []
            },
            {
              "name": "Copy widget",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Copy widget\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetPackageName).to.contain(\"Chart\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstXnUz8jwrogDEVP8\",\n    \"widgetIds\": [\n        \"{{widgetPackageId}}\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/copy",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "copy"]
                }
              },
              "response": []
            },
            {
              "name": "Copy widget>widgetIds doesnot exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Copy widget>widgetIds doesnot exist\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(false);",
                      "    pm.expect(jsonData.code).to.eql(461);",
                      "    pm.expect(jsonData.message).to.eql(\"小程序不存在\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nodeId\": \"dstXnUz8jwrogDEVP8\",\n    \"widgetIds\": [\n        \"widgetIds_null\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/copy",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "copy"]
                }
              },
              "response": []
            },
            {
              "name": "Get package teamplates",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get package teamplates\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data[0].name).to.contain(\"Hello World (JavaScript)\");",
                      "    pm.expect(jsonData.data[1].name).to.contain(\"SDK 功能示例\");",
                      "    pm.expect(jsonData.data[2].name).to.contain(\"Todo MVC\");",
                      "    pm.expect(jsonData.data[3].name).to.contain(\"Hello World (TypeScript)\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/template/package/list",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "template", "package", "list"]
                }
              },
              "response": []
            },
            {
              "name": "Get widget info",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get widget info\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetPackageName).to.contain(\"Chart\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/get?widgetIds={{widgetPackageId}}",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "get"],
                  "query": [
                    {
                      "key": "widgetIds",
                      "value": "{{widgetPackageId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get the space widgets",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get the space widgets\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetName).to.contain(\"Chart\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/space/spckMxUfHg0UT/widget",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "space", "spckMxUfHg0UT", "widget"]
                }
              },
              "response": []
            },
            {
              "name": "get the widget information of the node>nodeId is datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"get the widget information of the node>nodeId is datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetName).to.contain(\"Chart\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/dstAooYJpme02jsig8/widget",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "dstAooYJpme02jsig8", "widget"]
                }
              },
              "response": []
            },
            {
              "name": "get the widget information of the node>nodeId is dashboard",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"get the widget information of the node>nodeId is dashboard\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetName).to.contain(\"Chart\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/dsbu897itgVDXDGnJS/widget",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "node", "dsbu897itgVDXDGnJS", "widget"]
                }
              },
              "response": []
            },
            {
              "name": "Get the node widget package>nodeId is datasheet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get the node widget package>nodeId is datasheet\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetPackageName).to.contain(\"Chart\");",
                      "    pm.expect(jsonData.data[0].snapshot.datasheetId).to.eql(\"dstAooYJpme02jsig8\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/dstAooYJpme02jsig8/widgetPack",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "dstAooYJpme02jsig8",
                    "widgetPack"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get the node widget package>nodeId is dashboard Copy",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get the node widget package>nodeId is dashboard\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.data[0].widgetPackageName).to.contain(\"Chart\");",
                      "    pm.expect(jsonData.data[0].snapshot.datasheetId).to.eql(\"dstAooYJpme02jsig8\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Space-Id",
                    "value": "spckMxUfHg0UT",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL}}/api/v1/node/dsbu897itgVDXDGnJS/widgetPack",
                  "host": ["{{baseURL}}"],
                  "path": [
                    "api",
                    "v1",
                    "node",
                    "dsbu897itgVDXDGnJS",
                    "widgetPack"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "sign out",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Sign out\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.code).to.eql(200);",
                      "    pm.expect(jsonData.message).to.eql('SUCCESS');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseURL}}/api/v1/signOut",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "signOut"]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "usky0IDpvjlyUNKNPjqgghP",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [""]
              }
            }
          ]
        },
        {
          "name": "Widget SDK - Pacakge Api",
          "item": [
            {
              "name": "Auth widget",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Auth widget\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"packageId\": \"wpkCKtqGTjzM7\"\r\n}"
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/package/auth",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "package", "auth"]
                }
              },
              "response": []
            },
            {
              "name": "Create widget",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Create widget\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.success).to.eql(true);\r",
                      "    pm.expect(jsonData.code).to.eql(200);\r",
                      "    pm.expect(jsonData.message).to.eql(\"SUCCESS\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "usk2Kl1RHN6ueEqb4sMZ2MB",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"name\": \"{\\\"en-US\\\":\\\"test\\\",\\\"zh-CN\\\":\\\"test\\\"}\", \r\n\"spaceId\": \"spcrMy6a6xuqZ\",\r\n\"packageType\": 0,\r\n\"releaseType\": 0\r\n  }",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL}}/api/v1/widget/package/create",
                  "host": ["{{baseURL}}"],
                  "path": ["api", "v1", "widget", "package", "create"]
                }
              },
              "response": []
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "X-Space-Id",
      "value": ""
    },
    {
      "key": "env_token",
      "value": ""
    },
    {
      "key": "recordId",
      "value": ""
    },
    {
      "key": "recordId_1",
      "value": ""
    },
    {
      "key": "recordId_2",
      "value": ""
    },
    {
      "key": "r",
      "value": ""
    },
    {
      "key": "e",
      "value": ""
    },
    {
      "key": "recordId_3",
      "value": ""
    },
    {
      "key": "recordId_4",
      "value": ""
    },
    {
      "key": "recordId_5",
      "value": ""
    },
    {
      "key": "recordId_6",
      "value": ""
    },
    {
      "key": "recordId_7",
      "value": ""
    },
    {
      "key": "recordId_8",
      "value": ""
    },
    {
      "key": "recordId_9",
      "value": ""
    },
    {
      "key": "recordId_10",
      "value": ""
    },
    {
      "key": "recordId_11",
      "value": ""
    },
    {
      "key": "search_node_spaceId",
      "value": ""
    },
    {
      "key": "reader_token",
      "value": ""
    },
    {
      "key": "update-only_token",
      "value": ""
    },
    {
      "key": "editor_token",
      "value": ""
    },
    {
      "key": "manager_token",
      "value": ""
    },
    {
      "key": "no-permission_token",
      "value": ""
    },
    {
      "key": "invite_link_token",
      "value": ""
    },
    {
      "key": "del_rubbish_nodeId",
      "value": ""
    },
    {
      "key": "notifyId",
      "value": ""
    },
    {
      "key": "membleId",
      "value": ""
    },
    {
      "key": "memberId",
      "value": ""
    },
    {
      "key": "folderId",
      "value": ""
    },
    {
      "key": "fields",
      "value": ""
    },
    {
      "key": "dstId",
      "value": ""
    },
    {
      "key": "spaceId",
      "value": ""
    },
    {
      "key": "deleteFields",
      "value": ""
    },
    {
      "key": "widgetPackageId",
      "value": ""
    },
    {
      "key": "folder_nodeId",
      "value": ""
    },
    {
      "key": "foreignDatasheetId",
      "value": ""
    },
    {
      "key": "targetFieldId",
      "value": ""
    },
    {
      "key": "datasheets",
      "value": ""
    },
    {
      "key": "del_field_link_3",
      "value": ""
    },
    {
      "key": "del_field_link_1",
      "value": ""
    },
    {
      "key": "del_field_link_2",
      "value": ""
    },
    {
      "key": "del_field_lookup",
      "value": ""
    },
    {
      "key": "records_ID",
      "value": ""
    },
    {
      "key": "records_ID2",
      "value": ""
    },
    {
      "key": "update_recordId",
      "value": ""
    },
    {
      "key": "spacesId",
      "value": ""
    },
    {
      "key": "automation_nodeId",
      "value": ""
    },
    {
      "key": "automationId",
      "value": ""
    },
    {
      "key": "triggerId",
      "value": ""
    },
    {
      "key": "datasheets_ID",
      "value": ""
    }
  ]
}
