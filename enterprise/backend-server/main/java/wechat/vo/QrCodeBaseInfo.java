/*
 * APITable Ltd. <legal@apitable.com>
 * Copyright (C)  2022 APITable Ltd. <https://apitable.com>
 *
 * This code file is part of APITable Enterprise Edition.
 *
 * It is subject to the APITable Commercial License and conditional on having a fully paid-up
 * license from APITable.
 *
 * Access to this code file or other code files in this `enterprise` directory and its
 * subdirectories does not constitute permission to use this code or APITable Enterprise Edition
 * features.
 *
 * Unless otherwise noted, all files Copyright © 2022 APITable Ltd.
 *
 * For purchase of APITable Enterprise Edition license, please contact <sales@apitable.com>.
 */

package com.apitable.enterprise.wechat.vo;

import com.apitable.shared.support.serializer.QrcodePreSerializer;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;

/**
 * <p>
 * Basic information of QR code.
 * </p>
 */
@Data
@Schema(description = "Basic information of QR code")
public class QrCodeBaseInfo {

    @Schema(description = "QR code ID", type = "java.lang.String", example = "1456")
    @JsonSerialize(using = ToStringSerializer.class)
    private Long qrCodeId;

    @Schema(description = "Type", example = "Temporary Integer Value:QR_SCENE、Temporary string "
        + "value：QR_STR_SCENE;Permanent Integer Value:QR_LIMIT_SCENE、Persistent string "
        + "value：QR_LIMIT_STR_SCENE")
    private String type;

    @Schema(description = "QR Code Picture", example = "https://mp.weixin.qq"
        + ".com/cgi-bin/showqrcode?ticket=gQH47joAAA")
    @JsonSerialize(using = QrcodePreSerializer.class)
    private String image;

    @Schema(description = "The address of the QR code image after parsing, and the QR code image "
        + "can be generated by yourself", example = "http://weixin.qq.com/q/kZgfwMTm72WWPkovabbI")
    private String url;
}
