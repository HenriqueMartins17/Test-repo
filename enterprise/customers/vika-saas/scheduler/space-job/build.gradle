import java.nio.charset.StandardCharsets
import java.text.SimpleDateFormat

plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.6'
  id 'io.spring.dependency-management' version '1.1.0'
}

sourceCompatibility = '8'

repositories {
  mavenCentral()
}

dependencies {
  annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation('org.springframework.boot:spring-boot-starter-data-redis') {
    exclude group: 'io.lettuce', module: 'lettuce-core'
  }
  annotationProcessor('org.projectlombok:lombok')
  compileOnly('org.projectlombok:lombok')
  implementation('org.apache.commons:commons-pool2')
  implementation('redis.clients:jedis')
  runtimeOnly('mysql:mysql-connector-java')
  implementation('cn.vika:vika-client:1.0.4')
  implementation('com.qiniu:qiniu-java-sdk:7.9.5')
  implementation('com.xuxueli:xxl-job-core:2.3.0')
  implementation('com.baomidou:mybatis-plus-boot-starter:3.5.1')
  implementation('cn.hutool:hutool-all:5.5.9')
  
  testCompileOnly('org.projectlombok:lombok')
  testAnnotationProcessor('org.projectlombok:lombok')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.powermock:powermock-api-mockito2:2.0.9')
  
}

// set the build environment variables to the files in the resource directory
processResources {
  filesMatching("**/*.yml") {
    if (it.name != 'application.yml') {
      it.exclude()
    }
  }
}

compileJava.dependsOn processResources
bootJar.dependsOn processResources

// Compile Java Setting
tasks.withType(JavaCompile).configureEach {
  options.encoding = StandardCharsets.UTF_8
  options.warnings = false
  options.compilerArgs += '-Xlint:-deprecation'
}

jar {
  enabled = false
}

// Java Plugin On Gradle
bootJar {
  manifest {
    attributes 'Start-Class': 'com.vikadata.scheduler.space.SchedulerSpaceApplication'
    attributes 'Implementation-Version': archiveVersion
    attributes 'Built-Gradle': gradle.gradleVersion
    attributes 'Build-OS': System.getProperty("os.name")
    attributes 'Built-By': System.getProperty("user.name")
    attributes 'Build-Jdk': System.getProperty("java.version")
    attributes 'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())
  }
}

// SpringBoot Plugin On Gradle
springBoot {
  mainClass.set('com.vikadata.scheduler.space.SchedulerSpaceApplication')
}