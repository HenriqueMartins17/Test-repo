{"spaceAssets":[],"datasheetWidgets":[],"widgets":[],"nodeDescriptions":[{"description":"{\"type\":\"slate\",\"data\":[{\"type\":\"paragraph\",\"data\":{\"align\":\"alignLeft\"},\"object\":\"block\",\"children\":[{\"text\":\"\"}],\"_id\":\"edtw6eRFzUdP3\"}],\"render\":\"<p class=\\\"ve_align_alignLeft\\\"></p>\"}","id":1598171183652204546,"nodeId":"dstdNw6i4e9BUPVy0G"},{"description":"{\"text\":\"\",\"slateData\":{\"document\":[{\"type\":\"paragraph\",\"data\":{\"align\":\"alignLeft\"},\"object\":\"block\",\"children\":[{\"text\":\"\"}],\"_id\":\"edtqZpWx914OV\"},{\"type\":\"paragraph\",\"data\":{\"align\":\"alignLeft\"},\"object\":\"block\",\"children\":[{\"text\":\"\"}],\"_id\":\"edtpNPwpKV5Ir\"}],\"meta\":{\"imageSize\":0}},\"data\":\"<p class=\\\"ve_align_alignLeft\\\"></p><p class=\\\"ve_align_alignLeft\\\"></p>\"}","id":1598171182247112705,"nodeId":"fodvM1HoEQHFu"}],"nodes":[{"nodeName":"Action Type","type":2,"parentId":"fodYGtoBchdjm","spaceId":"spcNTxlv8Drra","preNodeId":"dste3Vx1NuWdeDaGqQ","isTemplate":false,"id":1610573374443692035,"nodeId":"dst68NlKxcGvX2P9k4"},{"nodeName":"小程序管理","type":2,"parentId":"fodzUTmj7AVEU","spaceId":"spcNTxlv8Drra","preNodeId":"dstcZ0SHCog9RSBPec","isTemplate":false,"id":1610573157580210178,"nodeId":"dstclCuAj2CJaEqo5Y"},{"nodeName":"Author","type":2,"parentId":"fodzUTmj7AVEU","spaceId":"spcNTxlv8Drra","isTemplate":false,"id":1610573157580210177,"nodeId":"dstcZ0SHCog9RSBPec"},{"nodeName":"【上架入口】热门推荐","icon":"","type":2,"parentId":"fodvM1HoEQHFu","spaceId":"spcNTxlv8Drra","isTemplate":false,"id":1598171181764767746,"nodeId":"dstDMtvJVKyBokeTpF"},{"nodeName":"上架模板","icon":"","type":2,"parentId":"fodvM1HoEQHFu","spaceId":"spcNTxlv8Drra","preNodeId":"dstVNXbbgNQdWTpqeV","isTemplate":false,"id":1598171181764767749,"nodeId":"dstdNw6i4e9BUPVy0G"},{"nodeName":"Trigger Type","type":2,"parentId":"fodYGtoBchdjm","spaceId":"spcNTxlv8Drra","preNodeId":"dstlWhj5wG4WtVjHlq","isTemplate":false,"id":1610573374443692034,"nodeId":"dste3Vx1NuWdeDaGqQ"},{"nodeName":"【上架入口】模板分类","type":2,"parentId":"fodvM1HoEQHFu","spaceId":"spcNTxlv8Drra","preNodeId":"dstDMtvJVKyBokeTpF","isTemplate":false,"id":1598171181764767747,"nodeId":"dstKGW3tuFVtmigZlK"},{"nodeName":"Service","type":2,"parentId":"fodYGtoBchdjm","spaceId":"spcNTxlv8Drra","isTemplate":false,"id":1610573374443692033,"nodeId":"dstlWhj5wG4WtVjHlq"},{"nodeName":"实验性功能配置","icon":"microscope","type":2,"parentId":"fod8lnUhAnFla","spaceId":"spcNTxlv8Drra","preNodeId":"fodYGtoBchdjm","isTemplate":false,"id":1610657497959047170,"nodeId":"dstMwqbopksYSl754h"},{"nodeName":"模板专题","type":2,"parentId":"fodvM1HoEQHFu","spaceId":"spcNTxlv8Drra","preNodeId":"dstKGW3tuFVtmigZlK","isTemplate":false,"id":1598171181764767748,"nodeId":"dstVNXbbgNQdWTpqeV"},{"nodeName":"模板标签","type":2,"parentId":"fodvM1HoEQHFu","spaceId":"spcNTxlv8Drra","preNodeId":"dstdNw6i4e9BUPVy0G","isTemplate":false,"id":1598171181764767750,"nodeId":"dstzS1VRVQynS75CXW"},{"nodeName":"配置表模板","type":1,"parentId":"fodtziz5y5rt6","spaceId":"spcNTxlv8Drra","isTemplate":false,"id":1598240023541452801,"nodeId":"fod8lnUhAnFla"},{"nodeName":"模版中心","icon":"motor_scooter","type":1,"parentId":"fod8lnUhAnFla","spaceId":"spcNTxlv8Drra","isTemplate":false,"id":1598171181756379138,"nodeId":"fodvM1HoEQHFu"},{"nodeName":"机器人配置","icon":"robot_face","type":1,"parentId":"fod8lnUhAnFla","spaceId":"spcNTxlv8Drra","preNodeId":"fodzUTmj7AVEU","isTemplate":false,"extra":"{}","id":1610573374653407233,"nodeId":"fodYGtoBchdjm"},{"nodeName":"小程序中心","icon":"jigsaw","type":1,"parentId":"fod8lnUhAnFla","spaceId":"spcNTxlv8Drra","preNodeId":"fodvM1HoEQHFu","isTemplate":false,"extra":"{}","id":1610573157894782977,"nodeId":"fodzUTmj7AVEU"}],"nodeRelations":[],"datasheets":[{"dstName":"Action Type","spaceId":"spcNTxlv8Drra","dstId":"dst68NlKxcGvX2P9k4","id":1610573374598881282,"nodeId":"dst68NlKxcGvX2P9k4"},{"dstName":"小程序管理","spaceId":"spcNTxlv8Drra","dstId":"dstclCuAj2CJaEqo5Y","id":1610573157743788033,"nodeId":"dstclCuAj2CJaEqo5Y"},{"dstName":"Author","spaceId":"spcNTxlv8Drra","dstId":"dstcZ0SHCog9RSBPec","id":1610573157626347521,"nodeId":"dstcZ0SHCog9RSBPec"},{"dstName":"【上架入口】热门推荐","spaceId":"spcNTxlv8Drra","dstId":"dstDMtvJVKyBokeTpF","id":1598171183773839361,"nodeId":"dstDMtvJVKyBokeTpF"},{"dstName":"上架模板","spaceId":"spcNTxlv8Drra","dstId":"dstdNw6i4e9BUPVy0G","id":1598171183627038721,"nodeId":"dstdNw6i4e9BUPVy0G"},{"dstName":"Trigger Type","spaceId":"spcNTxlv8Drra","dstId":"dste3Vx1NuWdeDaGqQ","id":1610573374523383809,"nodeId":"dste3Vx1NuWdeDaGqQ"},{"dstName":"【上架入口】模板分类","spaceId":"spcNTxlv8Drra","dstId":"dstKGW3tuFVtmigZlK","id":1598171184017108994,"nodeId":"dstKGW3tuFVtmigZlK"},{"dstName":"Service","spaceId":"spcNTxlv8Drra","dstId":"dstlWhj5wG4WtVjHlq","id":1610573374473052162,"nodeId":"dstlWhj5wG4WtVjHlq"},{"dstName":"实验性功能配置","spaceId":"spcNTxlv8Drra","dstId":"dstMwqbopksYSl754h","id":1610657498017767425,"nodeId":"dstMwqbopksYSl754h"},{"dstName":"模板专题","spaceId":"spcNTxlv8Drra","dstId":"dstVNXbbgNQdWTpqeV","id":1598171182221946882,"nodeId":"dstVNXbbgNQdWTpqeV"},{"dstName":"模板标签","spaceId":"spcNTxlv8Drra","dstId":"dstzS1VRVQynS75CXW","id":1598171182414884865,"nodeId":"dstzS1VRVQynS75CXW"}],"datasheetRecords":[{"data":"{\"fldD0ib6HO6TL\": [\"recRVlxR9qCuq\"], \"fldKHM9tchZYD\": [[{\"text\": \"asvX1OaY9lmi8fDPcQ\", \"type\": 1}]], \"fldQBBjiSfLnA\": [{\"text\": \"{\\\"en\\\": {\\\"$robot_action_send_web_request_desc\\\": \\\"When the robot starts working, it will automatically send a web request to a specific URL\\\", \\\"$robot_action_send_web_request_title\\\": \\\"Send web request\\\", \\\"$robot_action_send_web_request_config_1\\\": \\\"Request method\\\", \\\"$robot_action_send_web_request_config_2\\\": \\\"Request address\\\", \\\"$robot_action_send_web_request_config_3\\\": \\\"Header\\\", \\\"$robot_action_send_web_request_config_4\\\": \\\"Body\\\", \\\"$robot_action_send_web_request_body_raw_desc\\\": \\\"Enter raw texts in the body\\\", \\\"$robot_action_send_web_request_config_1_desc\\\": \\\"Send web request via the GET, POST or other method\\\", \\\"$robot_action_send_web_request_config_3_desc\\\": \\\"Enter one or more key-value pairs in the header\\\", \\\"$robot_action_send_web_request_body_json_desc\\\": \\\"Enter JSON texts in the body [How to use variables](\", \"type\": 1}, {\"link\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"text\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"type\": 2}, {\"text\": \")\\\", \\\"$robot_action_send_web_request_body_formdata_desc\\\": \\\"Enter one or more key-value pairs in the body [How to use variables](\", \"type\": 1}, {\"link\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"text\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"type\": 2}, {\"text\": \")\\\"}, \\\"zh\\\": {\\\"$robot_action_send_web_request_desc\\\": \\\"机器人开始运行后，会自动向指定地址发送网络请求\\\", \\\"$robot_action_send_web_request_title\\\": \\\"发送网络请求\\\", \\\"$robot_action_send_web_request_config_1\\\": \\\"请求方法\\\", \\\"$robot_action_send_web_request_config_2\\\": \\\"请求地址\\\", \\\"$robot_action_send_web_request_config_3\\\": \\\"请求头\\\", \\\"$robot_action_send_web_request_config_4\\\": \\\"请求体\\\", \\\"$robot_action_send_web_request_body_raw_desc\\\": \\\"通过请求体发送一段 raw 文本（输入英文斜杠「/」可插入变量）\\\", \\\"$robot_action_send_web_request_config_1_desc\\\": \\\"通过 GET 或 POST 等方式向指定地址发送网络请求\\\", \\\"$robot_action_send_web_request_config_3_desc\\\": \\\"在请求头中可以添加多个键值对\\\", \\\"$robot_action_send_web_request_body_json_desc\\\": \\\"通过请求体发送一段 JSON 文本（输入英文斜杠「/」可插入变量） [如何使用变量](\", \"type\": 1}, {\"link\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"text\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"type\": 2}, {\"text\": \")\\\", \\\"$robot_action_send_web_request_body_formdata_desc\\\": \\\"通过请求体发送一段 form-data 键值对（输入英文斜杠「/」可插入变量） [如何使用变量](\", \"type\": 1}, {\"link\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"text\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#how-to-use-variables-in-action\", \"type\": 2}, {\"text\": \")\\\"}}\", \"type\": 1}], \"fldSLd3cFMWIv\": [{\"text\": \"$robot_action_send_web_request_title\", \"type\": 1}], \"fldWdstkg3TBj\": [{\"text\": \"$robot_action_send_web_request_desc\", \"type\": 1}], \"fldcpHWXUmYnV\": [{\"text\": \"sendRequest\", \"type\": 1}], \"fldowCXJBfXQs\": [{\"text\": \"aatSSHdFkR7B7197Is\", \"type\": 1}], \"fldtKt7ghekJ2\": [{\"text\": \"{\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"statusCode\\\"], \\\"properties\\\": {\\\"body\\\": {\\\"type\\\": \\\"object\\\"}, \\\"statusCode\\\": {\\\"type\\\": \\\"number\\\"}}, \\\"additionalProperties\\\": false}\", \"type\": 1}], \"fldx0XzkzHsgi\": [{\"text\": \"{\\\"schema\\\": {\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"url\\\", \\\"method\\\"], \\\"properties\\\": {\\\"url\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_action_send_web_request_config_2\\\"}, \\\"method\\\": {\\\"enum\\\": [\\\"GET\\\", \\\"POST\\\", \\\"PATCH\\\", \\\"DELETE\\\"], \\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_action_send_web_request_config_1\\\", \\\"default\\\": \\\"GET\\\", \\\"description\\\": \\\"$robot_action_send_web_request_config_1_desc\\\"}, \\\"headers\\\": {\\\"type\\\": \\\"array\\\", \\\"items\\\": {\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"key\\\", \\\"value\\\"], \\\"properties\\\": {\\\"key\\\": {\\\"type\\\": \\\"string\\\"}, \\\"value\\\": {\\\"type\\\": \\\"string\\\"}}}, \\\"title\\\": \\\"$robot_action_send_web_request_config_3\\\", \\\"description\\\": \\\"$robot_action_send_web_request_config_3_desc\\\"}}, \\\"dependencies\\\": {\\\"method\\\": {\\\"oneOf\\\": [{\\\"properties\\\": {\\\"body\\\": {\\\"type\\\": \\\"object\\\", \\\"title\\\": \\\"$robot_action_send_web_request_config_4\\\", \\\"properties\\\": {\\\"type\\\": {\\\"enum\\\": [\\\"json\\\", \\\"form-data\\\", \\\"raw\\\"], \\\"type\\\": \\\"string\\\", \\\"default\\\": \\\"json\\\"}}, \\\"dependencies\\\": {\\\"type\\\": {\\\"oneOf\\\": [{\\\"properties\\\": {\\\"type\\\": {\\\"enum\\\": [\\\"form-data\\\"]}, \\\"formData\\\": {\\\"type\\\": \\\"array\\\", \\\"items\\\": {\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"key\\\", \\\"value\\\"], \\\"properties\\\": {\\\"key\\\": {\\\"type\\\": \\\"string\\\"}, \\\"value\\\": {\\\"type\\\": \\\"string\\\"}}}, \\\"description\\\": \\\"$robot_action_send_web_request_body_formdata_desc\\\"}}}, {\\\"properties\\\": {\\\"data\\\": {\\\"type\\\": \\\"string\\\", \\\"format\\\": \\\"json\\\", \\\"description\\\": \\\"$robot_action_send_web_request_body_json_desc\\\"}, \\\"type\\\": {\\\"enum\\\": [\\\"json\\\"]}}}, {\\\"properties\\\": {\\\"data\\\": {\\\"type\\\": \\\"string\\\", \\\"description\\\": \\\"$robot_action_send_web_request_body_raw_desc\\\"}, \\\"type\\\": {\\\"enum\\\": [\\\"raw\\\"]}}}]}}}, \\\"method\\\": {\\\"enum\\\": [\\\"POST\\\", \\\"PATCH\\\"]}}}]}}, \\\"additionalProperties\\\": false}, \\\"uiSchema\\\": {\\\"body\\\": {\\\"data\\\": {\\\"ui:options\\\": {\\\"showTitle\\\": false}}, \\\"type\\\": {\\\"ui:widget\\\": \\\"RadioGroupWidget\\\", \\\"ui:options\\\": {\\\"showTitle\\\": false}}, \\\"formData\\\": {\\\"items\\\": {\\\"key\\\": {\\\"ui:options\\\": {\\\"showTitle\\\": false}}, \\\"value\\\": {\\\"ui:options\\\": {\\\"showTitle\\\": false}}, \\\"ui:order\\\": [\\\"key\\\", \\\"value\\\"], \\\"ui:options\\\": {\\\"inline\\\": true}}, \\\"ui:options\\\": {\\\"orderable\\\": false, \\\"showTitle\\\": false}}}, \\\"headers\\\": {\\\"items\\\": {\\\"key\\\": {\\\"ui:options\\\": {\\\"showTitle\\\": false}}, \\\"value\\\": {\\\"ui:options\\\": {\\\"showTitle\\\": false}}, \\\"ui:order\\\": [\\\"key\\\", \\\"value\\\"], \\\"ui:options\\\": {\\\"inline\\\": true}}, \\\"ui:options\\\": {\\\"orderable\\\": false}}, \\\"ui:order\\\": [\\\"method\\\", \\\"url\\\", \\\"headers\\\", \\\"body\\\"], \\\"ui:options\\\": {\\\"layout\\\": [[\\\"method\\\", \\\"url\\\"], [\\\"headers\\\"], [\\\"body\\\"]]}}}\", \"type\": 1}]}","recordId":"recT8fdhBZr64","dstId":"dst68NlKxcGvX2P9k4"},{"data":"{\"fld03UowwQbAy\": [{\"text\": \"\\b1.0.0\", \"type\": 1}], \"fldBLoGNcMJFf\": [{\"text\": \"wpkCKtqGTjzM7\", \"type\": 1}], \"fldPuOTj8rXs2\": [{\"link\": \"https://bbs.vika.cn/article/113\", \"text\": \"https://bbs.vika.cn/article/113\", \"type\": 2}], \"fldX3zyuFkv2L\": [{\"text\": \"图表（Chart）\", \"type\": 1}], \"fldcaV7lythPw\": [\"recGBoDNnquer\"], \"fldtBidUZ8plQ\": [{\"text\": \"https://github.com/vikadata/widget-chart\", \"type\": 1}], \"fldvKKXsbbpgc\": true}","recordId":"recB8MsyDBL7a","dstId":"dstclCuAj2CJaEqo5Y"},{"data":"{\"fld03UowwQbAy\": [{\"text\": \"\\b1.0.0\", \"type\": 1}], \"fldBLoGNcMJFf\": [{\"text\": \"wpkY6DKgb3iVk\", \"type\": 1}], \"fldPuOTj8rXs2\": [{\"link\": \"https://bbs.vika.cn/article/114\", \"text\": \"https://bbs.vika.cn/article/114\", \"type\": 2}], \"fldX3zyuFkv2L\": [{\"text\": \"统计与指标（Summary）\", \"type\": 1}], \"fldcaV7lythPw\": [\"recGBoDNnquer\"], \"fldtBidUZ8plQ\": [{\"text\": \"https://github.com/vikadata/widget-summary\", \"type\": 1}], \"fldvKKXsbbpgc\": true}","recordId":"recFGbzbBSl2B","dstId":"dstclCuAj2CJaEqo5Y"},{"data":"{\"fld3tKII6UZiR\": [{\"link\": \"https://vika.cn/developers\", \"text\": \"https://vika.cn/developers\", \"type\": 2}], \"fld4CrFbbGAW1\": [{\"id\": \"atcO7n3ewpzzM\", \"name\": \"author_icon.png\", \"size\": 3755, \"token\": \"space/2022/12/22/ab85b11953754e23962ba1587cfc03d0\", \"width\": 64, \"bucket\": \"QNY1\", \"height\": 64, \"mimeType\": \"image/png\"}], \"fldBJQFxl6HFu\": [{\"link\": \"developer@vikadata.com\", \"text\": \"developer@vikadata.com\", \"type\": 4}], \"fldKLYtSRGx8a\": [{\"text\": \"vika\", \"type\": 1}], \"fldv30xUKERPF\": [\"recB8MsyDBL7a\", \"recFGbzbBSl2B\"]}","recordId":"recGBoDNnquer","dstId":"dstcZ0SHCog9RSBPec"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldIoR1FbmmqM\": [\"rechWS2TrUzaD\"], \"fldW3zP0JYBQh\": \"opt2VE45iPrHr\", \"fldaXbXlJjC8f\": \"optY2Dvu45NcC\", \"flddJug9dW8c1\": \"optjavuyvp1y7\"}","recordId":"rec3D6o9W2dzl","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldIoR1FbmmqM\": [\"recfecJVcf03u\"], \"fldW3zP0JYBQh\": \"opt2VE45iPrHr\", \"fldaXbXlJjC8f\": \"optNDxBEHgqTL\", \"flddJug9dW8c1\": \"opttM51JtkmmU\"}","recordId":"recaOEXGHsrp6","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldIoR1FbmmqM\": [\"recu31sNSwpx4\"], \"fldW3zP0JYBQh\": \"opt2VE45iPrHr\", \"fldaXbXlJjC8f\": \"optNDxBEHgqTL\", \"flddJug9dW8c1\": \"opttM51JtkmmU\"}","recordId":"recbNj6bHSoKg","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldH3wnv1Vj9a\": [{\"id\": \"atckvuQVpD6G4\", \"name\": \"pexels-negative-space-34577.jpg\", \"size\": 1657380, \"token\": \"space/2021/09/01/f4a70a919e13429d884b37f5050d4646\", \"width\": 5472, \"bucket\": \"QNY1\", \"height\": 3648, \"mimeType\": \"image/jpeg\"}], \"fldIoR1FbmmqM\": [\"recUTvtxQlMcA\"], \"fldUoyGtJj0t3\": [{\"text\": \"以时间为横轴，展示活动各项任务的周期和状态，助力把控活动进度\", \"type\": 1}], \"fldW3zP0JYBQh\": \"optVj0r55NvID\", \"fldXtJ31JBfSn\": [{\"text\": \"运营必备-甘特图\", \"type\": 1}], \"fldaXbXlJjC8f\": \"optNDxBEHgqTL\", \"flddJug9dW8c1\": \"optHX187bwuht\"}","recordId":"recd0TjIurOZ7","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldDbpaPCTlXy\": [\"recE45M2PyM3N\"], \"fldW3zP0JYBQh\": \"opt15pfhzyApr\", \"fldaXbXlJjC8f\": \"optNDxBEHgqTL\", \"flddJug9dW8c1\": \"optitbC9WW1O6\"}","recordId":"recDVcDw1vrpv","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldH3wnv1Vj9a\": [{\"id\": \"atcWmJzuKOzwA\", \"name\": \"banner2.png\", \"size\": 443475, \"token\": \"space/2021/08/11/01281409e51443a6bd8361321a0848aa\", \"width\": 860, \"bucket\": \"QNY1\", \"height\": 820, \"mimeType\": \"image/png\"}], \"fldIoR1FbmmqM\": [\"recko6YFE3pSZ\"], \"fldUoyGtJj0t3\": [{\"text\": \"系统化的目标与策略，涵盖制定、执行、复盘、考评的闭环协同\", \"type\": 1}], \"fldW3zP0JYBQh\": \"optVj0r55NvID\", \"fldXtJ31JBfSn\": [{\"text\": \"OKR管理-系统版\", \"type\": 1}], \"fldaXbXlJjC8f\": \"optNDxBEHgqTL\", \"flddJug9dW8c1\": \"optYBBuFuKDnR\"}","recordId":"recEIxQNyDVba","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldH3wnv1Vj9a\": [{\"id\": \"atcUu1QOzNIL7\", \"name\": \"项目管理.jpg\", \"size\": 705425, \"token\": \"space/2020/09/28/d79656ffd6804282b7a28687e5c0671d\", \"width\": 7792, \"bucket\": \"QNY1\", \"height\": 2160, \"mimeType\": \"image/jpeg\"}], \"fldIoR1FbmmqM\": [\"recrDrfPxISwI\"], \"fldW3zP0JYBQh\": \"optVj0r55NvID\", \"fldXtJ31JBfSn\": [{\"text\": \"远程办公解决方案\", \"type\": 1}], \"fldaXbXlJjC8f\": \"optNDxBEHgqTL\", \"flddJug9dW8c1\": \"optGZRgw5uVfC\", \"flduiaATCh6eG\": [{\"text\": \"#262626\", \"type\": 1}]}","recordId":"recFTSuunN1LX","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldH3wnv1Vj9a\": [{\"id\": \"atcWmJzuKOzwA\", \"name\": \"banner2.png\", \"size\": 443475, \"token\": \"space/2021/08/11/01281409e51443a6bd8361321a0848aa\", \"width\": 860, \"bucket\": \"QNY1\", \"height\": 820, \"mimeType\": \"image/png\"}], \"fldIoR1FbmmqM\": [\"rec5TmOl5BFoX\"], \"fldUoyGtJj0t3\": [{\"text\": \"Plan, track, and manage complex projects across multiple teams.\", \"type\": 1}], \"fldW3zP0JYBQh\": \"optVj0r55NvID\", \"fldXtJ31JBfSn\": [{\"text\": \"Project Management\", \"type\": 1}], \"fldaXbXlJjC8f\": \"optY2Dvu45NcC\", \"flddJug9dW8c1\": \"optGZRgw5uVfC\"}","recordId":"recOtSt07Rz1z","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldIoR1FbmmqM\": [\"rec9svJJWTVqQ\"], \"fldW3zP0JYBQh\": \"opt2VE45iPrHr\", \"fldaXbXlJjC8f\": \"optY2Dvu45NcC\", \"flddJug9dW8c1\": \"optjavuyvp1y7\"}","recordId":"recRiHLfS0mi5","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldH3wnv1Vj9a\": [{\"id\": \"atcUu1QOzNIL7\", \"name\": \"项目管理.jpg\", \"size\": 705425, \"token\": \"space/2020/09/28/d79656ffd6804282b7a28687e5c0671d\", \"width\": 7792, \"bucket\": \"QNY1\", \"height\": 2160, \"mimeType\": \"image/jpeg\"}], \"fldIoR1FbmmqM\": [\"recbHbjGesGGj\"], \"fldW3zP0JYBQh\": \"optVj0r55NvID\", \"fldXtJ31JBfSn\": [{\"text\": \"OKR Tracking\", \"type\": 1}], \"fldaXbXlJjC8f\": \"optY2Dvu45NcC\", \"flddJug9dW8c1\": \"optHX187bwuht\", \"flduiaATCh6eG\": [{\"text\": \"#262626\", \"type\": 1}]}","recordId":"rectSYLznqZpD","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld6ZUbl0jdzL\": true, \"fldH3wnv1Vj9a\": [{\"id\": \"atckvuQVpD6G4\", \"name\": \"pexels-negative-space-34577.jpg\", \"size\": 1657380, \"token\": \"space/2021/09/01/f4a70a919e13429d884b37f5050d4646\", \"width\": 5472, \"bucket\": \"QNY1\", \"height\": 3648, \"mimeType\": \"image/jpeg\"}], \"fldIoR1FbmmqM\": [\"recUnrYD3B2rN\"], \"fldUoyGtJj0t3\": [{\"text\": \"Capture potential clients, store details of real estate, manage agent workflows.\", \"type\": 1}], \"fldW3zP0JYBQh\": \"optVj0r55NvID\", \"fldXtJ31JBfSn\": [{\"text\": \"Real estate CRM\", \"type\": 1}], \"fldaXbXlJjC8f\": \"optY2Dvu45NcC\", \"flddJug9dW8c1\": \"optYBBuFuKDnR\"}","recordId":"recZVpwcv7O2v","dstId":"dstDMtvJVKyBokeTpF"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"Project Management\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recOtSt07Rz1z\"], \"fldp7h0PivDZX\": [\"rec8dIKmoK7YA\", \"recAT8FdDGuCf\"], \"fldqDdz5LYpX8\": \"optjwZQF0sH5R\"}","recordId":"rec5TmOl5BFoX","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"Content calendar\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recRiHLfS0mi5\"], \"fldp7h0PivDZX\": [\"rec8dIKmoK7YA\", \"reczzVvLqaWiB\"], \"fldqDdz5LYpX8\": \"optjwZQF0sH5R\"}","recordId":"rec9svJJWTVqQ","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"Marketing Campaign Management\", \"type\": 1}], \"fldGRMAadXQOB\": [\"rectSYLznqZpD\"], \"fldp7h0PivDZX\": [\"rec8dIKmoK7YA\", \"reczzVvLqaWiB\"], \"fldqDdz5LYpX8\": \"optjwZQF0sH5R\"}","recordId":"recbHbjGesGGj","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"CRM管理系统\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recaOEXGHsrp6\"], \"fldlJgV7f877h\": [\"recJmCBJ4gk9g\", \"recVaeaZZGfWN\", \"recy6wxOglxgW\", \"rechpOp8IcF7K\"], \"fldp7h0PivDZX\": [\"recFu3cyRTMKu\", \"recSLOn5BE3Lg\"], \"fldqDdz5LYpX8\": \"optwWPvKZImgZ\"}","recordId":"recfecJVcf03u","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"Sprints Management\", \"type\": 1}], \"fldGRMAadXQOB\": [\"rec3D6o9W2dzl\"], \"fldp7h0PivDZX\": [\"rec8dIKmoK7YA\", \"recAT8FdDGuCf\"], \"fldqDdz5LYpX8\": \"optjwZQF0sH5R\"}","recordId":"rechWS2TrUzaD","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"OKR管理-系统版\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recEIxQNyDVba\"], \"fldev0H1QnTDE\": [\"recE45M2PyM3N\"], \"fldlJgV7f877h\": [\"recTvmBxG5GZc\", \"reckWiohwWiaG\", \"rec1rZHBgf12l\"], \"fldp7h0PivDZX\": [\"recWRBZoDUxbW\"], \"fldqDdz5LYpX8\": \"optwWPvKZImgZ\"}","recordId":"recko6YFE3pSZ","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"远程办公解决方案\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recFTSuunN1LX\"], \"fldlJgV7f877h\": [\"recgh48fpJyDQ\", \"recTvmBxG5GZc\", \"rec1rZHBgf12l\"], \"fldp7h0PivDZX\": [\"recdBzl4BW7pC\", \"recFu3cyRTMKu\", \"recZbo9sRs7UZ\"], \"fldqDdz5LYpX8\": \"optwWPvKZImgZ\"}","recordId":"recrDrfPxISwI","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"Scrum 敏捷软件开发\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recbNj6bHSoKg\"], \"fldlJgV7f877h\": [\"recgh48fpJyDQ\", \"recc4QFCgn0hb\", \"rec4tDUoQciNO\"], \"fldp7h0PivDZX\": [\"recFu3cyRTMKu\", \"recVBcdx8trrS\", \"recSqYURBZsxd\"], \"fldqDdz5LYpX8\": \"optwWPvKZImgZ\"}","recordId":"recu31sNSwpx4","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"Real estate CRM\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recZVpwcv7O2v\"], \"fldp7h0PivDZX\": [\"rec8dIKmoK7YA\", \"recWeKCgneZQY\"], \"fldqDdz5LYpX8\": \"optjwZQF0sH5R\"}","recordId":"recUnrYD3B2rN","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fld0G9emDlpj8\": [{\"text\": \"运营必备-甘特图\", \"type\": 1}], \"fldGRMAadXQOB\": [\"recd0TjIurOZ7\"], \"fldlJgV7f877h\": [\"recgh48fpJyDQ\", \"recelHHYNCkcl\", \"recdTap5Y0XXu\", \"recsDeA8X7bMe\"], \"fldp7h0PivDZX\": [\"recEAgfcUMPMN\", \"recFu3cyRTMKu\", \"reckdI0ARnsfm\"], \"fldqDdz5LYpX8\": \"optwWPvKZImgZ\"}","recordId":"recUTvtxQlMcA","dstId":"dstdNw6i4e9BUPVy0G"},{"data":"{\"fldBBmmIuChe2\": [{\"text\": \"{\\\"en\\\": {\\\"$robot_variables_record_ID\\\": \\\"Record ID\\\", \\\"$robot_variables_record_URL\\\": \\\"Record URL\\\", \\\"$robot_variables_datasheet_ID\\\": \\\"Datasheet ID\\\", \\\"$robot_variables_datasheet_name\\\": \\\"Datasheet name\\\", \\\"$robot_trigger_record_created_desc\\\": \\\"Once a record is created, either by manual operation, API, or form collection, the robot will start working\\\", \\\"$robot_trigger_record_created_title\\\": \\\"Record is created\\\", \\\"$robot_trigger_record_created_config_1\\\": \\\"Select a datasheet\\\"}, \\\"zh\\\": {\\\"$robot_variables_record_ID\\\": \\\"记录 ID\\\", \\\"$robot_variables_record_URL\\\": \\\"记录 URL\\\", \\\"$robot_variables_datasheet_ID\\\": \\\"维格表 ID\\\", \\\"$robot_variables_datasheet_name\\\": \\\"维格表名称\\\", \\\"$robot_trigger_record_created_desc\\\": \\\"只要表中有新的记录被创建（比如手动创建记录、API 创建记录、收到表单提交），机器人都会开始运行\\\", \\\"$robot_trigger_record_created_title\\\": \\\"有新的记录创建时\\\", \\\"$robot_trigger_record_created_config_1\\\": \\\"选择维格表\\\"}}\", \"type\": 1}], \"fldDnyfPBlVzP\": [{\"text\": \"record_created\", \"type\": 1}], \"fldHR7hnxt1ej\": [{\"text\": \"$robot_trigger_record_created_title\", \"type\": 1}], \"fldQTURaxpIxw\": [[{\"text\": \"asvct0KiIrKQTsTRCN\", \"type\": 1}]], \"fldcA68TYbCxi\": [{\"text\": \"{\\\"schema\\\": {\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"datasheetId\\\"], \\\"properties\\\": {\\\"datasheetId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_trigger_record_created_config_1\\\"}}, \\\"additionalProperties\\\": false}, \\\"uiSchema\\\": {}}\", \"type\": 1}], \"fldf2VD1hFabS\": [{\"text\": \"$robot_trigger_record_created_desc\", \"type\": 1}], \"fldhNxRXTsNd6\": [\"optasiLkVFrkt\", \"optEA9gtbFjLk\"], \"fldlB58RPjaXR\": [{\"text\": \"{\\\"type\\\": \\\"object\\\", \\\"title\\\": \\\"$robot_trigger_record_created_title\\\", \\\"required\\\": [\\\"datasheetId\\\", \\\"datasheetName\\\", \\\"recordId\\\", \\\"recordUrl\\\"], \\\"properties\\\": {\\\"recordId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_record_ID\\\"}, \\\"recordUrl\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_record_URL\\\"}, \\\"datasheetId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_datasheet_ID\\\"}, \\\"datasheetName\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_datasheet_name\\\"}}}\", \"type\": 1}], \"fldqfADmCSg2g\": [\"recMliZRumx8K\"], \"flduH7N1dKSzp\": [{\"text\": \"attpoKSLIWLT0UEO4e\", \"type\": 1}]}","recordId":"recgFiNUmF51A","dstId":"dste3Vx1NuWdeDaGqQ"},{"data":"{\"fldBBmmIuChe2\": [{\"text\": \"{\\\"en\\\": {\\\"$robot_variables_record_ID\\\": \\\"Record ID\\\", \\\"$robot_variables_record_URL\\\": \\\"Record URL\\\", \\\"$robot_variables_datasheet_ID\\\": \\\"Datasheet ID\\\", \\\"$robot_variables_datasheet_name\\\": \\\"Datasheet name\\\", \\\"$robot_trigger_form_submitted_desc\\\": \\\"When a form receives a new response, the robot will start working\\\", \\\"$robot_trigger_form_submitted_title\\\": \\\"Form is submitted\\\", \\\"$robot_trigger_form_submitted_config_1\\\": \\\"Select a form\\\"}, \\\"zh\\\": {\\\"$robot_variables_record_ID\\\": \\\"记录 ID\\\", \\\"$robot_variables_record_URL\\\": \\\"记录 URL\\\", \\\"$robot_variables_datasheet_ID\\\": \\\"维格表 ID\\\", \\\"$robot_variables_datasheet_name\\\": \\\"维格表名称\\\", \\\"$robot_trigger_form_submitted_desc\\\": \\\"当指定表单收到新的提交时，机器人会开始运行\\\", \\\"$robot_trigger_form_submitted_title\\\": \\\"有新的表单提交时\\\", \\\"$robot_trigger_form_submitted_config_1\\\": \\\"选择神奇表单\\\"}}\", \"type\": 1}], \"fldDnyfPBlVzP\": [{\"text\": \"form_submitted\", \"type\": 1}], \"fldHR7hnxt1ej\": [{\"text\": \"$robot_trigger_form_submitted_title\", \"type\": 1}], \"fldQTURaxpIxw\": [[{\"text\": \"asvct0KiIrKQTsTRCN\", \"type\": 1}]], \"fldcA68TYbCxi\": [{\"text\": \"{\\\"schema\\\": {\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"formId\\\"], \\\"properties\\\": {\\\"formId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_trigger_form_submitted_config_1\\\"}}, \\\"additionalProperties\\\": false}, \\\"uiSchema\\\": {}}\", \"type\": 1}], \"fldf2VD1hFabS\": [{\"text\": \"$robot_trigger_form_submitted_desc\", \"type\": 1}], \"fldhNxRXTsNd6\": [\"optasiLkVFrkt\", \"optEA9gtbFjLk\"], \"fldlB58RPjaXR\": [{\"text\": \"{\\\"type\\\": \\\"object\\\", \\\"title\\\": \\\"$robot_trigger_form_submitted_title\\\", \\\"required\\\": [\\\"datasheetId\\\", \\\"datasheetName\\\", \\\"recordId\\\", \\\"recordUrl\\\"], \\\"properties\\\": {\\\"recordId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_record_ID\\\"}, \\\"recordUrl\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_record_URL\\\"}, \\\"datasheetId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_datasheet_ID\\\"}, \\\"datasheetName\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_datasheet_name\\\"}}}\", \"type\": 1}], \"fldqfADmCSg2g\": [\"recMliZRumx8K\"], \"flduH7N1dKSzp\": [{\"text\": \"attyfxYdq9GqAPxcbZ\", \"type\": 1}]}","recordId":"recNDybduT0ji","dstId":"dste3Vx1NuWdeDaGqQ"},{"data":"{\"fldBBmmIuChe2\": [{\"text\": \"{\\\"en\\\": {\\\"$robot_variables_record_ID\\\": \\\"Record ID\\\", \\\"$robot_variables_record_URL\\\": \\\"Record URL\\\", \\\"$robot_variables_datasheet_ID\\\": \\\"Datasheet ID\\\", \\\"$robot_variables_datasheet_name\\\": \\\"Datasheet name\\\", \\\"$robot_trigger_record_matches_condition_desc\\\": \\\"When a record matches predefined conditions, the robot will start working\\\", \\\"$robot_trigger_record_matches_condition_title\\\": \\\"Record matches conditions\\\", \\\"$robot_trigger_record_matches_condition_config_1\\\": \\\"Select a datasheet\\\", \\\"$robot_trigger_record_matches_condition_config_2\\\": \\\"Select match conditions\\\", \\\"$robot_trigger_record_matches_condition_config_2_desc\\\": \\\"Note: Adding Date/Formula field to trigger at scheduled/due time is not supported [FAQ](\", \"type\": 1}, {\"link\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#robot-scene-related-faq\", \"text\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#robot-scene-related-faq\", \"type\": 2}, {\"text\": \")\\\"}, \\\"zh\\\": {\\\"$robot_variables_record_ID\\\": \\\"记录 ID\\\", \\\"$robot_variables_record_URL\\\": \\\"记录 URL\\\", \\\"$robot_variables_datasheet_ID\\\": \\\"维格表 ID\\\", \\\"$robot_variables_datasheet_name\\\": \\\"维格表名称\\\", \\\"$robot_trigger_record_matches_condition_desc\\\": \\\"当表中有记录满足指定条件时，机器人会开始运行\\\", \\\"$robot_trigger_record_matches_condition_title\\\": \\\"有记录满足条件时\\\", \\\"$robot_trigger_record_matches_condition_config_1\\\": \\\"选择维格表\\\", \\\"$robot_trigger_record_matches_condition_config_2\\\": \\\"选择匹配条件\\\", \\\"$robot_trigger_record_matches_condition_config_2_desc\\\": \\\"注意：不支持在匹配条件中添加日期列或者包含日期函数的公式列来实现定时触发或到期触发 [FAQ 参考](\", \"type\": 1}, {\"link\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#robot-scene-related-faq\", \"text\": \"https://help.vika.cn/docs/guide/manual-automation-robot/#robot-scene-related-faq\", \"type\": 2}, {\"text\": \")\\\"}}\", \"type\": 1}], \"fldDnyfPBlVzP\": [{\"text\": \"record_matches_conditions\", \"type\": 1}], \"fldHR7hnxt1ej\": [{\"text\": \"$robot_trigger_record_matches_condition_title\", \"type\": 1}], \"fldQTURaxpIxw\": [[{\"text\": \"asvct0KiIrKQTsTRCN\", \"type\": 1}]], \"fldcA68TYbCxi\": [{\"text\": \"{\\\"schema\\\": {\\\"type\\\": \\\"object\\\", \\\"required\\\": [\\\"datasheetId\\\", \\\"filter\\\"], \\\"properties\\\": {\\\"filter\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_trigger_record_matches_condition_config_2\\\", \\\"description\\\": \\\"$robot_trigger_record_matches_condition_config_2_desc\\\"}, \\\"datasheetId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_trigger_record_matches_condition_config_1\\\"}}, \\\"additionalProperties\\\": false}, \\\"uiSchema\\\": {\\\"ui:order\\\": [\\\"datasheetId\\\", \\\"filter\\\"]}}\", \"type\": 1}], \"fldf2VD1hFabS\": [{\"text\": \"$robot_trigger_record_matches_condition_desc\", \"type\": 1}], \"fldhNxRXTsNd6\": [\"optasiLkVFrkt\", \"optEA9gtbFjLk\"], \"fldlB58RPjaXR\": [{\"text\": \"{\\\"type\\\": \\\"object\\\", \\\"title\\\": \\\"$robot_trigger_record_matches_condition_title\\\", \\\"required\\\": [\\\"datasheetId\\\", \\\"datasheetName\\\", \\\"recordId\\\", \\\"recordUrl\\\"], \\\"properties\\\": {\\\"recordId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_record_ID\\\"}, \\\"recordUrl\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_record_URL\\\"}, \\\"datasheetId\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_datasheet_ID\\\"}, \\\"datasheetName\\\": {\\\"type\\\": \\\"string\\\", \\\"title\\\": \\\"$robot_variables_datasheet_name\\\"}}}\", \"type\": 1}], \"fldqfADmCSg2g\": [\"recMliZRumx8K\"], \"flduH7N1dKSzp\": [{\"text\": \"att3AB2qZ47Qldul5K\", \"type\": 1}]}","recordId":"recQvLDhIw2Xi","dstId":"dste3Vx1NuWdeDaGqQ"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🌟 Featured\", \"type\": 1}], \"fldgAJfAOr942\": \"optY2Dvu45NcC\", \"fldlJm9Jmnrx7\": [\"rec9svJJWTVqQ\", \"rec5TmOl5BFoX\", \"rechWS2TrUzaD\", \"recUnrYD3B2rN\", \"recbHbjGesGGj\"]}","recordId":"rec8dIKmoK7YA","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🎯 Project Management\", \"type\": 1}], \"fldgAJfAOr942\": \"optY2Dvu45NcC\", \"fldlJm9Jmnrx7\": [\"rec5TmOl5BFoX\", \"rechWS2TrUzaD\"]}","recordId":"recAT8FdDGuCf","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"📈  工作规划\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldl54nI7BtuJ\": [\"recE45M2PyM3N\"], \"fldlJm9Jmnrx7\": [\"recrDrfPxISwI\"]}","recordId":"recdBzl4BW7pC","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🛍️  电商运营\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recUTvtxQlMcA\"]}","recordId":"recEAgfcUMPMN","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"😷  远程办公\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recfecJVcf03u\", \"recrDrfPxISwI\", \"recu31sNSwpx4\", \"recUTvtxQlMcA\"]}","recordId":"recFu3cyRTMKu","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🍹  活动策划\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recUTvtxQlMcA\"]}","recordId":"reckdI0ARnsfm","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"👥  客户服务\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recfecJVcf03u\"]}","recordId":"recSLOn5BE3Lg","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🖥️  产品研发\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recu31sNSwpx4\"]}","recordId":"recSqYURBZsxd","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🗂  项目管理\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recu31sNSwpx4\"]}","recordId":"recVBcdx8trrS","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"🤝 Sales & Customers\", \"type\": 1}], \"fldgAJfAOr942\": \"optY2Dvu45NcC\", \"fldlJm9Jmnrx7\": [\"recUnrYD3B2rN\"]}","recordId":"recWeKCgneZQY","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"⛳  OKR 管理\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recko6YFE3pSZ\"]}","recordId":"recWRBZoDUxbW","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"💯  企业服务\", \"type\": 1}], \"fldgAJfAOr942\": \"optNDxBEHgqTL\", \"fldlJm9Jmnrx7\": [\"recrDrfPxISwI\"]}","recordId":"recZbo9sRs7UZ","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldGCHm6aXrgN\": true, \"fldQvbqsnf4ns\": [{\"text\": \"📆 Marketing\", \"type\": 1}], \"fldgAJfAOr942\": \"optY2Dvu45NcC\", \"fldlJm9Jmnrx7\": [\"rec9svJJWTVqQ\", \"recbHbjGesGGj\"]}","recordId":"reczzVvLqaWiB","dstId":"dstKGW3tuFVtmigZlK"},{"data":"{\"fldOKiILFlUfS\": [{\"text\": \"vika\", \"type\": 1}], \"fldSAC0sGKy2O\": [{\"text\": \"{\\\"en\\\": {\\\"$vikadata\\\": \\\"Datasheet\\\"}, \\\"zh\\\": {\\\"$vikadata\\\": \\\"维格表\\\"}}\", \"type\": 1}], \"fldTA4Cq8l3PI\": [\"recNDybduT0ji\", \"recQvLDhIw2Xi\", \"recgFiNUmF51A\"], \"fldXFYuHcHDDu\": [{\"id\": \"atcmbzDOuBt7v\", \"name\": \"ServicesIcon-1.png\", \"size\": 1820, \"token\": \"space/2022/01/18/136999e8a2284067842f96b3f9b33e5b\", \"width\": 120, \"bucket\": \"QNY1\", \"height\": 120, \"mimeType\": \"image/png\"}], \"fldbrbDiH18BC\": [{\"text\": \"asvct0KiIrKQTsTRCN\", \"type\": 1}], \"fldiPhO7fCfqz\": [{\"text\": \"$vikadata\", \"type\": 1}]}","recordId":"recMliZRumx8K","dstId":"dstlWhj5wG4WtVjHlq"},{"data":"{\"fld4ieUMNGwTB\": [\"recT8fdhBZr64\"], \"fldOKiILFlUfS\": [{\"text\": \"webhook\", \"type\": 1}], \"fldSAC0sGKy2O\": [{\"text\": \"{\\\"en\\\": {\\\"$webhook\\\": \\\"Webhook\\\"}, \\\"zh\\\": {\\\"$webhook\\\": \\\"Webhook\\\"}}\", \"type\": 1}], \"fldXFYuHcHDDu\": [{\"id\": \"atcRIK14aYB3E\", \"name\": \"ServicesIcon.png\", \"size\": 3928, \"token\": \"space/2022/01/18/020bac9b80e645b7ba692bc90ae372d5\", \"width\": 120, \"bucket\": \"QNY1\", \"height\": 120, \"mimeType\": \"image/png\"}], \"fldao2Hh581e7\": [{\"text\": \"automation://webhook/\", \"type\": 1}], \"fldbrbDiH18BC\": [{\"text\": \"asvX1OaY9lmi8fDPcQ\", \"type\": 1}], \"fldiPhO7fCfqz\": [{\"text\": \"$webhook\", \"type\": 1}]}","recordId":"recRVlxR9qCuq","dstId":"dstlWhj5wG4WtVjHlq"},{"data":"{\"fldGF11af8BA9\": \"optWUjGjQcQYl\", \"fldZ0ihem7q9d\": \"optDoB5jnFXDj\", \"fldyb77g6wZh0\": [{\"text\": \"ROBOT\", \"type\": 1}]}","recordId":"recaTQDH6Rm6K","dstId":"dstMwqbopksYSl754h"},{"data":"{\"fldGF11af8BA9\": \"optGGEk6Fnj31\", \"fldZ0ihem7q9d\": \"optDoB5jnFXDj\", \"fldyb77g6wZh0\": [{\"text\": \"VIEW_MANUAL_SAVE\", \"type\": 1}]}","recordId":"recNWEUQQ0mhy","dstId":"dstMwqbopksYSl754h"},{"data":"{\"fldGF11af8BA9\": \"optWUjGjQcQYl\", \"fldZ0ihem7q9d\": \"optDoB5jnFXDj\", \"fldyb77g6wZh0\": [{\"text\": \"WIDGET_CENTER\", \"type\": 1}]}","recordId":"recvhg9jcp7FZ","dstId":"dstMwqbopksYSl754h"},{"data":"{\"fld26mK3Jp0Tc\": [{\"text\": \"从工作计划制定、落地执行、到复盘汇报，助力完成年度目标\", \"type\": 1}], \"fld8zVAFkCQBG\": [{\"text\": \"\\\"# Q4 冲刺\\n\\nQ4正式开启，你为Q4业绩冲刺做好准备了吗？想要做出好成绩，良好的团队计划、时间&任务执行管理都是必不可少的。用好协作管理工具，将有助于做好计划信息同步和项目复盘，避免偏离目标、重蹈覆辙，冲刺好业绩。\\n\\n<br>\\n\\n### OKR管理-系统版\\n\\n适用于管理层、人力资源、战略管理等，统筹企业和各级OKR，从而达成一致目标。\\n\\n<a class=\\\"\\\"btn\\\"\\\" href=\\\"\\\"\", \"type\": 1}, {\"link\": \"https://vika.cn/template/tpckXdZ9tRmrD/tplRu4MjlE9aF\", \"text\": \"https://vika.cn/template/tpckXdZ9tRmrD/tplRu4MjlE9aF\", \"type\": 2}, {\"text\": \"\\\"\\\" target=\\\"\\\"_blank\\\"\\\">预览模板</a>\\n\\n![](\", \"type\": 1}, {\"link\": \"https://s1.vika.cn/space/2022/10/18/35863460b7094992bbfeacaf916c2478\", \"text\": \"https://s1.vika.cn/space/2022/10/18/35863460b7094992bbfeacaf916c2478\", \"type\": 2}, {\"text\": \")\\\"\", \"type\": 1}], \"fldCphHSKwYzx\": [{\"text\": \"【专题】Q4 冲刺\", \"type\": 1}], \"fldDqCnW2fehG\": [{\"id\": \"atcu40c0X2AKe\", \"name\": \"pexels-fauxels-3184292.jpg\", \"size\": 2694003, \"token\": \"space/2022/10/17/4be395fdb45a4e508cc2b6fd70b41ce6\", \"width\": 6000, \"bucket\": \"QNY1\", \"height\": 3374, \"mimeType\": \"image/jpeg\"}], \"fldGfURnahQMy\": [\"recko6YFE3pSZ\"], \"fldNUslTCRKZq\": [\"recDVcDw1vrpv\"], \"fldNpsq9KxMpy\": [{\"id\": \"atcFeq78V8Jwt\", \"name\": \"vika logo 图形@2x.png\", \"size\": 2459, \"token\": \"space/2021/12/09/d46accd3142947d9b023d81a7b0fcbd3\", \"width\": 200, \"bucket\": \"QNY1\", \"height\": 200, \"mimeType\": \"image/png\"}], \"fldThX05YXsmU\": [\"recdBzl4BW7pC\"], \"fldUQEdAn0rlj\": [{\"text\": \"维格表官方模板中心\", \"type\": 1}], \"fldoBffJICmGL\": \"optQZnA0LgokZ\", \"fldtRmLcmnzpH\": [{\"text\": \"新一代团队数据协作和项目管理工具，可以应用于项目管理、数据协同、客户管理、内容管理等工作场景，打破传统SaaS软件的流程固化，帮助中小企业提高数字化生产力\", \"type\": 1}]}","recordId":"recE45M2PyM3N","dstId":"dstVNXbbgNQdWTpqeV"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recrDrfPxISwI\", \"recko6YFE3pSZ\"], \"fldM6AmjjcNeB\": [{\"text\": \"工作规划\", \"type\": 1}]}","recordId":"rec1rZHBgf12l","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recu31sNSwpx4\"], \"fldM6AmjjcNeB\": [{\"text\": \"产品研发\", \"type\": 1}]}","recordId":"rec4tDUoQciNO","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recu31sNSwpx4\"], \"fldM6AmjjcNeB\": [{\"text\": \"研发\", \"type\": 1}]}","recordId":"recc4QFCgn0hb","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recUTvtxQlMcA\"], \"fldM6AmjjcNeB\": [{\"text\": \"活动管理\", \"type\": 1}]}","recordId":"recdTap5Y0XXu","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recUTvtxQlMcA\"], \"fldM6AmjjcNeB\": [{\"text\": \"电商运营\", \"type\": 1}]}","recordId":"recelHHYNCkcl","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recu31sNSwpx4\", \"recUTvtxQlMcA\", \"recrDrfPxISwI\"], \"fldM6AmjjcNeB\": [{\"text\": \"甘特图\", \"type\": 1}]}","recordId":"recgh48fpJyDQ","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recfecJVcf03u\"], \"fldM6AmjjcNeB\": [{\"text\": \"销售客服\", \"type\": 1}]}","recordId":"rechpOp8IcF7K","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recfecJVcf03u\"], \"fldM6AmjjcNeB\": [{\"text\": \"镜像\", \"type\": 1}]}","recordId":"recJmCBJ4gk9g","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recko6YFE3pSZ\"], \"fldM6AmjjcNeB\": [{\"text\": \"OKR\", \"type\": 1}]}","recordId":"reckWiohwWiaG","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recUTvtxQlMcA\"], \"fldM6AmjjcNeB\": [{\"text\": \"运营\", \"type\": 1}]}","recordId":"recsDeA8X7bMe","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recrDrfPxISwI\", \"recko6YFE3pSZ\"], \"fldM6AmjjcNeB\": [{\"text\": \"管理者\", \"type\": 1}]}","recordId":"recTvmBxG5GZc","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recfecJVcf03u\"], \"fldM6AmjjcNeB\": [{\"text\": \"合同管理\", \"type\": 1}]}","recordId":"recVaeaZZGfWN","dstId":"dstzS1VRVQynS75CXW"},{"data":"{\"fld50x87L3I8i\": \"optNDxBEHgqTL\", \"fldLePInM1rbW\": [\"recfecJVcf03u\"], \"fldM6AmjjcNeB\": [{\"text\": \"客户服务\", \"type\": 1}]}","recordId":"recy6wxOglxgW","dstId":"dstzS1VRVQynS75CXW"}],"datasheetMetas":[{"metaData":"{\"views\": [{\"id\": \"viwjyPJ4asrsG\", \"name\": \"维格视图\", \"rows\": [{\"recordId\": \"recT8fdhBZr64\"}], \"type\": 1, \"columns\": [{\"fieldId\": \"fldcpHWXUmYnV\", \"statType\": 1}, {\"hidden\": false, \"fieldId\": \"fldD0ib6HO6TL\"}, {\"hidden\": false, \"fieldId\": \"fldnOnHvqCT1i\"}, {\"hidden\": false, \"fieldId\": \"fldKHM9tchZYD\"}, {\"hidden\": false, \"fieldId\": \"fldowCXJBfXQs\"}, {\"hidden\": false, \"fieldId\": \"fldSLd3cFMWIv\"}, {\"hidden\": false, \"fieldId\": \"fldWdstkg3TBj\"}, {\"hidden\": false, \"fieldId\": \"fldx0XzkzHsgi\"}, {\"hidden\": false, \"fieldId\": \"fldtKt7ghekJ2\"}, {\"hidden\": false, \"fieldId\": \"fldQBBjiSfLnA\"}, {\"hidden\": false, \"fieldId\": \"flddF2oTfLaUo\"}], \"autoSave\": true, \"rowHeightLevel\": 2, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fldD0ib6HO6TL\": {\"id\": \"fldD0ib6HO6TL\", \"name\": \".Service\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fld4ieUMNGwTB\", \"foreignDatasheetId\": \"dstlWhj5wG4WtVjHlq\"}}, \"fldKHM9tchZYD\": {\"id\": \"fldKHM9tchZYD\", \"name\": \".SERVICE_LOGO\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dst68NlKxcGvX2P9k4\", \"relatedLinkFieldId\": \"fldD0ib6HO6TL\", \"lookUpTargetFieldId\": \"fldXFYuHcHDDu\"}}, \"fldQBBjiSfLnA\": {\"id\": \"fldQBBjiSfLnA\", \"name\": \"i18n\", \"type\": 1}, \"fldSLd3cFMWIv\": {\"id\": \"fldSLd3cFMWIv\", \"name\": \"NAME\", \"type\": 1}, \"fldWdstkg3TBj\": {\"id\": \"fldWdstkg3TBj\", \"name\": \"DESCRIPTION\", \"type\": 1}, \"fldcpHWXUmYnV\": {\"id\": \"fldcpHWXUmYnV\", \"name\": \"ENDPOINT\", \"type\": 19, \"property\": {}}, \"flddF2oTfLaUo\": {\"id\": \"flddF2oTfLaUo\", \"name\": \"备注\", \"type\": 1}, \"fldnOnHvqCT1i\": {\"id\": \"fldnOnHvqCT1i\", \"name\": \"SERVICE_ID\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dst68NlKxcGvX2P9k4\", \"relatedLinkFieldId\": \"fldD0ib6HO6TL\", \"lookUpTargetFieldId\": \"fldbrbDiH18BC\"}}, \"fldowCXJBfXQs\": {\"id\": \"fldowCXJBfXQs\", \"name\": \"ACTION_TYPE_ID\", \"type\": 1}, \"fldtKt7ghekJ2\": {\"id\": \"fldtKt7ghekJ2\", \"name\": \"OUTPUT_JSON_SCHEMA\", \"type\": 1}, \"fldx0XzkzHsgi\": {\"id\": \"fldx0XzkzHsgi\", \"name\": \"INPUT_JSON_SCHEMA\", \"type\": 1}}, \"widgetPanels\": []}","dstId":"dst68NlKxcGvX2P9k4","id":1610573374645018625},{"metaData":"{\"views\": [{\"id\": \"viwwpAfhlJpeD\", \"name\": \"配置视图\", \"rows\": [{\"recordId\": \"recB8MsyDBL7a\"}, {\"recordId\": \"recFGbzbBSl2B\"}], \"type\": 1, \"columns\": [{\"fieldId\": \"fldX3zyuFkv2L\", \"statType\": 1}, {\"hidden\": false, \"fieldId\": \"fldBLoGNcMJFf\"}, {\"width\": 153, \"hidden\": false, \"fieldId\": \"fldcaV7lythPw\"}, {\"width\": 150, \"fieldId\": \"fldvKKXsbbpgc\"}, {\"width\": 223, \"fieldId\": \"fldPuOTj8rXs2\"}, {\"width\": 151, \"hidden\": false, \"fieldId\": \"fldmQvs74EjOg\"}, {\"fieldId\": \"fldm4XrzYE5P4\"}, {\"width\": 356, \"fieldId\": \"fldtBidUZ8plQ\"}, {\"width\": 107, \"hidden\": false, \"fieldId\": \"fld03UowwQbAy\"}, {\"width\": 98, \"hidden\": false, \"fieldId\": \"fldgiNWrpN7hc\"}, {\"width\": 134, \"hidden\": false, \"fieldId\": \"fldF6Tb8yAG4O\"}, {\"width\": 133, \"hidden\": false, \"fieldId\": \"fldSAZGGSZOmf\"}, {\"width\": 142, \"hidden\": false, \"fieldId\": \"fld0zfRQb9oJ0\"}, {\"width\": 146, \"hidden\": false, \"fieldId\": \"fld25DjjLwpiI\"}, {\"width\": 106, \"hidden\": false, \"fieldId\": \"fld6nhfFJvTjb\"}, {\"width\": 101, \"hidden\": false, \"fieldId\": \"fldZsF9F9tfsP\"}, {\"width\": 89, \"hidden\": false, \"fieldId\": \"fldCdm7DTtZva\"}], \"rowHeightLevel\": 1, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld03UowwQbAy\": {\"id\": \"fld03UowwQbAy\", \"desc\": \"手动填写版本号，例如：1.0.0\", \"name\": \"VERSION\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}, \"required\": true}, \"fld0zfRQb9oJ0\": {\"id\": \"fld0zfRQb9oJ0\", \"name\": \"修改人\", \"type\": 24, \"property\": {\"uuids\": [\"aa8ad2e78a254eb5853a3a388a925faa\"], \"collectType\": 0, \"datasheetId\": \"dstclCuAj2CJaEqo5Y\", \"fieldIdCollection\": []}}, \"fld25DjjLwpiI\": {\"id\": \"fld25DjjLwpiI\", \"name\": \"修改时间\", \"type\": 22, \"property\": {\"dateFormat\": 0, \"timeFormat\": 1, \"collectType\": 0, \"datasheetId\": \"dstclCuAj2CJaEqo5Y\", \"includeTime\": false, \"fieldIdCollection\": []}}, \"fld6nhfFJvTjb\": {\"id\": \"fld6nhfFJvTjb\", \"desc\": \"可选择性覆盖字段，无值时沿用原配置\", \"name\": \"ICON\", \"type\": 6}, \"fldBLoGNcMJFf\": {\"id\": \"fldBLoGNcMJFf\", \"name\": \"PACKAGE_ID\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}, \"fldCdm7DTtZva\": {\"id\": \"fldCdm7DTtZva\", \"desc\": \"可选择性覆盖字段，无值时沿用原配置\", \"name\": \"RELEASE_CODE_BUNDLE\", \"type\": 6}, \"fldF6Tb8yAG4O\": {\"id\": \"fldF6Tb8yAG4O\", \"name\": \"创建人\", \"type\": 23, \"property\": {\"uuids\": [\"aa8ad2e78a254eb5853a3a388a925faa\"], \"datasheetId\": \"dstclCuAj2CJaEqo5Y\"}}, \"fldPuOTj8rXs2\": {\"id\": \"fldPuOTj8rXs2\", \"desc\": \"小程序官网地址\", \"name\": \"WEBSITE\", \"type\": 8, \"property\": {\"isRecogURLFlag\": false}}, \"fldSAZGGSZOmf\": {\"id\": \"fldSAZGGSZOmf\", \"name\": \"创建时间\", \"type\": 21, \"property\": {\"dateFormat\": 0, \"timeFormat\": 1, \"datasheetId\": \"dstclCuAj2CJaEqo5Y\", \"includeTime\": false}}, \"fldX3zyuFkv2L\": {\"id\": \"fldX3zyuFkv2L\", \"name\": \"PACKAGE_NAME\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}, \"fldZsF9F9tfsP\": {\"id\": \"fldZsF9F9tfsP\", \"desc\": \"可选择性覆盖字段，无值时沿用原配置\", \"name\": \"COVER\", \"type\": 6}, \"fldcaV7lythPw\": {\"id\": \"fldcaV7lythPw\", \"name\": \"AUTHOR\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldv30xUKERPF\", \"foreignDatasheetId\": \"dstcZ0SHCog9RSBPec\"}}, \"fldgiNWrpN7hc\": {\"id\": \"fldgiNWrpN7hc\", \"desc\": \"勾选会更新小组件当前信息；\\n更新字段：\\n是否生效/模版\\n开源地址\\n小组件展示顺序\", \"name\": \"更新\", \"type\": 11, \"property\": {\"icon\": \"heavy_check_mark\"}}, \"fldm4XrzYE5P4\": {\"id\": \"fldm4XrzYE5P4\", \"desc\": \"模版封面图。模版小程序，扩展封面图\", \"name\": \"TEMPLATE_COVER\", \"type\": 6}, \"fldmQvs74EjOg\": {\"id\": \"fldmQvs74EjOg\", \"desc\": \"是否模版\", \"name\": \"IS_TEMPLATE\", \"type\": 11, \"property\": {\"icon\": \"white_check_mark\"}, \"required\": true}, \"fldtBidUZ8plQ\": {\"id\": \"fldtBidUZ8plQ\", \"desc\": \"小程序开源地址，目前只有模版组件才会写入数据\", \"name\": \"WIDGET_OPEN_SOURCE\", \"type\": 8, \"property\": {\"isRecogURLFlag\": false}}, \"fldvKKXsbbpgc\": {\"id\": \"fldvKKXsbbpgc\", \"desc\": \"是否生效\", \"name\": \"IS_ENABLED\", \"type\": 11, \"property\": {\"icon\": \"white_check_mark\"}, \"required\": true}}}","dstId":"dstclCuAj2CJaEqo5Y","id":1610573157873811458},{"metaData":"{\"views\": [{\"id\": \"viwg5CBYj8Zx9\", \"name\": \"Grid view\", \"rows\": [{\"recordId\": \"recGBoDNnquer\"}], \"type\": 1, \"columns\": [{\"fieldId\": \"fldKLYtSRGx8a\", \"statType\": 1}, {\"fieldId\": \"fldBJQFxl6HFu\"}, {\"width\": 125, \"fieldId\": \"fld4CrFbbGAW1\"}, {\"hidden\": false, \"fieldId\": \"fld3tKII6UZiR\"}, {\"width\": 524, \"hidden\": false, \"fieldId\": \"fldv30xUKERPF\"}], \"autoSave\": false, \"rowHeightLevel\": 3, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld3tKII6UZiR\": {\"id\": \"fld3tKII6UZiR\", \"name\": \"LINK\", \"type\": 8, \"property\": {\"isRecogURLFlag\": false}}, \"fld4CrFbbGAW1\": {\"id\": \"fld4CrFbbGAW1\", \"name\": \"ICON\", \"type\": 6}, \"fldBJQFxl6HFu\": {\"id\": \"fldBJQFxl6HFu\", \"name\": \"EMAIL\", \"type\": 9}, \"fldKLYtSRGx8a\": {\"id\": \"fldKLYtSRGx8a\", \"name\": \"NAME\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}, \"fldv30xUKERPF\": {\"id\": \"fldv30xUKERPF\", \"name\": \"小程序管理\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldcaV7lythPw\", \"foreignDatasheetId\": \"dstclCuAj2CJaEqo5Y\"}}}}","dstId":"dstcZ0SHCog9RSBPec","id":1610573157718622210},{"metaData":"{\"views\": [{\"id\": \"viwIaVZVAWIhR\", \"name\": \"配置视图\", \"rows\": [{\"recordId\": \"recFTSuunN1LX\"}, {\"recordId\": \"recEIxQNyDVba\"}, {\"recordId\": \"recd0TjIurOZ7\"}, {\"recordId\": \"recOtSt07Rz1z\"}, {\"recordId\": \"recZVpwcv7O2v\"}, {\"recordId\": \"recDVcDw1vrpv\"}, {\"recordId\": \"recbNj6bHSoKg\"}, {\"recordId\": \"recaOEXGHsrp6\"}, {\"recordId\": \"rectSYLznqZpD\"}, {\"recordId\": \"recRiHLfS0mi5\"}, {\"recordId\": \"rec3D6o9W2dzl\"}], \"type\": 1, \"columns\": [{\"width\": 213, \"fieldId\": \"fldGNDlcQGRZQ\"}, {\"hidden\": false, \"fieldId\": \"fldIoR1FbmmqM\"}, {\"hidden\": false, \"fieldId\": \"fldDbpaPCTlXy\"}, {\"width\": 160.98959350585938, \"fieldId\": \"fldXtJ31JBfSn\", \"statType\": 3}, {\"width\": 131, \"fieldId\": \"fldUoyGtJj0t3\"}, {\"width\": 125, \"fieldId\": \"fldH3wnv1Vj9a\"}, {\"width\": 118, \"fieldId\": \"flduiaATCh6eG\"}, {\"hidden\": false, \"fieldId\": \"fldW3zP0JYBQh\"}, {\"hidden\": false, \"fieldId\": \"flddJug9dW8c1\"}, {\"width\": 130, \"fieldId\": \"fldaXbXlJjC8f\"}, {\"width\": 178, \"hidden\": false, \"fieldId\": \"fld6ZUbl0jdzL\"}, {\"hidden\": false, \"fieldId\": \"fldVkEPXSxgt0\"}, {\"hidden\": false, \"fieldId\": \"fld8m8KHsN1zF\"}, {\"hidden\": true, \"fieldId\": \"fldtEnPpKiVXq\"}, {\"hidden\": true, \"fieldId\": \"fldXWqelg8tJ3\"}, {\"hidden\": true, \"fieldId\": \"fldUuQrG8kmuN\"}, {\"hidden\": true, \"fieldId\": \"fldLtN3osz8Da\"}, {\"hidden\": true, \"fieldId\": \"fldkGCfH3QbbL\"}], \"sortInfo\": {\"rules\": [{\"desc\": false, \"fieldId\": \"fldW3zP0JYBQh\"}, {\"desc\": false, \"fieldId\": \"flddJug9dW8c1\"}], \"keepSort\": true}, \"groupInfo\": [{\"desc\": false, \"fieldId\": \"fldaXbXlJjC8f\"}, {\"desc\": false, \"fieldId\": \"fldW3zP0JYBQh\"}], \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld6ZUbl0jdzL\": {\"id\": \"fld6ZUbl0jdzL\", \"desc\": \"选择是否上架\", \"name\": \"WHETHER_SHELF\", \"type\": 11, \"property\": {\"icon\": \"white_check_mark\"}}, \"fld8m8KHsN1zF\": {\"id\": \"fld8m8KHsN1zF\", \"desc\": \"API 读取条件\", \"name\": \"CHECK\", \"type\": 16, \"property\": {\"expression\": \"{fld6ZUbl0jdzL} && {fldtEnPpKiVXq} = 'true'\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstDMtvJVKyBokeTpF\"}}, \"fldDbpaPCTlXy\": {\"id\": \"fldDbpaPCTlXy\", \"name\": \"TEMPLATE_ALBUM\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldNUslTCRKZq\", \"limitSingleRecord\": true, \"foreignDatasheetId\": \"dstVNXbbgNQdWTpqeV\"}}, \"fldGNDlcQGRZQ\": {\"id\": \"fldGNDlcQGRZQ\", \"desc\": \"\", \"name\": \"SUBJECT\", \"type\": 16, \"property\": {\"expression\": \"IF({fldW3zP0JYBQh} = 'ALBUM_GROUP', {fldDbpaPCTlXy}， {fldIoR1FbmmqM})\", \"datasheetId\": \"dstDMtvJVKyBokeTpF\"}}, \"fldH3wnv1Vj9a\": {\"id\": \"fldH3wnv1Vj9a\", \"desc\": \"轮播图\", \"name\": \"BANNER\", \"type\": 6}, \"fldIoR1FbmmqM\": {\"id\": \"fldIoR1FbmmqM\", \"name\": \"TEMPLATE\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldGRMAadXQOB\", \"limitSingleRecord\": true, \"foreignDatasheetId\": \"dstdNw6i4e9BUPVy0G\"}}, \"fldLtN3osz8Da\": {\"id\": \"fldLtN3osz8Da\", \"name\": \"ALBUM_ERROR_TIP\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": [\"✅\"], \"fieldId\": \"fldQZeGDAL9f9\", \"operator\": \"doesNotContain\", \"fieldType\": 16, \"conditionId\": \"cdtpgM8ZsA5Oh\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstDMtvJVKyBokeTpF\", \"relatedLinkFieldId\": \"fldDbpaPCTlXy\", \"lookUpTargetFieldId\": \"fldQZeGDAL9f9\"}}, \"fldUoyGtJj0t3\": {\"id\": \"fldUoyGtJj0t3\", \"desc\": \"吸引人的摘要\", \"name\": \"DESC\", \"type\": 1}, \"fldUuQrG8kmuN\": {\"id\": \"fldUuQrG8kmuN\", \"name\": \"TEMPLATE_i18n\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstDMtvJVKyBokeTpF\", \"relatedLinkFieldId\": \"fldIoR1FbmmqM\", \"lookUpTargetFieldId\": \"fldqDdz5LYpX8\"}}, \"fldVkEPXSxgt0\": {\"id\": \"fldVkEPXSxgt0\", \"name\": \"TIP\", \"type\": 16, \"property\": {\"expression\": \"IF({fldtEnPpKiVXq} = 'true', '     ✅',\\nIF({fld6ZUbl0jdzL}, '⚠️⚠️ ', '') + {fldtEnPpKiVXq}\\n)\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstDMtvJVKyBokeTpF\"}}, \"fldW3zP0JYBQh\": {\"id\": \"fldW3zP0JYBQh\", \"name\": \"LAYOUT\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optVj0r55NvID\", \"name\": \"BANNER\", \"color\": 0}, {\"id\": \"opt15pfhzyApr\", \"name\": \"ALBUM_GROUP\", \"color\": 1}, {\"id\": \"opt2VE45iPrHr\", \"name\": \"TEMPLATE_GROUP\", \"color\": 2}]}}, \"fldXWqelg8tJ3\": {\"id\": \"fldXWqelg8tJ3\", \"name\": \"ALBUM_i18n\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstDMtvJVKyBokeTpF\", \"relatedLinkFieldId\": \"fldDbpaPCTlXy\", \"lookUpTargetFieldId\": \"fldoBffJICmGL\"}}, \"fldXtJ31JBfSn\": {\"id\": \"fldXtJ31JBfSn\", \"desc\": \"展示标题\", \"name\": \"TITLE\", \"type\": 1}, \"fldaXbXlJjC8f\": {\"id\": \"fldaXbXlJjC8f\", \"name\": \"i18n\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optNDxBEHgqTL\", \"name\": \"zh_CN\", \"color\": 0}, {\"id\": \"optY2Dvu45NcC\", \"name\": \"en_US\", \"color\": 1}]}}, \"flddJug9dW8c1\": {\"id\": \"flddJug9dW8c1\", \"name\": \"CUSTOM_GROUP\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optGZRgw5uVfC\", \"name\": \"Top1\", \"color\": 0}, {\"id\": \"optYBBuFuKDnR\", \"name\": \"Top2\", \"color\": 5}, {\"id\": \"optHX187bwuht\", \"name\": \"Top3\", \"color\": 6}, {\"id\": \"optImGwq6lvJ7\", \"name\": \"用户喜爱\", \"color\": 3}, {\"id\": \"optjavuyvp1y7\", \"name\": \"Other users also like\", \"color\": 2}, {\"id\": \"opttM51JtkmmU\", \"name\": \"其他用户喜爱的模板\", \"color\": 4}, {\"id\": \"optitbC9WW1O6\", \"name\": \"最新专题\", \"color\": 1}]}}, \"fldkGCfH3QbbL\": {\"id\": \"fldkGCfH3QbbL\", \"name\": \"TEMPLATE_ERROR_TIP\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": [\"✅\"], \"fieldId\": \"fld53oX5De7Ln\", \"operator\": \"doesNotContain\", \"fieldType\": 1, \"conditionId\": \"cdta9Ng0oU2x5\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstDMtvJVKyBokeTpF\", \"relatedLinkFieldId\": \"fldIoR1FbmmqM\", \"lookUpTargetFieldId\": \"fld53oX5De7Ln\"}}, \"fldtEnPpKiVXq\": {\"id\": \"fldtEnPpKiVXq\", \"name\": \".辅助判断\", \"type\": 16, \"property\": {\"expression\": \"IF({fldGNDlcQGRZQ} = BLANK(), '「SUBJECT」不能为空', \\nIF({fldaXbXlJjC8f} = BLANK(), '「i18n」不能为空', \\n\\nIF({fldLtN3osz8Da} != BLANK(), {fldLtN3osz8Da},\\nIF({fldkGCfH3QbbL} != BLANK(), {fldkGCfH3QbbL},\\n\\nSWITCH({fldW3zP0JYBQh}, \\nBLANK(), '「LAYOUT」不能为空',\\n'BANNER', \\nIF({fldDbpaPCTlXy} != BLANK(), 'BANNER 不用选择专题', IF({fldUuQrG8kmuN} != {fldaXbXlJjC8f}, '模板i18n不匹配', 'true')),\\n\\nIF({flddJug9dW8c1} = BLANK(), '「CUSTOM_GROUP」不能为空',\\nSWITCH({fldW3zP0JYBQh}, \\n'TEMPLATE_GROUP', \\nIF(COUNTALL({fldIoR1FbmmqM}) > 1, '只允许关联一个模板', IF({fldUuQrG8kmuN} != {fldaXbXlJjC8f}, '模板i18n不匹配', IF({fldDbpaPCTlXy} != BLANK(), 'TEMPLATE_GROUP 不用选择专题', 'true'))),\\n'ALBUM_GROUP', \\nIF(COUNTALL({fldDbpaPCTlXy}) > 1, '只允许关联一个专题', \\nIF({fldXWqelg8tJ3} != {fldaXbXlJjC8f}, '专题i18n不匹配', \\nIF({fldIoR1FbmmqM} != BLANK(), 'TEMPLATE_ALBUM 不用选择模板', 'true'))), \\n'true'))\\n\\n),\\n\\n'true'))))\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstDMtvJVKyBokeTpF\"}}, \"flduiaATCh6eG\": {\"id\": \"flduiaATCh6eG\", \"name\": \"COLOR\", \"type\": 1}}}","dstId":"dstDMtvJVKyBokeTpF","id":1598171183681564673},{"metaData":"{\"views\": [{\"id\": \"viwHXTx1V9Eyz\", \"name\": \"配置视图\", \"rows\": [{\"recordId\": \"recrDrfPxISwI\"}, {\"recordId\": \"recko6YFE3pSZ\"}, {\"recordId\": \"recu31sNSwpx4\"}, {\"recordId\": \"recfecJVcf03u\"}, {\"recordId\": \"recUTvtxQlMcA\"}, {\"recordId\": \"rec9svJJWTVqQ\"}, {\"recordId\": \"rec5TmOl5BFoX\"}, {\"recordId\": \"rechWS2TrUzaD\"}, {\"recordId\": \"recUnrYD3B2rN\"}, {\"recordId\": \"recbHbjGesGGj\"}], \"type\": 1, \"columns\": [{\"width\": 185, \"fieldId\": \"fld0G9emDlpj8\", \"statType\": 1}, {\"width\": 279, \"hidden\": false, \"fieldId\": \"fldlJgV7f877h\"}, {\"width\": 118, \"fieldId\": \"fldqDdz5LYpX8\"}, {\"width\": 165, \"hidden\": false, \"fieldId\": \"fldbGLTxpVKyO\"}, {\"width\": 104, \"hidden\": false, \"fieldId\": \"fld53oX5De7Ln\"}, {\"width\": 129, \"fieldId\": \"fldXJf8Vm3mFn\"}, {\"width\": 166, \"hidden\": false, \"fieldId\": \"fldGRMAadXQOB\"}, {\"hidden\": false, \"fieldId\": \"fld8d51X4bYzM\"}, {\"width\": 370, \"hidden\": false, \"fieldId\": \"fldp7h0PivDZX\"}, {\"hidden\": false, \"fieldId\": \"fldm7OmSJnIMx\"}, {\"hidden\": false, \"fieldId\": \"fldev0H1QnTDE\"}, {\"hidden\": false, \"fieldId\": \"fldg2UQG9eyqj\"}], \"groupInfo\": [{\"desc\": false, \"fieldId\": \"fldqDdz5LYpX8\"}], \"rowHeightLevel\": 1, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld0G9emDlpj8\": {\"id\": \"fld0G9emDlpj8\", \"desc\": \"模板名称\", \"name\": \"TEMPLATE_NAME\", \"type\": 1, \"required\": false}, \"fld53oX5De7Ln\": {\"id\": \"fld53oX5De7Ln\", \"name\": \"TIP\", \"type\": 16, \"property\": {\"expression\": \"IF(TRIM({fld0G9emDlpj8}) = BLANK(), '模板名称不能为空',\\nIF(COUNTALL({fldlJgV7f877h}) > 0 && {fldXJf8Vm3mFn} != {fldqDdz5LYpX8}, '模板标签i18n不匹配', \\n'     ✅'))\", \"datasheetId\": \"dstdNw6i4e9BUPVy0G\"}}, \"fld8d51X4bYzM\": {\"id\": \"fld8d51X4bYzM\", \"name\": \"成功上架的热门推荐\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": [\"optVj0r55NvID\", \"opt2VE45iPrHr\"], \"fieldId\": \"fldW3zP0JYBQh\", \"operator\": \"contains\", \"fieldType\": 3, \"conditionId\": \"cdtfF6YzDbggT\"}, {\"value\": true, \"fieldId\": \"fld8m8KHsN1zF\", \"operator\": \"is\", \"fieldType\": 16, \"conditionId\": \"cdtoolqa8ps5V\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"datasheetId\": \"dstdNw6i4e9BUPVy0G\", \"relatedLinkFieldId\": \"fldGRMAadXQOB\", \"lookUpTargetFieldId\": \"fldGNDlcQGRZQ\"}}, \"fldGRMAadXQOB\": {\"id\": \"fldGRMAadXQOB\", \"name\": \"RECOMMEND\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldIoR1FbmmqM\", \"foreignDatasheetId\": \"dstDMtvJVKyBokeTpF\"}}, \"fldXJf8Vm3mFn\": {\"id\": \"fldXJf8Vm3mFn\", \"name\": \"TAG_i18n\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstdNw6i4e9BUPVy0G\", \"relatedLinkFieldId\": \"fldlJgV7f877h\", \"lookUpTargetFieldId\": \"fld50x87L3I8i\"}}, \"fldbGLTxpVKyO\": {\"id\": \"fldbGLTxpVKyO\", \"desc\": \"上架状态【API 读取条件】。\\n热门推荐 or 官方分类 or 模板专题 有一者能成功上架，即代表该模板也上架了。\", \"name\": \"SHELF_STATUS\", \"type\": 16, \"property\": {\"expression\": \"{fld8d51X4bYzM} != BLANK() || {fldm7OmSJnIMx} != BLANK() || {fldg2UQG9eyqj} != BLANK()\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstdNw6i4e9BUPVy0G\"}}, \"fldev0H1QnTDE\": {\"id\": \"fldev0H1QnTDE\", \"name\": \"TEMPLATE_ALBUM\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldGfURnahQMy\", \"foreignDatasheetId\": \"dstVNXbbgNQdWTpqeV\"}}, \"fldg2UQG9eyqj\": {\"id\": \"fldg2UQG9eyqj\", \"name\": \"成功上架的模板专题\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": true, \"fieldId\": \"fldjBDQUwoFK9\", \"operator\": \"is\", \"fieldType\": 16, \"conditionId\": \"cdtxm42DJ6PsI\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"datasheetId\": \"dstdNw6i4e9BUPVy0G\", \"relatedLinkFieldId\": \"fldev0H1QnTDE\", \"lookUpTargetFieldId\": \"fldCphHSKwYzx\"}}, \"fldlJgV7f877h\": {\"id\": \"fldlJgV7f877h\", \"name\": \"TEMPLATE_TAG\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldLePInM1rbW\", \"foreignDatasheetId\": \"dstzS1VRVQynS75CXW\"}}, \"fldm7OmSJnIMx\": {\"id\": \"fldm7OmSJnIMx\", \"name\": \"成功上架的官方模板分类\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": true, \"fieldId\": \"fldsZvILhWQnq\", \"operator\": \"is\", \"fieldType\": 16, \"conditionId\": \"cdtSefyS0OGrv\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"datasheetId\": \"dstdNw6i4e9BUPVy0G\", \"relatedLinkFieldId\": \"fldp7h0PivDZX\", \"lookUpTargetFieldId\": \"fldQvbqsnf4ns\"}}, \"fldp7h0PivDZX\": {\"id\": \"fldp7h0PivDZX\", \"name\": \"CATEGORY\", \"type\": 7, \"property\": {\"limitToView\": \"viwjllPcceqfo\", \"brotherFieldId\": \"fldlJm9Jmnrx7\", \"foreignDatasheetId\": \"dstKGW3tuFVtmigZlK\"}}, \"fldqDdz5LYpX8\": {\"id\": \"fldqDdz5LYpX8\", \"name\": \"i18n\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optwWPvKZImgZ\", \"name\": \"zh_CN\", \"color\": 0}, {\"id\": \"optjwZQF0sH5R\", \"name\": \"en_US\", \"color\": 1}]}}}, \"widgetPanels\": [{\"id\": \"wpljKmc8IipP8\", \"name\": \"组件板\", \"widgets\": [{\"id\": \"wdtnqhzV9CoPdfEDBs\", \"height\": 6.2}, {\"id\": \"wdteExq45gVlcdbnti\", \"height\": 6.2}, {\"id\": \"wdtJ50wFkeZGSAhctZ\", \"height\": 6.2}, {\"id\": \"wdtqbGgT2aqn0C2wg5\", \"height\": 6.2}, {\"id\": \"wdt0Fqt1Q6mGmy4YTA\", \"height\": 6.2}, {\"id\": \"wdt4HNKQ8DY0auNBlx\", \"height\": 6.2}, {\"id\": \"wdtMHfQEeFYGw9B2qn\", \"height\": 6.2}, {\"id\": \"wdtqVxUMSFHopuLT7F\", \"height\": 6.2}, {\"id\": \"wdt4K0jYEsFiBwUhGk\", \"height\": 6.2}, {\"id\": \"wdtS8Hb8yYqU77tWNX\", \"height\": 6.2}, {\"y\": 9007199254740991, \"id\": \"wdtEbbubs12qmGTcub\", \"height\": 6.2}]}]}","dstId":"dstdNw6i4e9BUPVy0G","id":1598171182632988674},{"metaData":"{\"views\": [{\"id\": \"viw2F8OD9gjaL\", \"name\": \"维格视图\", \"rows\": [{\"recordId\": \"recNDybduT0ji\"}, {\"recordId\": \"recQvLDhIw2Xi\"}, {\"recordId\": \"recgFiNUmF51A\"}], \"type\": 1, \"columns\": [{\"fieldId\": \"fldDnyfPBlVzP\", \"statType\": 1}, {\"hidden\": false, \"fieldId\": \"fldhNxRXTsNd6\"}, {\"width\": 143, \"hidden\": true, \"fieldId\": \"fldqfADmCSg2g\"}, {\"hidden\": false, \"fieldId\": \"fldQTURaxpIxw\"}, {\"hidden\": false, \"fieldId\": \"fldeIiA17Q1v5\"}, {\"fieldId\": \"flduH7N1dKSzp\"}, {\"fieldId\": \"fldHR7hnxt1ej\"}, {\"fieldId\": \"fldf2VD1hFabS\"}, {\"fieldId\": \"fldcA68TYbCxi\"}, {\"fieldId\": \"fldlB58RPjaXR\"}, {\"fieldId\": \"fldBBmmIuChe2\"}, {\"fieldId\": \"fld0nIiwfrJXA\"}], \"autoSave\": true, \"groupInfo\": [{\"desc\": false, \"fieldId\": \"fldqfADmCSg2g\"}], \"rowHeightLevel\": 2, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld0nIiwfrJXA\": {\"id\": \"fld0nIiwfrJXA\", \"name\": \"备注\", \"type\": 1}, \"fldBBmmIuChe2\": {\"id\": \"fldBBmmIuChe2\", \"name\": \"i18n\", \"type\": 1}, \"fldDnyfPBlVzP\": {\"id\": \"fldDnyfPBlVzP\", \"name\": \"ENDPOINT\", \"type\": 19, \"property\": {}}, \"fldHR7hnxt1ej\": {\"id\": \"fldHR7hnxt1ej\", \"name\": \"NAME\", \"type\": 1}, \"fldQTURaxpIxw\": {\"id\": \"fldQTURaxpIxw\", \"name\": \"SERVICE_ID\", \"type\": 14, \"property\": {\"rollUpType\": \"CONCATENATE\", \"datasheetId\": \"dste3Vx1NuWdeDaGqQ\", \"relatedLinkFieldId\": \"fldqfADmCSg2g\", \"lookUpTargetFieldId\": \"fldbrbDiH18BC\"}}, \"fldcA68TYbCxi\": {\"id\": \"fldcA68TYbCxi\", \"name\": \"INPUT_JSON_SCHEMA\", \"type\": 1}, \"fldeIiA17Q1v5\": {\"id\": \"fldeIiA17Q1v5\", \"name\": \".SERVICE_LOGO\", \"type\": 14, \"property\": {\"rollUpType\": \"VALUES\", \"datasheetId\": \"dste3Vx1NuWdeDaGqQ\", \"relatedLinkFieldId\": \"fldqfADmCSg2g\", \"lookUpTargetFieldId\": \"fldXFYuHcHDDu\"}}, \"fldf2VD1hFabS\": {\"id\": \"fldf2VD1hFabS\", \"name\": \"DESCRIPTION\", \"type\": 1}, \"fldhNxRXTsNd6\": {\"id\": \"fldhNxRXTsNd6\", \"name\": \"EDITION\", \"type\": 4, \"property\": {\"options\": [{\"id\": \"optasiLkVFrkt\", \"name\": \"vika-poc\", \"color\": 0}, {\"id\": \"optEA9gtbFjLk\", \"name\": \"vika-ee\", \"color\": 1}, {\"id\": \"optQcMOJRu5ib\", \"name\": \"apitable-ce\", \"color\": 2}, {\"id\": \"optLcSAEGvidG\", \"name\": \"apitable-ee\", \"color\": 3}]}}, \"fldlB58RPjaXR\": {\"id\": \"fldlB58RPjaXR\", \"name\": \"OUTPUT_JSON_SCHEMA\", \"type\": 1}, \"fldqfADmCSg2g\": {\"id\": \"fldqfADmCSg2g\", \"name\": \".Service\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldTA4Cq8l3PI\", \"limitSingleRecord\": true, \"foreignDatasheetId\": \"dstlWhj5wG4WtVjHlq\"}}, \"flduH7N1dKSzp\": {\"id\": \"flduH7N1dKSzp\", \"name\": \"TRIGGER_TYPE_ID\", \"type\": 1}}, \"widgetPanels\": []}","dstId":"dste3Vx1NuWdeDaGqQ","id":1610573374590492674},{"metaData":"{\"views\": [{\"id\": \"viwq1D7dDWq7a\", \"name\": \"配置视图\", \"rows\": [{\"recordId\": \"recFu3cyRTMKu\"}, {\"recordId\": \"recdBzl4BW7pC\"}, {\"recordId\": \"recVBcdx8trrS\"}, {\"recordId\": \"recEAgfcUMPMN\"}, {\"recordId\": \"recWRBZoDUxbW\"}, {\"recordId\": \"recSLOn5BE3Lg\"}, {\"recordId\": \"recZbo9sRs7UZ\"}, {\"recordId\": \"recSqYURBZsxd\"}, {\"recordId\": \"reckdI0ARnsfm\"}, {\"recordId\": \"rec8dIKmoK7YA\"}, {\"recordId\": \"reczzVvLqaWiB\"}, {\"recordId\": \"recAT8FdDGuCf\"}, {\"recordId\": \"recWeKCgneZQY\"}], \"type\": 1, \"columns\": [{\"width\": 215, \"fieldId\": \"fldQvbqsnf4ns\", \"statType\": 1}, {\"fieldId\": \"fldl54nI7BtuJ\"}, {\"width\": 324, \"fieldId\": \"fldlJm9Jmnrx7\"}, {\"width\": 113, \"fieldId\": \"fldgAJfAOr942\"}, {\"hidden\": false, \"fieldId\": \"fldGCHm6aXrgN\"}, {\"width\": 149, \"hidden\": false, \"fieldId\": \"fldPL5G3A1UPO\"}, {\"width\": 137, \"hidden\": false, \"fieldId\": \"fldsZvILhWQnq\"}, {\"width\": 155, \"hidden\": true, \"fieldId\": \"fldAsCPv1qISm\"}, {\"hidden\": true, \"fieldId\": \"fldsmnGgJgZvN\"}, {\"hidden\": true, \"fieldId\": \"fldyuQk5JqMR1\"}, {\"hidden\": true, \"fieldId\": \"fldCW1YDHQu8x\"}, {\"hidden\": true, \"fieldId\": \"fldXQDKJAvTlG\"}], \"autoSave\": false, \"groupInfo\": [{\"desc\": false, \"fieldId\": \"fldgAJfAOr942\"}], \"frozenColumnCount\": 1}], \"fieldMap\": {\"fldAsCPv1qISm\": {\"id\": \"fldAsCPv1qISm\", \"name\": \"ALBUM_i18n\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstKGW3tuFVtmigZlK\", \"relatedLinkFieldId\": \"fldl54nI7BtuJ\", \"lookUpTargetFieldId\": \"fldoBffJICmGL\"}}, \"fldCW1YDHQu8x\": {\"id\": \"fldCW1YDHQu8x\", \"name\": \"ALBUM_ERROR_TIP\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": [\"✅\"], \"fieldId\": \"fldQZeGDAL9f9\", \"operator\": \"doesNotContain\", \"fieldType\": 16, \"conditionId\": \"cdtaT9wVZV0n6\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstKGW3tuFVtmigZlK\", \"relatedLinkFieldId\": \"fldl54nI7BtuJ\", \"lookUpTargetFieldId\": \"fldQZeGDAL9f9\"}}, \"fldGCHm6aXrgN\": {\"id\": \"fldGCHm6aXrgN\", \"desc\": \"选择是否上架。\\n勾线前可参考【TIP】完成检查。\", \"name\": \"WHETHER_SHELF\", \"type\": 11, \"property\": {\"icon\": \"white_check_mark\"}}, \"fldPL5G3A1UPO\": {\"id\": \"fldPL5G3A1UPO\", \"name\": \"TIP\", \"type\": 16, \"property\": {\"expression\": \"IF({fldyuQk5JqMR1} != 'true',\\nIF({fldGCHm6aXrgN}, '⚠️⚠️ ', '') + {fldyuQk5JqMR1},\\n\\nIF({fldCW1YDHQu8x} != BLANK(), {fldCW1YDHQu8x},\\nIF({fldXQDKJAvTlG} != BLANK(), {fldXQDKJAvTlG},'     ✅'))\\n\\n)\", \"datasheetId\": \"dstKGW3tuFVtmigZlK\"}}, \"fldQvbqsnf4ns\": {\"id\": \"fldQvbqsnf4ns\", \"desc\": \"记录顺序影响模板中心的官方模板分类顺序\", \"name\": \"TEMPLATE_CATEGORY\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}, \"fldXQDKJAvTlG\": {\"id\": \"fldXQDKJAvTlG\", \"name\": \"TEMPLATE_ERROR_TIP\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": [\"✅\"], \"fieldId\": \"fld53oX5De7Ln\", \"operator\": \"doesNotContain\", \"fieldType\": 1, \"conditionId\": \"cdtIW11yxKCsO\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstKGW3tuFVtmigZlK\", \"relatedLinkFieldId\": \"fldlJm9Jmnrx7\", \"lookUpTargetFieldId\": \"fld53oX5De7Ln\"}}, \"fldgAJfAOr942\": {\"id\": \"fldgAJfAOr942\", \"name\": \"i18n\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optNDxBEHgqTL\", \"name\": \"zh_CN\", \"color\": 0}, {\"id\": \"optY2Dvu45NcC\", \"name\": \"en_US\", \"color\": 1}]}}, \"fldl54nI7BtuJ\": {\"id\": \"fldl54nI7BtuJ\", \"name\": \"TEMPLATE_ALBUM\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldThX05YXsmU\", \"foreignDatasheetId\": \"dstVNXbbgNQdWTpqeV\"}}, \"fldlJm9Jmnrx7\": {\"id\": \"fldlJm9Jmnrx7\", \"name\": \"TEMPLATE\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldp7h0PivDZX\", \"foreignDatasheetId\": \"dstdNw6i4e9BUPVy0G\"}}, \"fldsZvILhWQnq\": {\"id\": \"fldsZvILhWQnq\", \"desc\": \"API 读取条件\", \"name\": \"CHECK\", \"type\": 16, \"property\": {\"expression\": \"{fldGCHm6aXrgN} && {fldyuQk5JqMR1} = 'true'\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstKGW3tuFVtmigZlK\"}}, \"fldsmnGgJgZvN\": {\"id\": \"fldsmnGgJgZvN\", \"name\": \"TEMPLATE_i18n\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstKGW3tuFVtmigZlK\", \"relatedLinkFieldId\": \"fldlJm9Jmnrx7\", \"lookUpTargetFieldId\": \"fldqDdz5LYpX8\"}}, \"fldyuQk5JqMR1\": {\"id\": \"fldyuQk5JqMR1\", \"name\": \".辅助判断\", \"type\": 16, \"property\": {\"expression\": \"IF(TRIM({fldQvbqsnf4ns}) = BLANK(), '模板分类名称不能为空',\\nIF({fldlJm9Jmnrx7} = BLANK(),'模板不能为空',\\nIF({fldl54nI7BtuJ} != BLANK() && {fldAsCPv1qISm} != {fldgAJfAOr942}, '模板专题i18n不匹配',\\nIF({fldlJm9Jmnrx7} != BLANK() && {fldsmnGgJgZvN} != {fldgAJfAOr942}, '模板i18n不匹配',\\n\\nIF({fldCW1YDHQu8x} != BLANK(), {fldCW1YDHQu8x},\\nIF({fldXQDKJAvTlG} != BLANK(), {fldXQDKJAvTlG},\\n\\n'true'))))\\n))\", \"datasheetId\": \"dstKGW3tuFVtmigZlK\"}}}}","dstId":"dstKGW3tuFVtmigZlK","id":1598171183824171009},{"metaData":"{\"views\": [{\"id\": \"viwl80dVYYJdq\", \"name\": \"维格视图\", \"rows\": [{\"recordId\": \"recMliZRumx8K\"}, {\"recordId\": \"recRVlxR9qCuq\"}], \"type\": 1, \"columns\": [{\"width\": 128, \"fieldId\": \"fldOKiILFlUfS\", \"statType\": 1}, {\"width\": 184, \"hidden\": false, \"fieldId\": \"fldbrbDiH18BC\"}, {\"width\": 140, \"hidden\": false, \"fieldId\": \"fldiPhO7fCfqz\"}, {\"hidden\": false, \"fieldId\": \"fldBVixDLQg08\"}, {\"width\": 460, \"hidden\": false, \"fieldId\": \"fldSAC0sGKy2O\"}, {\"width\": 125, \"hidden\": false, \"fieldId\": \"fldXFYuHcHDDu\"}, {\"width\": 504, \"hidden\": false, \"fieldId\": \"fldao2Hh581e7\"}, {\"width\": 390, \"hidden\": false, \"fieldId\": \"fldTA4Cq8l3PI\"}, {\"hidden\": false, \"fieldId\": \"fld4ieUMNGwTB\"}], \"autoSave\": true, \"sortInfo\": {\"rules\": [{\"desc\": false, \"fieldId\": \"fldOKiILFlUfS\"}], \"keepSort\": false}, \"groupInfo\": [], \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld4ieUMNGwTB\": {\"id\": \"fld4ieUMNGwTB\", \"name\": \".Action Type\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldD0ib6HO6TL\", \"foreignDatasheetId\": \"dst68NlKxcGvX2P9k4\"}}, \"fldBVixDLQg08\": {\"id\": \"fldBVixDLQg08\", \"desc\": \"服务描述。你的服务是干嘛的？\\n无需国际化：提供维格表相关的自动化操作\\n需要国际化：$vikadata_robot_service_desc\\n\\n「$」开头的称之为 i18n key，可以在 i18n 字段中找到对应语言的文案。\\n\", \"name\": \"DESCRIPTION\", \"type\": 1, \"required\": false}, \"fldOKiILFlUfS\": {\"id\": \"fldOKiILFlUfS\", \"desc\": \"简单理解为英文名称，例如：维格 vika，飞书 lark ，微信 wechat 等等。他应该是一个唯一的品牌标识\", \"name\": \"SLUG\", \"type\": 19, \"property\": {}, \"required\": true}, \"fldSAC0sGKy2O\": {\"id\": \"fldSAC0sGKy2O\", \"desc\": \"国际化语言包。如果你的服务不考虑国际化，则留空。\\u001f参考:\\n\\n{\\\"en\\\": {\\\"$vikadata\\\": \\\"Datasheet\\\"}, \\\"zh\\\": {\\\"$vikadata\\\": \\\"维格表\\\"}}\", \"name\": \"i18n\", \"type\": 1}, \"fldTA4Cq8l3PI\": {\"id\": \"fldTA4Cq8l3PI\", \"name\": \".Trigger Type\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldqfADmCSg2g\", \"foreignDatasheetId\": \"dste3Vx1NuWdeDaGqQ\"}}, \"fldXFYuHcHDDu\": {\"id\": \"fldXFYuHcHDDu\", \"desc\": \"上传你的服务 Logo，512x512 png 为宜\", \"name\": \"LOGO\", \"type\": 6}, \"fldao2Hh581e7\": {\"id\": \"fldao2Hh581e7\", \"desc\": \"上架服务实际上是以固定的协议和维格表通信，需要走 http 请求的渠道。你的服务可能提供很多的 action。例如，TODO service，支持添加 todo，勾选 todo 。他们都是以 API 的形式提供接口。同一个服务的有一个固定的接口地址。\\n\\n例如: https://api.mytodo.com/vika/v1\", \"name\": \"BASE_URL\", \"type\": 19, \"property\": {}}, \"fldbrbDiH18BC\": {\"id\": \"fldbrbDiH18BC\", \"desc\": \"简单理解为英文名称，例如：维格 vika，飞书 lark ，微信 wechat 等等。他应该是一个唯一的品牌标识\", \"name\": \"SERVICE_ID\", \"type\": 19, \"property\": {}, \"required\": false}, \"fldiPhO7fCfqz\": {\"id\": \"fldiPhO7fCfqz\", \"desc\": \"服务名称。如果你的服务提供国际化，这这里填写的应该是 i18n 字段中的 string key。\\n\\n无需国际化：维格表\\n需要国际化：$vikadata\\n\\n「$」开头的称之为 i18n key，可以在 i18n 字段中找到对应语言的文案。\\n\", \"name\": \"NAME\", \"type\": 19, \"property\": {}, \"required\": true}}, \"widgetPanels\": []}","dstId":"dstlWhj5wG4WtVjHlq","id":1610573374519189505},{"metaData":"{\"views\": [{\"id\": \"viwMGhu1JmhQq\", \"name\": \"维格视图\", \"rows\": [{\"recordId\": \"recNWEUQQ0mhy\"}, {\"recordId\": \"recvhg9jcp7FZ\"}, {\"recordId\": \"recaTQDH6Rm6K\"}], \"type\": 1, \"columns\": [{\"fieldId\": \"fldyb77g6wZh0\", \"statType\": 1}, {\"fieldId\": \"fldZ0ihem7q9d\"}, {\"hidden\": false, \"fieldId\": \"fldGF11af8BA9\"}, {\"width\": 390, \"hidden\": false, \"fieldId\": \"fld1OaiJh3cFm\"}], \"autoSave\": false, \"rowHeightLevel\": 2, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld1OaiJh3cFm\": {\"id\": \"fld1OaiJh3cFm\", \"desc\": \"实验功能申请表单地址（TYPE = review 时使用）\", \"name\": \"URL\", \"type\": 19, \"property\": {}}, \"fldGF11af8BA9\": {\"id\": \"fldGF11af8BA9\", \"desc\": \"STATIC: 不准操作;\\nREVIEW: 可申请;\\nNORMAL/NORMAL_PERSIST: 可正常开关;\\nGLOBAL: 全局开放\", \"name\": \"TYPE\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optfQ92TNE0CB\", \"name\": \"STATIC\", \"color\": 4}, {\"id\": \"opt3XWaI4IVKZ\", \"name\": \"REVIEW\", \"color\": 0}, {\"id\": \"optDoB5jnFXDj\", \"name\": \"NORMAL\", \"color\": 1}, {\"id\": \"optGGEk6Fnj31\", \"name\": \"NORMAL_PERSIST\", \"color\": 2}, {\"id\": \"optWUjGjQcQYl\", \"name\": \"GLOBAL\", \"color\": 3}]}}, \"fldZ0ihem7q9d\": {\"id\": \"fldZ0ihem7q9d\", \"name\": \"FEATURE_SCOPE\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"opt3XWaI4IVKZ\", \"name\": \"USER\", \"color\": 0}, {\"id\": \"optDoB5jnFXDj\", \"name\": \"SPACE\", \"color\": 1}]}}, \"fldyb77g6wZh0\": {\"id\": \"fldyb77g6wZh0\", \"name\": \"FEATURE_KEY\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}}}","dstId":"dstMwqbopksYSl754h","id":1610657498110042113},{"metaData":"{\"views\": [{\"id\": \"viw0yl8W5bFVS\", \"name\": \"配置视图\", \"rows\": [{\"recordId\": \"recE45M2PyM3N\"}], \"type\": 1, \"columns\": [{\"width\": 164, \"fieldId\": \"fldCphHSKwYzx\", \"statType\": 1}, {\"width\": 180, \"hidden\": false, \"fieldId\": \"fld26mK3Jp0Tc\"}, {\"width\": 108, \"hidden\": false, \"fieldId\": \"fldDqCnW2fehG\"}, {\"width\": 177, \"hidden\": false, \"fieldId\": \"fld8zVAFkCQBG\"}, {\"width\": 189, \"hidden\": false, \"fieldId\": \"fldUQEdAn0rlj\"}, {\"width\": 170, \"hidden\": false, \"fieldId\": \"fldNpsq9KxMpy\"}, {\"width\": 198, \"hidden\": false, \"fieldId\": \"fldtRmLcmnzpH\"}, {\"width\": 117, \"hidden\": false, \"fieldId\": \"fldoBffJICmGL\"}, {\"width\": 341, \"hidden\": false, \"fieldId\": \"fldGfURnahQMy\"}, {\"width\": 302, \"hidden\": false, \"fieldId\": \"fldYXhohHoe7f\"}, {\"width\": 178, \"hidden\": false, \"fieldId\": \"fldjBDQUwoFK9\"}, {\"width\": 146, \"hidden\": false, \"fieldId\": \"fldQZeGDAL9f9\"}, {\"width\": 170, \"hidden\": false, \"fieldId\": \"fldIldfr46uXf\"}, {\"width\": 136, \"hidden\": false, \"fieldId\": \"fldkPSPjDNqts\"}, {\"width\": 240, \"hidden\": false, \"fieldId\": \"flddDVmdKMwdm\"}, {\"hidden\": false, \"fieldId\": \"fldNUslTCRKZq\"}, {\"width\": 178, \"hidden\": false, \"fieldId\": \"fldChPBxDB137\"}, {\"width\": 212, \"hidden\": false, \"fieldId\": \"fldThX05YXsmU\"}, {\"width\": 160, \"hidden\": false, \"fieldId\": \"fldRYH5MTJLOk\"}], \"groupInfo\": [{\"desc\": false, \"fieldId\": \"fldoBffJICmGL\"}], \"rowHeightLevel\": 2, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld26mK3Jp0Tc\": {\"id\": \"fld26mK3Jp0Tc\", \"name\": \"ALBUM_DESC\", \"type\": 1}, \"fld8zVAFkCQBG\": {\"id\": \"fld8zVAFkCQBG\", \"name\": \"ALBUM_CONTENT\", \"type\": 1}, \"fldChPBxDB137\": {\"id\": \"fldChPBxDB137\", \"name\": \"成功上架的热门推荐\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": true, \"fieldId\": \"fld8m8KHsN1zF\", \"operator\": \"is\", \"fieldType\": 16, \"conditionId\": \"cdtXV2431yNZn\"}, {\"value\": [\"opt15pfhzyApr\"], \"fieldId\": \"fldW3zP0JYBQh\", \"operator\": \"is\", \"fieldType\": 3, \"conditionId\": \"cdt74O6oQQrSD\"}], \"conjunction\": \"and\"}, \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"openFilter\": true, \"rollUpType\": \"VALUES\", \"datasheetId\": \"dstVNXbbgNQdWTpqeV\", \"relatedLinkFieldId\": \"fldNUslTCRKZq\", \"lookUpTargetFieldId\": \"fldGNDlcQGRZQ\"}}, \"fldCphHSKwYzx\": {\"id\": \"fldCphHSKwYzx\", \"name\": \"ALBUM_NAME\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}, \"fldDqCnW2fehG\": {\"id\": \"fldDqCnW2fehG\", \"name\": \"ALBUM_COVER\", \"type\": 6}, \"fldGfURnahQMy\": {\"id\": \"fldGfURnahQMy\", \"name\": \"TEMPLATE\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldev0H1QnTDE\", \"foreignDatasheetId\": \"dstdNw6i4e9BUPVy0G\"}}, \"fldIldfr46uXf\": {\"id\": \"fldIldfr46uXf\", \"name\": \"TEMPLATE_i18n\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [], \"conjunction\": \"and\"}, \"openFilter\": false, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstVNXbbgNQdWTpqeV\", \"relatedLinkFieldId\": \"fldGfURnahQMy\", \"lookUpTargetFieldId\": \"fldqDdz5LYpX8\"}}, \"fldNUslTCRKZq\": {\"id\": \"fldNUslTCRKZq\", \"name\": \"RECOMMEND\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldDbpaPCTlXy\", \"foreignDatasheetId\": \"dstDMtvJVKyBokeTpF\"}}, \"fldNpsq9KxMpy\": {\"id\": \"fldNpsq9KxMpy\", \"name\": \"PUBLISHER_LOGO\", \"type\": 6}, \"fldQZeGDAL9f9\": {\"id\": \"fldQZeGDAL9f9\", \"name\": \"TIP\", \"type\": 16, \"property\": {\"expression\": \"IF(TRIM({fldCphHSKwYzx}) = BLANK(), '专题名称不能为空',\\nIF(COUNTALL({fldGfURnahQMy}) > 0 && {fldIldfr46uXf} != {fldoBffJICmGL}, '模板i18n不匹配',\\nIF({flddDVmdKMwdm} != BLANK(), {flddDVmdKMwdm}, '     ✅')))\", \"datasheetId\": \"dstVNXbbgNQdWTpqeV\"}}, \"fldRYH5MTJLOk\": {\"id\": \"fldRYH5MTJLOk\", \"name\": \"成功上架的官方模板分类\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": true, \"fieldId\": \"fldsZvILhWQnq\", \"operator\": \"is\", \"fieldType\": 16, \"conditionId\": \"cdtG1hiW165nF\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"datasheetId\": \"dstVNXbbgNQdWTpqeV\", \"relatedLinkFieldId\": \"fldThX05YXsmU\", \"lookUpTargetFieldId\": \"fldQvbqsnf4ns\"}}, \"fldThX05YXsmU\": {\"id\": \"fldThX05YXsmU\", \"name\": \"TEMPLATE_CATEGORY\", \"type\": 7, \"property\": {\"brotherFieldId\": \"fldl54nI7BtuJ\", \"foreignDatasheetId\": \"dstKGW3tuFVtmigZlK\"}}, \"fldUQEdAn0rlj\": {\"id\": \"fldUQEdAn0rlj\", \"name\": \"PUBLISHER_NAME\", \"type\": 1}, \"fldYXhohHoe7f\": {\"id\": \"fldYXhohHoe7f\", \"name\": \"TEMPLATE_TAG\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstVNXbbgNQdWTpqeV\", \"relatedLinkFieldId\": \"fldGfURnahQMy\", \"lookUpTargetFieldId\": \"fldlJgV7f877h\"}}, \"flddDVmdKMwdm\": {\"id\": \"flddDVmdKMwdm\", \"name\": \"TEMPLATE_ERROR_TIP\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": [\"✅\"], \"fieldId\": \"fld53oX5De7Ln\", \"operator\": \"doesNotContain\", \"fieldType\": 1, \"conditionId\": \"cdtaIhwK6AEEF\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstVNXbbgNQdWTpqeV\", \"relatedLinkFieldId\": \"fldGfURnahQMy\", \"lookUpTargetFieldId\": \"fld53oX5De7Ln\"}}, \"fldjBDQUwoFK9\": {\"id\": \"fldjBDQUwoFK9\", \"desc\": \"上架状态【API 读取条件】。\\n热门推荐 or 官方分类 有一者能成功上架，即代表该模板专题也上架了。\", \"name\": \"SHELF_STATUS\", \"type\": 16, \"property\": {\"expression\": \"{fldChPBxDB137} != BLANK() || {fldRYH5MTJLOk} != BLANK()\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstVNXbbgNQdWTpqeV\"}}, \"fldkPSPjDNqts\": {\"id\": \"fldkPSPjDNqts\", \"name\": \"TAG_i18n\", \"type\": 14, \"property\": {\"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstVNXbbgNQdWTpqeV\", \"relatedLinkFieldId\": \"fldGfURnahQMy\", \"lookUpTargetFieldId\": \"fldXJf8Vm3mFn\"}}, \"fldoBffJICmGL\": {\"id\": \"fldoBffJICmGL\", \"name\": \"i18n\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optQZnA0LgokZ\", \"name\": \"zh_CN\", \"color\": 0}, {\"id\": \"optjwZQF0sH5R\", \"name\": \"en_US\", \"color\": 1}]}}, \"fldtRmLcmnzpH\": {\"id\": \"fldtRmLcmnzpH\", \"name\": \"PUBLISHER_DESC\", \"type\": 1}}}","dstId":"dstVNXbbgNQdWTpqeV","id":1598171181987065857},{"metaData":"{\"views\": [{\"id\": \"viwqEOU1oLbBh\", \"name\": \"配置视图\", \"rows\": [{\"recordId\": \"recsDeA8X7bMe\"}, {\"recordId\": \"recgh48fpJyDQ\"}, {\"recordId\": \"recTvmBxG5GZc\"}, {\"recordId\": \"recc4QFCgn0hb\"}, {\"recordId\": \"recelHHYNCkcl\"}, {\"recordId\": \"recJmCBJ4gk9g\"}, {\"recordId\": \"rec1rZHBgf12l\"}, {\"recordId\": \"recdTap5Y0XXu\"}, {\"recordId\": \"rec4tDUoQciNO\"}, {\"recordId\": \"recVaeaZZGfWN\"}, {\"recordId\": \"recy6wxOglxgW\"}, {\"recordId\": \"reckWiohwWiaG\"}, {\"recordId\": \"rechpOp8IcF7K\"}], \"type\": 1, \"columns\": [{\"width\": 150, \"fieldId\": \"fldM6AmjjcNeB\", \"statType\": 1}, {\"width\": 122, \"fieldId\": \"fld50x87L3I8i\"}, {\"hidden\": false, \"fieldId\": \"fldvKJr4thl4Y\"}, {\"hidden\": false, \"fieldId\": \"fldi0l7r6q0uZ\"}, {\"width\": 518, \"fieldId\": \"fldLePInM1rbW\", \"statType\": 3}, {\"width\": 143, \"hidden\": false, \"fieldId\": \"fldtScY2JygCN\"}], \"groupInfo\": [{\"desc\": false, \"fieldId\": \"fld50x87L3I8i\"}], \"rowHeightLevel\": 2, \"frozenColumnCount\": 1}], \"fieldMap\": {\"fld50x87L3I8i\": {\"id\": \"fld50x87L3I8i\", \"name\": \"i18n\", \"type\": 3, \"property\": {\"options\": [{\"id\": \"optNDxBEHgqTL\", \"name\": \"zh_CN\", \"color\": 0}, {\"id\": \"optY2Dvu45NcC\", \"name\": \"en_US\", \"color\": 1}]}}, \"fldLePInM1rbW\": {\"id\": \"fldLePInM1rbW\", \"name\": \"【手工配置】上架模板\", \"type\": 7, \"property\": {\"limitToView\": \"viwuYgmvAMy2e\", \"brotherFieldId\": \"fldlJgV7f877h\", \"foreignDatasheetId\": \"dstdNw6i4e9BUPVy0G\"}}, \"fldM6AmjjcNeB\": {\"id\": \"fldM6AmjjcNeB\", \"name\": \"TAG_NAME\", \"type\": 19, \"property\": {\"defaultValue\": \"\"}}, \"fldi0l7r6q0uZ\": {\"id\": \"fldi0l7r6q0uZ\", \"name\": \"成功上架的模板\", \"type\": 14, \"property\": {\"filterInfo\": {\"conditions\": [{\"value\": true, \"fieldId\": \"fldbGLTxpVKyO\", \"operator\": \"is\", \"fieldType\": 16, \"conditionId\": \"cdt6Z85V4IsRu\"}], \"conjunction\": \"and\"}, \"openFilter\": true, \"rollUpType\": \"ARRAYUNIQUE\", \"datasheetId\": \"dstzS1VRVQynS75CXW\", \"relatedLinkFieldId\": \"fldLePInM1rbW\", \"lookUpTargetFieldId\": \"fld0G9emDlpj8\"}}, \"fldtScY2JygCN\": {\"id\": \"fldtScY2JygCN\", \"name\": \"模板个数\", \"type\": 16, \"property\": {\"expression\": \"COUNTA({fldLePInM1rbW})\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstzS1VRVQynS75CXW\"}}, \"fldvKJr4thl4Y\": {\"id\": \"fldvKJr4thl4Y\", \"name\": \"SHELF_STATUS\", \"type\": 16, \"property\": {\"expression\": \"{fldi0l7r6q0uZ} != BLANK()\", \"formatting\": {\"symbol\": \"¥\", \"precision\": 0, \"formatType\": 2}, \"datasheetId\": \"dstzS1VRVQynS75CXW\"}}}}","dstId":"dstzS1VRVQynS75CXW","id":1598171182280667138}],"resourceMetas":[]}