{
    "id": "integration",
    "realm": "integration",
    "displayName": "维格通行证",
    "registrationFlow": "registration",
    "enabled": true,
    "internationalizationEnabled": true,
    "supportedLocales": [
        "zh-CN"
    ],
    "defaultLocale": "zh-CN",
    "resetPasswordAllowed": true,
    "registrationAllowed": true,
    "browserSecurityHeaders": {
        "contentSecurityPolicy": "frame-src https:; child-src https:;frame-ancestors 'self'; object-src 'none'"
    },
    "identityProviders": [
        {
            "alias": "wechat_open",
            "internalId": "0d564d58-f275-4720-9f92-be3a2e323233",
            "providerId": "wechat_open",
            "enabled": true,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": false,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "firstBrokerLoginFlowAlias": "Simple Login Flow",
            "config": {
                "syncMode": "IMPORT",
                "clientSecret": "65aab95fd44025271d4fda2a0ba9c40e",
                "clientId": "wx5e5034a02b290ae9",
                "useJwksUrl": "true",
                "redisHost": "172.16.50.167",
                "redisPort": "30682",
                "redisPassword": "redis@vikadata",
                "authAppId": "wx3ccd2f6264309a7c",
                "componentToken": "vikadataWechat2020",
                "componentAesKey": "6UymNoC90oXNjO109ro1UoDJ45cd1G3syLa08VZUYu8",
                "messageRemark": "更多操作请前往WEB端（vika.cn）进行。",
                "loginUrl": "https://integration.vika.ltd/login",
                "messageTemplateId": "HH_VkCYNwTeiuExIgriGZxrjKYxm-SGUCO7DSvPegSE"
            }
        },{
            "alias": "ding_talk",
            "internalId": "b3133622-6ed8-40a5-a4e7-fda088bca03d",
            "providerId": "ding_talk",
            "enabled": true,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": false,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "firstBrokerLoginFlowAlias": "Simple Login Flow",
            "config": {
                "syncMode": "IMPORT",
                "clientSecret": "m9OlO1CleuRaLYwWX8w0FCUfQAIASSCOpyVa2ZdRvKL6PsvktNP3XWfEtyMIJDDq",
                "clientId": "dingoabk6kuj5klzw5nsbo",
                "useJwksUrl": "true",
                "redirectUri": "http://id.vika.ltd/auth/realms/integration/broker/ding_talk/endpoint",
                "loginUrl": "https://integration.vika.ltd/login"
            }
        },
        {
            "alias": "feishu",
            "internalId": "0c1bc15c-dda9-42d6-a054-827c472ab523",
            "providerId": "feishu",
            "enabled": true,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": false,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "firstBrokerLoginFlowAlias": "Simple Login Flow",
            "config": {
                "syncMode": "IMPORT",
                "clientSecret": "5YZ2Q9tEnRotloiCM1yHlggXniVvk42X",
                "clientId": "cli_a1f51a8cbf3b500e",
                "loginUrl": "https://integration.vika.ltd/login",
                "useJwksUrl": "true"
            }
        },
        {
            "alias": "qq",
            "internalId": "a6d3265a-882a-476e-a476-51a044028b02",
            "providerId": "qq",
            "enabled": true,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": false,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "firstBrokerLoginFlowAlias": "Simple Login Flow",
            "config": {
                "syncMode": "IMPORT",
                "clientSecret": "ce67f54b85ee7fcb488f684a501b331b",
                "clientId": "101981818",
                "loginUrl": "https://integration.vika.ltd/login",
                "useJwksUrl": "true"
            }
        }
    ],
    "clients": [
        {
            "id": "a83e55e6-2cae-485d-875f-8839b6bd661d",
            "clientId": "vika-user-confidential",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "19c32713-3402-48ca-962c-3f679888f500",
            "redirectUris": [
                "http://127.0.0.1*",
                "http://bbs.vika.ltd/*",
                "https://id.vika.cn/*",
                "https://bbs.vika.ltd/*",
                "http://localhost*",
                "http://bbs-test.vika.ltd/*",
                "http://44505t69x8.zicp.vip/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "saml.force.post.binding": "false",
                "saml.multivalued.roles": "false",
                "token.endpoint.auth.signing.alg": "RS256",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "saml.server.signature.keyinfo.ext": "false",
                "use.refresh.tokens": "true",
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "client_credentials.use_refresh_token": "false",
                "client.offline.session.idle.timeout": "900",
                "require.pushed.authorization.requests": "false",
                "saml.client.signature": "false",
                "id.token.as.detached.signature": "false",
                "saml.assertion.signature": "false",
                "saml.encrypt": "false",
                "login_theme": "vika",
                "saml.server.signature": "false",
                "exclude.session.state.from.auth.response": "false",
                "saml.artifact.binding": "false",
                "saml_force_name_id_format": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "saml.authnstatement": "false",
                "display.on.consent.screen": "false",
                "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {
                "direct_grant": "ad5a4ef5-c271-405f-a26f-e8b1a61ed7a9",
                "browser": "afecab25-9d92-46f8-8a27-b5e22a97969f"
            },
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "7008594e-fe42-456a-a227-cc3552cee49b",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nick_name",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nick_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "503b9d41-d2ca-4d3c-a59d-a38c49228851",
                    "name": "avatar",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "avatar",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "avatar",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "82ae2945-013a-4f4f-9ac6-6e86e08661a5",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e6c7f94c-095c-480b-a993-0b576265e617",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "mobile_phone",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "mobile_phone",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "abad4a20-b87b-47c6-80e2-40428856f705",
                    "name": "uuid",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "uuid",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "uuid",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "smtpServer": {
        "password": "**********",
        "starttls": "",
        "auth": "true",
        "port": "465",
        "host": "smtp.qiye.aliyun.com",
        "replyTo": "email-server@vikadata.com",
        "from": "email-server@vikadata.com",
        "envelopeFrom": "email-server@vikadata.com",
        "ssl": "true",
        "user": "email-server@vikadata.com"
    },
    "loginTheme": "keycloak",
    "accountTheme": "keycloak",
    "adminTheme": "keycloak",
    "emailTheme": "keycloak",
    "components": {
        "org.keycloak.storage.UserStorageProvider": [
            {
                "id": "b5a800fc-7f54-4bd5-8cee-e055a6266891",
                "name": "jdbc-storage",
                "providerId": "jdbc-storage",
                "subComponents": {},
                "config": {
                    "cachePolicy": [
                        "NO_CACHE"
                    ],
                    "priority": [
                        "0"
                    ],
                    "enabled": [
                        "true"
                    ],
                    "hibernate.hikari.username": [
                        "vika_read"
                    ],
                    "hibernate.hikari.maxLifetime": [
                        "36000000"
                    ],
                    "hibernate.hikari.minimumIdle": [
                        "10"
                    ],
                    "hibernate.hikari.password": [
                        "vika@read#162127"
                    ],
                    "hibernate.hikari.idleTimeout": [
                        "600000"
                    ],
                    "hibernate.hikari.autoCommit": [
                        "true"
                    ],
                    "hibernate.hikari.maximumPoolSize": [
                        "20"
                    ],
                    "hibernate.hikari.connectionTimeout": [
                        "60000"
                    ],
                    "hibernate.hikari.jdbcUrl": [
                        "jdbc:mysql://vika-mysql-8.cstoexorttus.rds.cn-northwest-1.amazonaws.com.cn:3306/vikadata"
                    ],
                    "hibernate.hikari.poolName": [
                        "HikariCP"
                    ]
                }
            }
        ]
    },
    "supportedLocales": [
        "zh-CN"
    ],
    "defaultLocale": "zh-CN",
    "authenticationFlows": [
        {
            "id": "23f1faf1-99bc-441d-bd32-92a28daa17e6",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "2e55890c-6d26-4d54-abf7-792df92bf722",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "basic-auth",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "b7a4e03e-7688-4102-b1ae-de2497a89300",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },{
            "id": "438943ed-f1ce-4c4b-a333-24beeac907c7",
            "alias": "Simple Login Flow",
            "description": "",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 0,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "idp-auto-link",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 1,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "733a0a44-79d4-47e7-9956-82ba76b96ba4",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "857a6b7d-b16d-44e5-8f9f-e649110e5d20",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "38ce31d1-276a-47c6-a13c-d54b77e722a4",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "428adb40-61e3-43c1-9b35-d64bcadaf4fb",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "fa28ec66-8cc2-4c80-bb3e-46f2f81d55b6",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "0e96d8d7-b643-4219-acb6-27ba88fc7527",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "ffb3baac-81ab-4b9b-b5f6-20e57f6db95a",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "flowAlias": "forms",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "57cb1865-a212-4bd0-bd53-40ef59e61352",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "ad5a4ef5-c271-405f-a26f-e8b1a61ed7a9",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "0c87fa12-9e86-4397-8b19-0076338a8473",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "a469dcdd-3e80-4e21-975d-0a0be0795bcc",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "b110e424-2f41-4010-b9a6-0bb0dcfc6117",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "fd2d104b-43f7-4d52-ac79-8bc2fc7ad786",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "flowAlias": "Authentication Options",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "cd5fd66b-db3b-4f65-b2af-a4ebb5848a9b",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "13680f4e-dec3-4e25-b162-2b4b507546e3",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "264f9f09-9fd6-4c20-a7d6-ec2824b3aabb",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "ad6b5419-1ff4-4859-b219-938709b4434c",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "afecab25-9d92-46f8-8a27-b5e22a97969f",
            "alias": "vika of browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "flowAlias": "vika of browser forms",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        },
        {
            "id": "b5a0ca4a-36ac-4f47-baef-7f6d5c15f32b",
            "alias": "vika of browser Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                }
            ]
        },
        {
            "id": "beb7febb-d422-4701-89ed-0338977eab9d",
            "alias": "vika of browser forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "vika-config",
                    "authenticator": "auth-email-or-phone-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 21,
                    "userSetupAllowed": false,
                    "autheticatorFlow": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 22,
                    "flowAlias": "vika of browser Browser - Conditional OTP",
                    "userSetupAllowed": false,
                    "autheticatorFlow": true
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "4350a682-f4d8-4450-a7ae-bc9570b5c409",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "95d3a813-628e-47cf-a24e-a2c8a4f93341",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        },
        {
            "id": "a3d554ae-e6aa-46c4-9a6f-8237def83e9c",
            "alias": "vika-config",
            "config": {
                "afs_access_key_secret": "XxYFF7e8RkSuOdszPqugrmaY83hNfR",
                "afs_region_id": "cn-shenzhen",
                "afs_access_key_id": "LTAI4FbrkR6v4RfpAgL7GRN7",
                "vika_rest_api_host": "https://vika.cn"
            }
        }
    ],
    "attributes": {
        "afs_access_key_secret": "XxYFF7e8RkSuOdszPqugrmaY83hNfR",
        "afs_region_id": "cn-shenzhen",
        "vika_rest_api_host": "https://vika.cn",
        "afs_access_key_id": "LTAI4FbrkR6v4RfpAgL7GRN7"
    },
    "keycloakVersion": "15.0.0"
}