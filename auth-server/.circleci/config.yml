# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "pom.xml" }}
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - setup_remote_docker:
          version: 20.10.12
      - run:
          name: Build Docker
          environment:
            IMAGE_NAME: keycloak
          command: |
            # Init Get SemVer from Circle CI Environment Variables (Github https://github.com/vikadata/devops/blob/main/scripts/semver_ci/semver_ci.sh)
            eval "$(curl -fsSL -H 'Authorization: token '"$CR_PAT" https://raw.githubusercontent.com/vikadata/devops/main/scripts/semver_ci/semver_ci.sh)"
            env_java
            build_docker $IMAGE_NAME
      - save_cache:
          paths:
            - ~/.m2/repository
          key: v1-maven-cache-{{ checksum "pom.xml" }}

# api application filter condition
filters: &filters
  branches:
    only:
      - integration
      - master

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build:
          name: build
          filters: *filters
